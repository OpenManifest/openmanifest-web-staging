{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/LottieView.web.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/crud/factory.tsx","app/providers/dropzone/context.ts","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/providers/notifications/context.ts","app/providers/notifications/provider.tsx","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/reflection.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/hooks/useRestriction.ts","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/useManifest.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/providers/manifest/context.ts","app/hooks/useManifestValidator.ts","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/hooks/useDialog.tsx","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/forms/create_user/Form.tsx","app/forms/create_user/useForm.ts","app/forms/create_user/Dialog.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/Dialog.tsx","app/providers/dropzone/provider.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/components/Divider.tsx","app/screens/unauthenticated/login/FacebookButton.web.tsx","app/screens/unauthenticated/login/AppleButton.web.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Wizard.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/logo.png","assets/images/night.png","assets/images/weather.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AppSignalClient","Appsignal","key","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentDropzoneId","currentDropzone","currentUserId","currentUser","INITIAL_CONTEXT","appSignal","tags","setTags","noop","AppSignalContext","React","useAppSignalContext","ErrorBoundary","props","state","error","undefined","errorInfo","console","this","Fallback","fallback","children","LottieView","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","height","width","SafeAreaView","style","position","top","left","alignItems","justifyContent","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","source","twigBreakAnimation","autoPlay","loop","HelperText","type","message","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","mode","AppSignalBoundary","instance","errorBoundaryRef","current","ref","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","value","onTagsChanged","span","isEqual","addDecorator","Provider","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","rest","useContext","dropzone","permissions","called","refetch","fetchMore","dialogs","aircraft","visible","close","open","createUser","ticketType","ticketTypeAddon","DropzoneContext","useDropzoneContext","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","DropzoneWizardStep","initialState","original","fields","federation","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","action","payload","field","setFieldError","setOpen","Object","keys","forEach","payloadKey","typedKey","setOriginal","reset","role","expiresAt","exitWeight","email","phone","license","setFederation","user","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","log","Error","definition","err","jumpType","extras","load","rig","dropzoneUser","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","rigs","length","first","availableRigs","avatar","image","apfNumber","nickname","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","ghost","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","credentials","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","toString","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","operation","query","definitions","q","kind","createBreadCrumb","category","operationName","timestamp","Math","floor","Date","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","errors","graphQLErrors","response","ignore","filteredErrors","filter","breadcrumb","loc","body","print","variables","stringify","result","statusCode","addBreadcrumb","sendError","join","e","AppSignalBreadcrumbLink","forward","Observable","originalObserver","subscription","subscribe","next","omit","unsubscribe","ApolloLink","NotificationContext","useNotifications","AnimationState","NotificationsProvider","queue","setQueue","successAnimation","closed","animationState","setAnimationState","notification","variant","opening","notify","newNotification","last","onHide","newQueue","onAnimationFinish","waiting","setTimeout","Toast","show","text1","context","View","StyleSheet","absoluteFillObject","pointerEvents","speed","styles","animation","lottieDoneAnimation","autoHide","visibilityTime","create","ERROR_CODE_WHITELIST","Apollo","httpBatchLink","Update","environment","uri","urls","url","warn","BatchHttpLink","batchDebounce","batchMax","root","dispatch","errorLink","onError","networkError","some","extensions","code","process","EXPO_ENV","locations","path","nodes","authLink","setContext","_","headers","accessToken","Authorization","tokenType","useAppSignal","appSignalLink","from","createAppSignalLink","includes","link","ApolloClient","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloProvider","EntrypointWrapper","absoluteFill","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","TicketTypeAddonEssentialsFragmentDoc","TicketTypeDetailsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","TicketTypeAddonDetailsFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateAircraftDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreateRigDocument","CreateRigInspectionDocument","CreateTicketAddonDocument","CreateTicketTypeDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateAircraftDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","useUpdateDropzoneUserMutation","UpdateLoadDocument","UpdateLostPasswordDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketAddonDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","useTicketTypesQuery","useDropzone","vars","dropzoneId","useDropzoneQuery","initialFetchPolicy","skip","data","queryVariables","permissionsVariables","useCurrentUserPermissionsQuery","useDropzonesQuery","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","event","fieldErrors","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","useRestriction","permission","isRequired","pattern","isEmail","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","opts","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","test","validate","requestAnimationFrame","updateLoad","useLoad","useLoadQuery","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","update","useMutationUpdateLoad","loadNumber","manifestUser","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","minutes","dispatchTime","DateTime","local","plus","toISO","dispatchAt","BoardingCall","Open","updateLoadState","updatePilot","pilot","updateGCA","gca","updatePlane","plane","updateLoadMaster","lm","loadMaster","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","time","fromSeconds","useUserProfile","updateMutation","getProfile","useCreateOrderMutation","mutationCreateOrder","useCreateGhostMutation","mutationCreateGhost","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","attributes","refetchQueries","createGhost","updateDropzoneUser","createOrder","mutationResult","order","buyer","__typename","writeFragment","fragment","fragmentName","identify","seller","addCredits","amount","walletId","withdrawCredits","useRevokePermissionMutation","revoke","useGrantPermissionMutation","grant","grantPermission","dropzoneUserId","permissionName","revokePermission","useManifest","date","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","useLoadsQuery","utc","toISODate","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","updateQuery","moveSlot","sourceLoad","mutationVariables","targetLoad","loads","createSlots","deleteSlot","createLoad","prev","useTickets","ticketTypes","loadingTickets","useCreateTicketTypeMutation","createTicket","useUpdateTicketTypeMutation","updateTicket","useArchiveTicketTypeMutation","archiveTicket","useCreateTicketAddonMutation","createAddon","useUpdateTicketAddonMutation","updateAddon","createTicketType","updateTicketType","createTicketTypeAddon","fetchPolicy","createExtra","updateTicketTypeAddon","updateExtra","archiveTicketType","optimisticResponse","mutationData","evict","useAircrafts","useCreateAircraftMutation","createAircraft","useUpdateAircraftMutation","updateAircraft","useArchivePlaneMutation","archiveAircraft","createPlane","planes","archive","deletePlane","aircrafts","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","DialogOrSheet","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","Typography","marginBottom","IconButton","icon","size","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","defaultValue","render","onChange","onBlur","formState","TextField","helperText","setText","onChangeText","TextInput","flatten","surface","NumberFieldType","FormTextField","flex","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","label","onChangeValue","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","selected","margin","ChipSelectComponent","previous","ChipSelectField","defaultColors","ThemedSkeleton","boneColor","Color","negate","rgb","highlightColor","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","requiredPermissions","onLoadingStateChanged","onChangeSelected","getItemLabel","Boolean","Subheader","uniqBy","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","allowedForDropzoneUserIds","allowedJumpTypes","jumpTypes","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","LicenseChipSelectField","PlaneChipSelect","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","split","n","Image","Text","stringToColor","string","hash","charCodeAt","substr","initials","Avatar","sx","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","currentTarget","TouchableOpacity","anchorOrigin","vertical","transformOrigin","Select","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","labelId","paddingTop","SelectDisplayProps","val","RigSelect","loadId","tandem","useAvailableRigsLazyQuery","fetchRigs","isTandem","RigSelectField","ManifestForm","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","credits","ManifestContext","useManifestContext","schema","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","canManifest","abortEarly","manifestUserValidation","min","max","of","EMPTY_FORM_VALUES","ManifestUserDialog","initial","initialValues","defaultValues","setDefaultValues","methods","useForm","resolver","yupResolver","handleSubmit","setError","useAsyncFn","onManifest","onSubmit","portal","usePortal","removePortal","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","maxSlots","isOpen","LoadDialog","setValue","validatedFields","snapPoints","scrollable","CreditsForm","subtotal","Deposit","Withdrawal","DataTable","Row","Cell","numeric","orderValidation","integer","oneOf","values","DropzoneUserDialog","shouldUnregister","onCreateOrder","useCreditsForm","defaultIndex","onChangeIndex","newIndex","form","paddingHorizontal","createUseDialog","defaults","setState","newState","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","manifestUserDialog","loadDialog","creditsDialog","TimePicker","onDismissSingle","onConfirm","timestampLabel","format","Item","description","Icon","Modal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","then","withLoadContext","AircraftForm","aircraftValidation","registration","minSlots","basicEmptyWeight","maxTakeOffWeight","fuelType","AircraftDialog","register","validated","useAircraftForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","FederationSelect","federations","FederationSelectField","JumpTypeSelect","LicenseSelect","PlaneSelect","onCHange","RoleSelect","roles","a","b","RoleSelectField","TicketTypeSelect","allowManifestingSelf","GhostForm","ghostValidation","optional","federationUid","CreateGhostDialog","federationNumber","Switch","onValueChange","SwitchField","TicketTypeForm","altitude","useTicketTypeExtrasLazyQuery","getTicketAddons","ticketTypeValidation","TicketTypeDialog","extraIds","selectedTicketTypes","ticketAddonValidation","ticketTypeIds","onSave","useAircraftDialog","useCreateUserDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","token","isDevice","existingStatus","finalStatus","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","updateUser","Device","registerForPushNotificationsAsync","request","Linking","addEventListener","removeEventListener","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","onUpdate","play","isNew","isUpdateAvailable","isAvailable","blur","intensity","fontSize","bottom","ImageViewer","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","empty","Paragraph","fab","DropzonesScreen","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","GradientText","opacity","Fields","KeyboardAvoidingView","behavior","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","dots","Dots","count","Array","activeDot","inactiveDot","marginLeft","WizardRoot","WizardModal","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","headerStyleInterpolator","HeaderStyleInterpolators","forFade","cardStyleInterpolator","layouts","transform","translateX","progress","interpolate","inputRange","outputRange","scale","overlayStyle","nextIndex","nextIndexFactor","onNext","goBack","backIndexFactor","onBack","Wizard","presentation","PasswordStrength","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","textContentType","secureTextEntry","passwordRules","newValue","PasswordComplexityIndicator","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","RegExp","validatePassword","onClickSignUp","licenseId","userRegister","divider","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","LoginScreen","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","emailRegex","hasError","userLogin","backgroundDark","backgroundLight","resizeMode","logoLight","logoDark","logo","card","elevation","animationContainer","loadingAnimation","onSubmitEditing","labelStyle","forgotPasswordDark","forgotPassword","textButtonLabel","borderWidth","ScrollView","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","SignupScreen","useMutationSignUp","ScrollableScreen","separator","Unauthenticated","SignUpScreen","carouselRef","getCurrentIndex","scrollTo","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","enabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","createDropzone","updateDropzone","active","itemSelected","FederationCardSelect","onSelect","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","onLayout","nativeEvent","y","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","zIndex","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Animated","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","canChangePermissions","useUpdateRoleMutation","mutationUpdatePermission","roleId","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","capitalize","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","Logo","pickImage","onPickImage","DropzoneSetupScreen","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","onFederationNumberNext","onLicenseNext","onRigNext","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","onFinished","ticketAddons","useMutationCreateGhost","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","ghostForm","omitBy","isEmpty","canCreateUser","CreateUser","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","inputContainer","input","AppBar","onSearch","back","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","centerAlignedContent","SwipeActions","rightAction","Swipeable","renderRightActions","dragX","childrenContainerStyle","useNativeAnimations","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsLoadMaster","PermissionBadges","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","useApolloClient","getCachedUser","readFragment","mutationUpdateDropzoneUser","createData","userRoleId","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","OrderCard","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","round","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","DrawerActions","closeDrawer","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","truncate","LoadMasterChip","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","profile","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","AvailableRow","useCallback","SlotsTable","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadScreen","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","loadingAircrafts","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","createToggleManifestSelfHandler","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","useQuery","masterLog","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","ExtrasScreen","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","notifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","dimensions","setDimensions","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","endDate","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","UserListScreen","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","remove","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"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","file":"static/js/app.18415bf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n    createUser: IDialogContextSubstate<Pick<ICreateGhostDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    createUser: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt?: Maybe<Scalars['ISO8601DateTime']>;\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = AnyResource & SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\nimport { User } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email'> &\n  Pick<DropzoneUserDetailsFragment, 'role' | 'license'>;\n\ninterface IGhostEditState {\n  original: UserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (\n      state: IGhostEditState,\n      action: PayloadAction<FederationEssentialsFragment>\n    ) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IGhostEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license' || typedKey === 'role') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as ghost from './ghost/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  ghost: ghost.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  ghost: ghost.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(\n    () => ({ notify, success, error, info }),\n    [error, info, notify, success]\n  );\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\n","import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport config from 'app/constants/expo';\nimport { Platform } from 'react-native';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\nimport { relayStylePagination } from '@apollo/client/utilities';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const notify = useNotifications();\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Release channel', Update.releaseChannel);\n    const environment =\n      Platform.OS === 'web' ? config?.environment : config?.environment || Update.releaseChannel;\n    const uri = environment in (config?.urls || {}) ? config?.urls[environment] : config?.url;\n    console.warn({ uri, environment });\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          notify.info(`Session expired`);\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          notify.error(`[Network error]: ${networkError}`);\n        }\n      }),\n    [dispatch, notify]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            'Fly-Prefer-Region': 'syd',\n            'Fly-Region': 'syd',\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const { appSignal } = useAppSignal();\n  const appSignalLink = React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n\n  const link = React.useMemo(\n    () => ApolloLink.from([errorLink, appSignalLink, authLink, httpBatchLink]),\n    [appSignalLink, authLink, errorLink, httpBatchLink]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link,\n        cache: new InMemoryCache({\n          typePolicies: {\n            Event: relayStylePagination(),\n            DropzoneUsers: relayStylePagination(),\n            Loads: relayStylePagination(),\n          },\n        }),\n      }),\n    [link]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n  updateDropzoneUser(\n    input: {id: $dropzoneUserId, attributes: {userRoleId: $userRoleId, expiresAt: $expiresAt}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      userRoleId: // value for 'userRoleId'\n *      expiresAt: // value for 'expiresAt'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: Int, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  dropzone(id: $dropzone) {\n    id\n    ticketTypes(isPublic: $onlyPublicTickets) {\n      ...ticketTypeDetails\n    }\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useCurrentUserPermissionsQuery, useDropzoneQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useDropzoneQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const permissions = useCurrentUserPermissionsQuery({\n    variables: permissionsVariables as CurrentUserPermissionsQueryVariables,\n    skip: !permissionsVariables?.dropzoneId,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { useDropzonesQuery, useUpdateVisibilityMutation } from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const query = useDropzonesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken,\n  });\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema.d';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useFinalizeLoadMutation, useLoadQuery, useManifestUserMutation } from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const notify = useNotifications();\n  const query = useLoadQuery({\n    initialFetchPolicy: 'cache-first',\n    variables: variables as LoadQueryVariables,\n    skip: !variables?.id,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () => notify.success(`Load #${load?.loadNumber} updated`),\n    onError: (message) => notify.error(message),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n  UserEssentialsFragment,\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateGhostMutation,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  useUpdateDropzoneUserMutation,\n} from '../reflection';\nimport { GhostInput, Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateDropzoneUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const [mutationCreateGhost] = useCreateGhostMutation();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  React.useEffect(() => {\n    if (id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [getProfile, id, query?.variables?.id]);\n\n  const create = React.useCallback(\n    async function CreateGhost(\n      attributes: GhostInput\n    ): Promise<TMutationResponse<{ user: UserEssentialsFragment }>> {\n      try {\n        const response = await mutationCreateGhost({\n          variables: attributes,\n          refetchQueries: [\n            DropzoneUsersDocument,\n            { query: DropzoneUsersDocument, variables: { dropzoneId: dropzone?.id } },\n          ],\n        });\n\n        if (response?.data?.createGhost?.user?.id) {\n          return { user: response?.data?.createGhost?.user };\n        }\n        return {\n          error: response?.data?.createGhost?.errors?.[0],\n          fieldErrors: response?.data?.createGhost?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        console.debug('CreateGhost failed', error);\n        if (error instanceof Error) {\n          appSignal?.sendError(error);\n        }\n        return { error: 'Oh no, something went wrong' };\n      }\n    },\n    [appSignal, dropzone?.id, mutationCreateGhost]\n  );\n  const update = React.useCallback(\n    async function UpdateDropzoneUser(\n      attributes: UpdateDropzoneUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          ...attributes,\n        },\n      });\n\n      if (data?.updateDropzoneUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateDropzoneUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateDropzoneUser?.errors?.[0],\n        fieldErrors: data?.updateDropzoneUser?.fieldErrors || undefined,\n      };\n    },\n    [updateMutation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes,\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order.buyer.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer,\n                });\n              } else if (order.seller.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller,\n                });\n              }\n            }\n          },\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Added funds`,\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Withdrew funds`,\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined,\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined,\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      create,\n      update,\n      addCredits,\n      grantPermission,\n      revokePermission,\n      withdrawCredits,\n    }),\n    [\n      addCredits,\n      grantPermission,\n      query?.refetch,\n      create,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits,\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(\n  useUserProfile,\n  {\n    loading: false,\n    dropzoneUser: null,\n    refetch: uninitializedHandler as never,\n    update: uninitializedHandler as never,\n    create: uninitializedHandler as never,\n    addCredits: uninitializedHandler as never,\n    withdrawCredits: uninitializedHandler as never,\n    grantPermission: uninitializedHandler as never,\n    revokePermission: uninitializedHandler as never,\n  }\n);\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.utc().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useTicketTypesQuery,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n  TicketTypeExtrasDocument,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useTicketTypesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzone,\n  });\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  console.debug({ loadingTickets: loading, ticketTypes });\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [\n          {\n            query: TicketTypeExtrasDocument,\n            variables: { dropzoneId: dropzone?.id },\n            fetchPolicy: 'network-only',\n          },\n        ],\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  usePlanesQuery,\n  PlanesDocument,\n  useArchivePlaneMutation,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = usePlanesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button\n          mode=\"contained\"\n          disabled={loading}\n          {...{ loading }}\n          onPress={buttonAction}\n          style={styles.button}\n        >\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(\n  Component: React.ComponentType<BaseProps>\n) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, formState: { errors } }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onChange, onBlur }}\n            error={errors?.[name]?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const {\n    label,\n    requiredPermissions,\n    icon,\n    value,\n    variant,\n    error,\n    onLoadingStateChanged,\n    onChange,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.dropzone?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => onChange(target.value as T)}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <MuiMenuItem value={val as T}>\n            {!icon || avatar ? null : (\n              <ListItemIcon>\n                {typeof icon === 'string' ? (\n                  <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                ) : null}\n                {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n              </ListItemIcon>\n            )}\n            {!avatar || !showAvatars ? null : (\n              <ListItemAvatar>\n                <UserAvatar name={label} image={avatar} size={32} />\n              </ListItemAvatar>\n            )}\n            <ListItemText primary={title} />\n          </MuiMenuItem>\n        ))}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const manifestUserValidation = yup.object().shape({\n  load: yup.object().required(),\n  exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n  rig: yup.object().required('You cant manifest without a rig').nullable(),\n  jumpType: yup.object().required('Jump type is required').nullable(),\n  ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n  original: yup.object().nullable(),\n  extras: yup.array().of(yup.object()).nullable(),\n});\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight,\n              }),\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined,\n    },\n    onSuccess,\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<\n  Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>\n> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: Number(validatedFields.gca?.id),\n          state: LoadState.Open,\n          pilot: Number(validatedFields.pilot?.id),\n          plane: Number(validatedFields.plane?.id),\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name,\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser,\n  });\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date, children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud/useLoad';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: { loading: false, mutate: uninitializedHandler as never },\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud/useAircrafts';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup\n    .number()\n    .integer()\n    .required('Maximum slots is required')\n    .min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup\n    .number()\n    .default(0)\n    .min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined,\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(field, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  console.debug('alt', { value, props });\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map(({ permissions, ...node }) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { FederationSelectField, RoleSelectField } from 'app/components/input/dropdown_select';\nimport { LicenseChipSelectField } from 'app/components/input/chip_select';\n\nimport { UserFields } from './useForm';\n\ninterface IGhostFormProps {\n  control: Control<UserFields>;\n}\nexport default function GhostForm(props: IGhostFormProps) {\n  const { control } = props;\n\n  const { federation, license } = useWatch({ control });\n\n  return (\n    <>\n      <FormTextField label=\"Name\" name=\"name\" {...{ control }} />\n\n      <FormTextField label=\"Nickname\" name=\"nickname\" placeholder=\"Optional\" {...{ control }} />\n\n      <FormTextField label=\"Email\" name=\"email\" {...{ control }} />\n      <FormTextField label=\"Phone number\" name=\"phone\" {...{ control }} />\n\n      <FormNumberField label=\"Exit weight (kg)\" name=\"exitWeight\" {...{ control }} />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelectField {...{ control }} name=\"federation\" />\n\n        {(license?.federation?.id || federation?.id) && (\n          <LicenseChipSelectField name=\"license\" {...{ control }} />\n        )}\n      </View>\n      <RoleSelectField name=\"role\" {...{ control }} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport {\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  RoleEssentialsFragment,\n  UserEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type UserFields = {\n  id?: string | null;\n  name: string;\n  phone?: string | null;\n  federationUid?: string | null;\n  nickname: string;\n  email: string;\n  exitWeight: number;\n  federation?: FederationEssentialsFragment;\n  license?: LicenseDetailsFragment;\n  role?: RoleEssentialsFragment;\n};\n\nexport const ghostValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  nickname: yup.string().optional().nullable(),\n  email: yup.string().required('Email is required to invite the user'),\n  phone: yup.string().optional().nullable(),\n  federationUid: yup.string().optional().nullable(),\n  exitWeight: yup\n    .number()\n    .required('Exit weight is required')\n    .min(40, 'Exit weight must be more than 40kg')\n    .default(50),\n  federation: yup.object().required('Federation must be selected'),\n  license: yup.object().required('All jumpers must have a license'),\n  role: yup.object().required('You must select a role'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<UserFields> = {\n  name: '',\n  nickname: '',\n  email: '',\n  role: undefined,\n  license: undefined,\n  exitWeight: 50,\n  federation: undefined,\n  id: null,\n  phone: '',\n  federationUid: null,\n};\n\nexport interface IUseUserFormOpts {\n  initial?: Partial<UserFields>;\n  onSuccess?(user: UserEssentialsFragment): void;\n}\n\nexport default function useUserForm(opts: IUseUserFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<UserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ghostValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('license');\n    register('federation');\n    register('role');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create } = useUserProfile();\n  const notify = useNotifications();\n\n  const [{ loading }, createUser] = useAsyncFn(\n    async (fields: UserFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ghostValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = await create({\n          dropzone: Number(dropzone.id),\n          email: validated.email,\n          name: validated.name,\n          exitWeight: validated.exitWeight,\n          role: Number(validated.role?.id),\n          license: Number(validated?.license?.id),\n          federationNumber: validated?.federationUid,\n          phone: validated?.phone,\n        });\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('user' in response && response.user) {\n            notify.success(`${validated.name} has been invited`);\n            onSuccess?.(response.user);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, defaultValues, create]\n  );\n\n  const { control, setValue } = methods;\n  const { federation, license } = useWatch({ control });\n\n  React.useEffect(() => {\n    if (license?.federation && license?.federation?.id !== federation?.id) {\n      setValue('federation', license.federation as FederationEssentialsFragment);\n    }\n  }, [federation?.id, license?.federation, setValue]);\n\n  const onSubmit = React.useMemo(() => handleSubmit(createUser), [createUser, handleSubmit]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport GhostForm from './Form';\nimport useForm, { UserFields } from './useForm';\n\nexport interface ICreateGhostDialog {\n  open?: boolean;\n  original?: DropzoneUserEssentialsFragment;\n  initial?: Partial<UserFields>;\n  onClose(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.user?.name || initial?.name,\n      nickname: original?.user?.nickname || initial?.nickname,\n      phone: original?.user?.phone || initial?.phone,\n      license: original?.license || initial?.license,\n      federation: initial?.federation,\n      email: original?.user?.email || initial?.email,\n      role: original?.role || initial?.role,\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      {...{ open, loading, onClose, snapPoints }}\n      buttonAction={onSubmit}\n      buttonLabel=\"Create\"\n    >\n      <GhostForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onValueChange={onChange}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  console.debug({ altitude });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().default(14000).required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('altitude');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude || 14000,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [\n      dropzone?.id,\n      setError,\n      notify,\n      onSuccess,\n      createTicketTypeAddon,\n      updateTicketTypeAddon,\n      defaultValues,\n    ]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport AircraftSheet from 'app/forms/aircraft/Dialog';\nimport CreateUserSheet from 'app/forms/create_user/Dialog';\nimport TicketTypeSheet from 'app/forms/ticket_type/Dialog';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon/Dialog';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useCreateUserDialog = createUseDialog<Pick<ICreateGhostDialog, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const createUser = useCreateUserDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon, createUser }),\n    [aircraft, ticketType, ticketTypeAddon, createUser]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <CreateUserSheet {...createUser.state} onClose={createUser.close} open={createUser.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import Constants from 'expo-constants';\nimport * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: Number(currentUser.id),\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width || 0, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return <WizardRoot.Screen name={`${name}${index}`}>{() => <Step />}</WizardRoot.Screen>;\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  // @ts-ignore These are dynamically created screens\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                // @ts-ignore These are dynamically created screens\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator screenOptions={{ headerShown: false, presentation: 'modal' }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userRegister?.fieldErrors?.length) {\n        result?.data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import * as React from 'react';\nimport {\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Card, Button, HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\nimport FacebookButton, { useLoginWithFacebook } from './FacebookButton';\nimport AppleButton, { useLoginWithApple } from './AppleButton';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    }\n  }, [dispatch, mutationLogin, notify, state.fields.email.value, state.fields.password.value]);\n\n  const loading =\n    loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading;\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={theme.dark ? logoLight : logoDark} style={styles.logo} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={styles.card} elevation={3}>\n          <Card.Content>\n            {loading ? (\n              <View style={styles.animationContainer}>\n                <LottieView\n                  autoPlay\n                  loop\n                  style={styles.loadingAnimation}\n                  // eslint-disable-next-line global-require\n                  source={require('../../../../assets/images/loading.json')}\n                />\n              </View>\n            ) : (\n              <>\n                <TextInput\n                  label=\"Email\"\n                  mode=\"outlined\"\n                  value={state.fields.email.value}\n                  disabled={loading}\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setEmail(newValue));\n                  }}\n                />\n                <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n                <TextInput\n                  label=\"Password\"\n                  mode=\"outlined\"\n                  disabled={loading}\n                  value={state.fields.password.value}\n                  secureTextEntry\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setPassword(newValue));\n                  }}\n                  onSubmitEditing={onLogin}\n                  error={!!state.fields.password.error}\n                />\n\n                <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n              </>\n            )}\n            <Button\n              mode=\"contained\"\n              disabled={loading}\n              labelStyle={{ color: theme.colors.onSurface }}\n              style={[\n                styles.button,\n                { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n              ]}\n              onPress={onLogin}\n            >\n              {loading ? 'Authenticating...' : 'Log in'}\n            </Button>\n            {loading ? null : (\n              <TouchableOpacity\n                onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n              >\n                <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n                  Forgot your password?\n                </Text>\n              </TouchableOpacity>\n            )}\n\n            <Divider>or</Divider>\n            <FacebookButton\n              disabled={loading}\n              style={{ marginTop: 8 }}\n              onPress={loginWithFacebook}\n            />\n\n            <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpWizard' })}\n            >\n              Sign up\n            </Button>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginTop: 8,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserRegisterArgs, SignUpPayload } from '../schema.d';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserRegisterArgs, SignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userRegister,\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      notify.success('A confirmation link has been sent to your email');\n\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Email\"\n          error={state.fields.email.error}\n          value={state.fields.email.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['email', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Repeat password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChange={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n    </Stack.Navigator>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Carousel\n          autoPlay={false}\n          loop={false}\n          modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n          pagingEnabled={false}\n          enabled={false}\n          panGestureHandlerProps={{\n            // Disable swiping\n            activeOffsetX: [-width, width],\n          }}\n          style={{ height: '80%' }}\n          mode=\"parallax\"\n          data={steps}\n          width={width}\n          onSnapToItem={setIndex}\n          ref={carouselRef}\n          renderItem={({ item }) => {\n            if (!item) {\n              return <View />;\n            }\n            const { component: Step } = item;\n            return <Step />;\n          }}\n        />\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  carouselRef?.current?.next();\n                  setIndex(currentIndex + 1);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                carouselRef?.current?.prev();\n                setIndex(currentIndex - 1 || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.dispatch(\n      StackActions.replace('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: {\n            screen: 'ManifestScreen',\n          },\n        },\n      })\n    );\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: notify.error,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: Number(userForm?.original?.id),\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function GhostForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostDocument } from '../reflection';\nimport { CreateGhostMutation, CreateGhostMutationVariables } from '../operations';\n\nexport default createMutation<\n  CreateGhostMutationVariables,\n  Required<CreateGhostMutation>['createGhost']\n>(CreateGhostDocument, {\n  getPayload: (result) => result.createGhost,\n  validates: {\n    exitWeight: [\n      isRequired('Exit weight must be provided'),\n      isNumeric('Please enter a valid number'),\n    ],\n    email: [\n      isRequired('Please provide a valid email address'),\n      isEmail('Please provide a valid email address'),\n    ],\n    name: [isRequired('Name is required')],\n\n    role: [isRequired('You must select a role')],\n  },\n  fieldErrorMap: {\n    exitWeight: 'exit_weight',\n  },\n});\n","import * as React from 'react';\nimport { useNotifications } from 'app/providers/notifications';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        notify.success(`${payload?.user?.name} has been added to your dropzone`);\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) => notify.error(error),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzone: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      role: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, FlatList, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport CreateGhostDialog from 'app/components/dialogs/Ghost';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment, DropzoneUsersQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport omitBy from 'lodash/omitBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: omitBy<DropzoneUsersQueryVariables>(\n      {\n        dropzoneId: dropzone?.id as string,\n        search: state.searchText,\n      },\n      isEmpty\n    ) as DropzoneUsersQueryVariables,\n    skip: !dropzone?.id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  console.debug({ users, numColumns });\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{\n                margin: 0,\n                marginVertical: 0,\n                borderRadius: 2,\n                width: `${100 / numColumns}%`,\n              }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={dialogs.createUser.open}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions, View } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  scrollable?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const {\n    style,\n    children,\n    fullWidth = false,\n    scrollable = true,\n    contentContainerStyle,\n    ...rest\n  } = props;\n\n  if (!scrollable) {\n    return <View style={{ flex: 1, width: '100%' }}>{children}</View>;\n  }\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth\n            ? { paddingHorizontal: 0 }\n            : { width: width < 920 ? '100%' : 920, paddingHorizontal: 16 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    alignItems: 'flex-start',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke(permission)\n                : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        owner {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('is required')],\n    model: [isRequired('is required')],\n    serial: [isRequired('number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success(`Profile has been updated`);\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(state.original?.id),\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n\n  console.log('image', dropzoneUser?.user?.image);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            <UserAvatar\n              image={dropzoneUser?.user?.image}\n              name={dropzoneUser?.user?.name}\n              size={80}\n            />\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.buyer as DropzoneUser)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: Number(dropzoneUser?.id),\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone },\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                },\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport { View } from 'react-native';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n          {value?.user?.name || 'No gca'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          onChange={onSelect}\n          renderAnchor={renderAnchor}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n          {value?.user?.name || 'No LM'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          renderAnchor={renderAnchor}\n          onChange={onSelect}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"account-tie-hat\"\n      >\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 146 }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 146 }}>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"airplane\"\n      >\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 100 }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 100 }}>\n      <Select<PlaneEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={{ maxWidth: 128 }}>\n            <RigSelect\n              small\n              variant=\"chip\"\n              dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n              onChange={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers/manifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction },\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } }),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport { DateTime } from 'luxon';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && DateTime.fromSeconds(load.dispatchAt) > DateTime.local() ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const {\n    load: { load },\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  scrollable?: boolean;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    fields,\n    onDeletePress,\n    scrollable = false,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={scrollable ? { height: '100%' } : undefined}>\n      <DataTable style={scrollable ? { height: '100%', paddingBottom: 80 } : undefined}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map(\n            (_, index) => load?.slots?.[index] || null\n          )}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow\n                {...{ onPress: onAvailableSlotPress }}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`slot-available-${index}`}\n                index={index}\n              />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport { Screen } from 'app/components/layout';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n/**\n *\n *\n * @returns\n */\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <Screen fullWidth scrollable={Platform.OS !== 'web'}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        scrollable={Platform.OS === 'web'}\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </Screen>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n  ]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers/manifest';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers/load';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        maxWidth: 450,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    maxWidth: 450,\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      update,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          scrollable={Platform.OS === 'web'}\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8, marginVertical: 16 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Master Log\"\n          disabled\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"View historic data for daily operations. Temporarily disabled\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'MasterLogScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveTicketHandler(ticketType),\n              }}\n            >\n              <DataTable.Row\n                onPress={() => {\n                  dialogs.ticketType.open({ original: ticketType });\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n                <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n                <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <View pointerEvents=\"box-none\">\n                    <Switch\n                      onValueChange={createToggleManifestSelfHandler(ticketType)}\n                      value={!!ticketType.allowManifestingSelf}\n                    />\n                  </View>\n                </DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          </View>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onChange={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const {\n    dropzone: { dropzone, loading },\n  } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) => notify.error(message),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        notify.success(`Your settings have been saved`);\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id, notify]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm loading={loading} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <View style={{ height: 46 }}>\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: createArchiveAircraftHandler(plane),\n                }}\n              >\n                <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            </View>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    notify,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { Query } from 'app/api/schema.d';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: ID!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n              user {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          value={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.dropzoneUser?.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables, fetchPolicy: 'cache-and-network' });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      <FlatList\n        ListEmptyComponent={() => (\n          <View style={styles.empty}>\n            <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n          </View>\n        )}\n        contentContainerStyle={styles.content}\n        onRefresh={fetchNotifications}\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        refreshing={loading}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={StyleSheet.absoluteFill}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  User: {\n                    screens: {\n                      EquipmentScreen: '/dropzone/manifest/users/:userId/equipment/',\n                      OrderReceiptScreen:\n                        '/dropzone/manifest/users/:userId/orders/:orderId/receipts',\n                      ProfileScreen: '/dropzone/manifest/users/:userId',\n                      OrdersScreen: '/dropzone/manifest/users/:userId/orders',\n                      RigInspectionScreen:\n                        '/dropzone/manifest/users/:dropzoneUserId/rig/:rigId/inspection',\n                      UserListScreen: '/dropzone/manifest/users',\n                    },\n                  },\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";"],"sourceRoot":""}