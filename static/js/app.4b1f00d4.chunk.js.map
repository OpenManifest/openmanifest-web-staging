{"version":3,"sources":["app/components/map/Map.web.tsx","app/utils/calculateLatLngDelta.ts","app/utils/calculateCoordinatesByAngle.ts","assets/images/logo.png","assets/images/weather.png","assets/images/night.png","app/screens/authenticated/manifest/Weather/JumpRun.tsx","assets/fonts/SpaceMono-Regular.ttf","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/forms/credits/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/dialogs/UserWizard/slice.tsx","app/screens/authenticated/dropzone_setup/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/constants/Colors.ts","app/hooks/usePalette.ts","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/api/reflection.tsx","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/number_input/NumberField.tsx","app/api/createQuery.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/api/hooks/useMutationUpdateRig.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useDropzoneUser.ts","app/components/dialogs/User.tsx","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/UserInfo/PermissionBadges.tsx","app/screens/authenticated/profile/SlotCard.tsx","app/screens/authenticated/profile/ProfileScreen.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/components/UserAvatar.tsx","app/screens/authenticated/transactions/OrderCard.tsx","app/screens/authenticated/transactions/TransactionsScreen.tsx","app/screens/authenticated/equipment/RigCard.tsx","app/screens/authenticated/equipment/EquipmentScreen.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/screens/authenticated/transactions/TransactionCard.tsx","app/screens/authenticated/transactions/OrderScreen.tsx","app/screens/authenticated/transactions/DropzoneTransactionsScreen.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/manifest.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/navigation/tabs/users.tsx","app/navigation/tabs/notifications.tsx","app/navigation/AnimatedTabBar.web.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/screens/authenticated/dropzones/CreateDropzoneScreen.tsx","app/navigation/LimboRoutes.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/navigation/Unauthenticated.tsx","app/screens/authenticated/dropzone_setup/steps/Name.tsx","app/screens/authenticated/dropzone_setup/steps/Location.web.tsx","app/screens/authenticated/dropzone_setup/steps/Aircraft.tsx","app/screens/authenticated/dropzone_setup/steps/Theming.tsx","app/screens/authenticated/dropzone_setup/steps/Permissions.tsx","app/screens/authenticated/dropzone_setup/steps/TicketType.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/screens/authenticated/dropzone_setup/DropzoneSetupScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/api/hooks/useQueryDropzones.ts","app/navigation/drawer/Drawer.tsx","app/navigation/RootNavigator.tsx","app/components/dialogs/UserWizard/steps/Federation.tsx","app/components/dialogs/UserWizard/steps/Rig.tsx","app/components/dialogs/UserWizard/steps/ReserveRepack.tsx","app/components/dialogs/UserWizard/steps/AskForRig.tsx","app/components/dialogs/UserWizard/steps/Wingloading.tsx","app/components/dialogs/UserWizard/UserWizardScreen.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["Map","props","width","height","position","children","center","coords","shape","interactive","onDragEnd","isLoaded","useJsApiLoader","googleMapsApiKey","id","containerStyle","mapStyle","map","React","onLoad","component","a","async","current","Location","status","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","panDelayed","lat","lng","console","log","rootLayout","setRootLayout","onLayout","nativeEvent","layout","style","borderRadius","undefined","overflow","top","y","left","x","pointerEvents","mapContainerStyle","options","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","mapTypeId","degreesToRadians","degrees","Math","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","getPointOnCircle","opts","radius","offsetX","offsetY","sin","module","exports","Dimensions","get","styles","StyleSheet","create","container","paddingHorizontal","alignItems","paddingLeft","paddingRight","degreeLabel","textAlign","textShadowColor","textShadowRadius","textShadowOffset","fontSize","color","content","flexDirection","iconContainer","borderWidth","borderStyle","borderColor","alignSelf","justifyContent","MAP_SIZE","CENTER_Y","CENTER_X","jumpRun","originX","originY","origin","setOrigin","opacity","Animated","Value","planePosition","planeAnimation","loop","timing","duration","toValue","useNativeDriver","resetBeforeIteration","onMountRotatableView","event","start","animate","stop","reset","planeStartPosition","View","transform","rotate","backgroundColor","interpolate","inputRange","outputRange","scaleX","translateY","name","size","Text","round","b","isEqual","Wrapper","absoluteFill","LoadState","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","initialState","original","open","fields","amount","value","error","transactionType","Deposit","message","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","federation","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","Object","keys","forEach","key","payloadKey","typedKey","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","Number","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","rigs","temperature","exitSpotMiles","offsetDirection","winds","skipRigSetup","complete","dropzone","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","userWizard","dropzoneWizard","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","login","signup","image","close","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","palette","main","dark","light","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","darken","hex","lighten","setAccentColor","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","newQueue","showSnackbar","push","persistConfig","storage","Platform","OS","require","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","overlay","setOverlay","loading","setLoading","animation","dispatch","isUpdateAvailable","Update","isAvailable","onUpdate","play","isNew","flex","tint","blur","intensity","title","ref","source","Button","disabled","button","mode","onPress","absoluteFillObject","fontWeight","bottom","createHttpLink","uri","Constants","url","httpBatchLink","BatchHttpLink","batchDebounce","batchMax","Apollo","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","text","background","tabIconDefault","tabIconSelected","success","warning","info","usePalette","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","length","opening","variantStyle","autoPlay","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","Snackbar","testID","visible","onDismiss","prefixes","Linking","config","confirm","params","account_confirmation_success","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","padding","marginTop","paddingVertical","isRequired","pattern","isEmail","RegExp","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","variables","mopts","hasErrors","variable","validator","test","validate","result","data","fieldErrors","errors","requestAnimationFrame","gql","updateUser","licenseId","QUERY_DROPZONE","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","defaultOptions","CurrentUserEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","SlotFragmentDoc","LoadFragmentDoc","TransactionFragmentDoc","OrderFragmentDoc","FinalizeLoadDocument","DropzoneTransactionsDocument","CurrentUserPermissionsDocument","useRestriction","permission","baseOptions","useCurrentUserPermissionsLazyQuery","execute","includes","QUERY_PERMISSION_USER","GCAChip","small","assignedColor","onSelect","useTheme","onSurface","isMenuOpen","setMenuOpen","UpdateLoad","Menu","anchor","Chip","icon","selectedColor","marginHorizontal","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","NumberField","onChangeValue","onChangeText","rest","match","numbers","TextInput","keyboardType","right","Affix","chevrons","affixTopChevron","surface","MaterialCommunityIcons","affixBottomChevron","caretHidden","borderLeftWidth","hairlineWidth","borderBottomWidth","paddingTop","marginRight","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","items","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","flexWrap","margin","xorBy","previous","next","pick","ChipSelectSkeleton","rows","isLoading","marginBottom","marginVertical","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","filter","Boolean","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","RigTitle","QUERY_RIGS","RigSelect","tandem","useLazyQuery","fetchRigs","onTouchEnd","label","Icon","editable","ManifestForm","allowedToManifestOthers","UpdateUserSlot","CreateUserSlot","HelperText","type","ScrollView","horizontal","ticketAddons","Divider","required","newValue","toString","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","onManifest","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Portal","Dialog","maxHeight","ProgressBar","indeterminate","Title","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","Card","elevation","Image","Content","toFixed","row","rowFirst","rowLast","num","SlotForm","canManifestOthers","slotUser","flexShrink","newRig","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","empty","Paragraph","fab","UserListSelect","search","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","Searchbar","placeholder","contentContainerStyle","description","Checkbox","onNext","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","slotUserWithRig","omit","createSlots","defaultIndex","onChangeIndex","userListContainer","paddingBottom","flexGrow","buttonContainer","contentContainer","sheet","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","SlotCard","onDelete","hasPassenger","flatten","card","Badge","e","preventDefault","infoChip","chipText","wingLoading","chip","passengerTitle","passengerChip","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","ceil","BoardingCall","Open","updateLoadState","onLanded","Landed","hasLicense","hasMembership","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","FAB","Group","fabStyle","marginLeft","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","UserHeader","onEdit","canEdit","LinearGradient","IconButton","avatarContainer","isAfter","titleContainer","loadNumber","paragraph","InfoGrid","divider","titleStyle","bold","descriptionStyle","verticalDivider","deleteSlot","AvailableSlotCard","SlotSkeleton","route","useRoute","useQueryLoad","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","availableSlots","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","showsHorizontalScrollIndicator","weight","keyExtractor","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","count","setIndex","Wizard","Provider","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","wizardScreen","buttonBack","buttons","maxWidth","WizardScreen","onBack","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","ScrollableScreen","minHeight","WizardCompleteStep","createWeatherCondition","WindRow","speed","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","minWidth","altitudeOption","alt","strengthCard","onBlur","newSpeed","textField","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderBottomLeftRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","longitude","isDragging","setDragging","rotation","onGestureEvent","setValue","currentCoordinates","angle","onBegan","onEnded","zIndex","bottomDegreeLabel","textInput","location","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","currentIndex","Winds","goBack","JumpRun","JumpRunScreen","WindScreen","labelStyle","Warning","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","scene","hideWarnings","loadData","Appbar","Header","BackAction","DrawerActions","toggleDrawer","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","hasLanded","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","createLoad","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","getItemLabel","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","LoadDialog","useMutationCreateLoad","snackbar","snapPoints","onSave","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","ImageBackground","nightBackground","weatherBackground","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","fetchMore","isFocused","useIsFocused","setOptions","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","toUpperCase","roles","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","MUTATION_CREATE_TRANSACTION","mutationCreateTransaction","updateRig","createRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","RigDialog","useMutationUpdateRig","useMutationCreateRig","onDialogClose","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","QUERY_DROPZONE_USER","useDropzoneUser","UpdateUserDialog","refetchQueries","parseFloat","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","textColor","primaryDark","TouchableRipple","openURL","QUERY_DROPZONE_USER_PROFILE","innerChip","iconName","actAsDZSO","actAsGCA","actAsLoadMaster","actAsPilot","actAsRigInspector","revokePermission","permissionName","grantPermission","PermissionBadges","canGrantPermission","useMutationRevokePermission","useMutationGrantPermission","badges","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","transaction","transactionContent","Caption","transactionTitle","transactionDescription","avatarIcon","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUserProfile","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","chipTitle","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","addSuffix","ManifestedNotification","initial","resource","BoardingCallNotification","getIcon","FundsNotification","capitalize","RigInspectionNotification","notificationType","PermissionNotification","useNotifications","UserAvatar","initals","split","n","OrderCard","order","showAvatar","buyer","__typename","orderContent","orderTitle","orderDescription","TransactionsScreen","firstName","flatList","orders","RigCard","onSuccessfulImageUpload","isUploading","setUploading","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","inspectedBy","insp","isOk","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","createTicketType","updateTicketType","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","TicketTypeDialog","useMutationCreateTicketType","useMutationUpdateTicketType","QUERY_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationUpdateTicketType","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","manipulate","MaterialIcons","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","primaryLight","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","subheader","QUERY_DROPZONE_DETAILS","MUTATION_UPDATE_DROPZONE","UpdateDropzoneScreen","mutationUpdateDropzone","hasError","updateDropzone","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","MUTATION_UPDATE_RIG","DropzoneRigsScreen","rigForm","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","ticketTypeIds","updateExtra","createExtra","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","seller","receipts","useDropzoneTransactionsLazyQuery","fetchTransactions","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","cardStyle","Screen","initialParams","NotificationsScreen","EquipmentScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","createGhost","exit_weight","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","UsersScreen","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","Settings","SettingsTab","Profile","initialRouteName","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","Users","tabBar","preset","inactiveOpacity","inactiveScale","tabBarOptions","activeTintColor","inactiveBackgroundColor","backdrop","activeBackgroundColor","inactiveTintColor","showLabel","adaptive","borderTopWidth","borderTopColor","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","createDropzone","useMutationCreateDropzone","Stack","MUTATION_LOG_IN","mutationLogin","onLogin","emailRegex","userLogin","authenticatable","logo","secureTextEntry","onSubmitEditing","textButtonLabel","textButton","userSignUp","SignupScreen","useMutationSignUp","onSignUp","textContentType","passwordRules","NameAndFederationWizardSceen","latitudeDelta","longitudeDelta","AircraftWizardScreen","setMinSlots","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ReserveRepackWizardScreen","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationUpdateDropzone","useMutationCreatePlane","useMutationUpdatePlane","mutationCreateTicketType","onBasicInfoNext","onThemingNext","onAircraftNext","onTicketTypeNext","Name","Theming","Aircraft","TicketType","errorIcon","ConfirmUserScreen","DrawerMenu","useQueryDropzones","routeName","getFocusedRouteNameFromRoute","navState","dangerouslyGetState","subNavState","routes","subNavRoutes","subNavSubState","subRouteName","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","active","closeDrawer","profileHeader","Drawer","createDrawerNavigator","RootNavigator","drawerContent","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","FederationWizardSceen","RigWizardScreen","isOtherMake","setIsOtherMake","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","modal","UserWizardScreen","mutationCreateRig","onFederationNext","onRigNext","onReserveRepackNext","onWingloadingNext","Modal","Federation","AskForRig","Rig","ReserveRepack","Wingloading","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","token","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"oxBA8Be,SAASA,EAAIC,GAC1B,IAAQC,EACND,EADMC,MAAOC,EACbF,EADaE,OAAQC,EACrBH,EADqBG,SAAUC,EAC/BJ,EAD+BI,SAAUC,EACzCL,EADyCK,OAAQC,EACjDN,EADiDM,OAAQC,EACzDP,EADyDO,MAAOC,EAChER,EADgEQ,YAAaC,EAC7ET,EAD6ES,UAEvEC,EAAaC,YAAe,CAClCC,iBAAiB,0CACjBC,GAAI,uBAFEH,SAKAI,EAA6Bd,EAA7Bc,eAAgBC,EAAaf,EAAbe,SAClBC,EAAMC,SAAwB,MAE9BC,EAASD,eAAkB,SAAOE,GAAP,mBAAAC,EAAAC,OAAA,uDAG/BL,EAAIM,QAAUH,EAHiB,oBAAAC,EAAA,MAKJG,OALI,mBAMd,YANc,EAKrBC,OALqB,mGAevBC,EAAS,IAAIC,OAAOC,OAAOC,KAAKC,aAGtC,SAAAb,EAAIM,UAAJ,EAAaQ,UAAUL,GAlBM,mEAoB9B,IAEGM,EAAYd,eAAkB,WAGlCD,EAAIM,QAAU,OACb,IAIGU,GAFsBf,WAETA,eAAkB,SAACgB,EAAaC,MAwBhD,KAEHjB,aAAgB,WACVZ,IACF8B,QAAQC,IAAI,CAAE/B,SAAQC,WACtB0B,EAAW3B,EAAO4B,IAAK5B,EAAO6B,QAE/B,CAAC7B,EAAQC,EAAQ0B,IAEpB,MAAoCf,aAApC,WAAOoB,EAAP,KAAmBC,EAAnB,KACA,OAAQ5B,EACN,gBAAC,IAAD,CACE6B,SAAU,gBAAGC,EAAH,EAAGA,YAAH,OAAqBF,EAAcE,EAAYC,SACzDC,MAAK,GACHzC,QACAC,SACAyC,aAAwB,UAAVpC,GAAA,MAAqB8B,KAAYpC,MAAQoC,EAAWpC,MAAQ,OAAI2C,EAC9EC,SAAU,SACV1C,SAAU,WACV2C,IAAK3C,EAAS4C,EACdC,KAAM7C,EAAS8C,GACZnC,GAELoC,cAAe1C,OAAcoC,EAAY,QAEzC,gBAAC,IAAD,CACE1B,OAAQ,SAACC,GAGPH,EAAIM,QAAUH,EACdD,EAAOC,IAETd,OAAQC,EACRG,UAAS,8GAAE,WACA,MAATA,KAAY,CAGVwB,IAAKjB,EAAIM,QAAQjB,OAAO4B,MAGxBC,IAAKlB,EAAIM,QAAQjB,OAAO6B,WAG5BH,UAAWA,EAEXoB,kBAAiB,GACflD,MAAO,OACPC,OAAQ,QAIJa,GAENqC,QAAS,CACPC,KAAM,GACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,aAAa,EACbC,UAAW,cAGZtD,IApDY,O,iCCzGrB,SAASuD,EAAiBC,GACxB,OAAOA,GAAWC,KAAKC,GAAK,KAEvB,SAASC,EAAqBC,GAAmC,IAAjBC,EAAgB,uDAAH,EAC5DC,EAAyB,OACzBC,EAA0BN,KAAKO,IAAIT,EAAiBK,IAAaE,EAGvE,OAAOD,EAAaE,EARtB,mC,iCCAO,SAASE,EAAiBC,GAQ/B,IAAQrB,EAA4CqB,EAA5CrB,EAAGF,EAAyCuB,EAAzCvB,EAAGa,EAAsCU,EAAtCV,QAASW,EAA6BD,EAA7BC,OAAQC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QACxC,MAAO,CACLxB,EAAGA,EAAIsB,EAASC,EAAUD,EAASV,KAAKa,KAAMd,EAAW,KAAcC,KAAKC,GAAM,KAClFf,EAAGA,EAAIwB,EAASE,EAAUF,GAAUV,KAAKO,KAAMR,EAAW,KAAcC,KAAKC,GAAM,MAXvF,mC,oBCAAa,EAAOC,QAAU,IAA0B,kC,oubCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,ouBCc3C,IAAQ3E,EAAU4E,IAAWC,IAAI,UAAzB7E,MAwMR,IAAM8E,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAGhBC,YAAa,CACXtF,MAAO,IACPC,OAAQ,IACRsF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEV0F,SAAU,IACVC,MAAO,QACP1F,SAAU,YAGZ2F,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACbC,YAAa,EACbtD,aAAc1C,EAAQ,EACtBiG,YAAa,QACbC,YAAa,QACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,YAILpF,YArOf,SAAoBjB,GAClB,IAAQiC,EAAajC,EAAbiC,IAAKC,EAAQlC,EAARkC,IACb,EAAoCjB,WAAgC,CAClEgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,IAJT,WAAOoC,EAAP,KAAmBC,EAAnB,KAMMgE,EAToB,EASTjE,EAAWpC,MACtBsG,EAAWlE,EAAWnC,OAAS,EAC/BsG,EAAWnE,EAAWpC,MAAQ,EAE5BwG,EAAYzG,EAAZyG,QACR,EAA4BxF,WAE1B,CACAgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,EACPyG,QAAS,EACTC,QAAS,IARX,WAAOC,EAAP,KAAeC,EAAf,KAWMC,EAAU7F,SAAa,IAAI8F,IAASC,MAAM,IAG1CC,EAAgBhG,SAAa,IAAI8F,IAASC,MAAM,IAChDE,EAAiBjG,SACrB8F,IAASI,KACPJ,IAASK,OAAOH,EAAc3F,QAAS,CACrC+F,SAAU,IACVC,SAAU,IACVC,iBAAiB,IAEnB,CACEC,sBAAsB,KAKtBC,EAAuBxG,eAC3B,SAACyG,GACC,IAAQjF,EAAWiF,EAAMlF,YAAjBC,OACRoE,EAAU,EAAD,KACJpE,GADI,IAGPiE,QAASjE,EAAOQ,EAAIZ,EAAWpC,MAAQ,EACvC0G,QAASlE,EAAOM,EAAIV,EAAWnC,OAAS,OAG5C,CAACmC,EAAWnC,OAAQmC,EAAWpC,QAGjCgB,YAAA,4BAGEiG,EAAe5F,QAAQqG,SAHzB,kDAzEAT,EAAe5F,QAAQqG,SAyEvB,4SAIG,IAEH,IAAMC,EAAO,4BAGXV,EAAe5F,QAAQuG,OACvBX,EAAe5F,QAAQwG,QACvBZ,EAAe5F,QAAQqG,SALZ,iDA/EbT,EAAe5F,QAAQuG,KA+EV,MA9EbX,EAAe5F,QAAQwG,MA8EV,MA7EbZ,EAAe5F,QAAQqG,SA6EV,yWAQb1G,aAAgB,WACd2G,MACC,CAACnB,IAEJ,IAAMsB,EAAqB1D,YAAiB,CAC1CpB,EAAG2D,EAAOF,QACV3D,EAAG6D,EAAOD,QACV/C,QAAS6C,EACTjC,QAAS,EACTC,QAAS,EACTF,OAAQ+B,EAAW,IAGfnG,EAAWc,WAAc,iBAAO,CAAEgC,EAAG,EAAGF,EAAG,KAAM,IACjDzC,EAASW,WAAc,kBAAOgB,GAAOC,EAAM,CAAED,MAAKC,YAAQU,IAAY,CAACX,EAAKC,IAElF,OACE,gBAAC,IAAD,CACEK,SAAU,gBAAGC,EAAH,EAAGA,YAAH,OAAqBF,EAAcE,EAAYC,SACzDC,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,SAEhC,gBAAC,IAAD,CACEwC,MAAO,CACLzC,MAAOqG,EACPpG,OAAQoG,EACR3D,aAAc2D,EAAW,EACzBzD,SAAU,SACV1C,SAAU,WACV2C,IAAK,EACLE,KAAM,IAGR,gBAAC,IAAD,CACE1C,OAAQA,EACRD,OAAQC,EACRJ,OAAQoG,EACRrG,MAAOqG,EACPnG,SAAUA,EACVK,aAAa,KAIjB,gBAAC,IAASwH,KAAV,CACEzF,SAAUkF,EACV/E,MAAO,CACLqC,EAAOiB,cACP,CACE/F,MAAOqG,EACPpG,OAAQoG,EACRnG,SAAU,WACV2C,IAAK,EACLE,KAAM,EACNiF,UAAW,CACT,CACEC,OAAWzB,EAAL,WAMd,gBAAC,IAASuB,KAAV,CACEtF,MAAO,CACLxC,OAAQoG,EAAW,EACnBrG,MAAO,EACPkI,gBAAiB,UACjBrB,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAK,KAErBL,UAAW,CACT,CACEM,OAAQzB,EAAQxF,QAAQ8G,YAAY,CAClCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,WAO5B,MAACjG,KAAYpC,MACZ,gBAAC,IAAS+H,KAAV,CACEtF,MAAO,CACL,CACEvC,SAAU,WACVF,MAAO,GACPC,OAAQ,GACR4C,IAAKiF,EAAmBhF,EACxBC,KAAM+E,EAAmB9E,EACzB6D,QAASG,EAAc3F,QAAQ8G,YAAY,CACzCC,WAAY,EAAE/B,GAAWA,EAAW,EAAGA,GACvCgC,YAAa,CAAC,EAAK,EAAK,KAE1BL,UAAW,CACT,CACEC,OAAWzB,EAAL,OAER,CACE+B,WAAYvB,EAAc3F,aAMlC,gBAAC,IAAD,CAAwBmH,KAAK,WAAWC,KAAM,GAAI7C,MAAM,aAxBtC,KA2BtB,gBAAC,IAAS8C,KAAV,CACEjG,MAAO,CACLqC,EAAOQ,YACP,CACEuB,QAASA,EAAQxF,QACjBwB,IAAKyD,EACLvD,KAAMwD,KAIT3C,KAAK+E,MAAMnC,QA4CkB,SAACrF,EAAGyH,GAAJ,OAAUC,IAAQ1H,EAAGyH,Q,qu/BC5P3DlE,EAAOC,QAAU,IAA0B,iC,gTCG5B,SAASmE,EAAT,GAA+D,IAA5C3I,EAA2C,EAA3CA,SAChC,OAAO,gBAAC4H,EAAA,EAAD,CAAMtF,MAAOsC,IAAWgE,cAAe5I,G,IC6sBpC6I,EAwYAC,EAwBAC,EAyVAC,EA+GAC,EAMAC,EA6YAC,E,kIA3vCAN,K,YAAAA,E,6BAAAA,E,qBAAAA,E,gBAAAA,E,uBAAAA,M,cAwYAC,K,kBAAAA,E,sBAAAA,E,oBAAAA,E,uBAAAA,M,cAwBAC,K,gCAAAA,E,gCAAAA,E,kDAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,oBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,gCAAAA,E,gDAAAA,E,gCAAAA,E,gCAAAA,E,sCAAAA,E,sCAAAA,E,sCAAAA,E,oCAAAA,E,oCAAAA,E,oCAAAA,E,0BAAAA,E,0BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,0BAAAA,E,0BAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,kBAAAA,E,sCAAAA,E,sCAAAA,E,sCAAAA,E,kCAAAA,E,kCAAAA,E,sCAAAA,E,8BAAAA,E,8BAAAA,E,8BAAAA,E,0BAAAA,E,wCAAAA,E,wCAAAA,E,wCAAAA,E,oCAAAA,E,oBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,kCAAAA,E,oBAAAA,E,sBAAAA,E,sCAAAA,E,8CAAAA,E,4CAAAA,E,kCAAAA,E,qCAAAA,M,cAyVAC,K,YAAAA,E,wBAAAA,E,cAAAA,E,aAAAA,M,cA+GAC,K,oBAAAA,E,sBAAAA,E,uBAAAA,M,cAMAC,K,oBAAAA,E,YAAAA,E,kBAAAA,E,wBAAAA,E,iBAAAA,M,cA6YAC,K,4BAAAA,E,qBAAAA,M,KC57DL,IAAMC,EAAmC,CAC9CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNC,OAAQ,CACNC,MAAO,KACPC,MAAO,MAETC,gBAAiB,CACfF,MAAOP,EAAgBU,QACvBF,MAAO,MAETG,QAAS,CACPJ,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,gBACNe,eACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEA1H,QAAQC,IAAI,CAAEoI,UACdH,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,QAAU,UAAWU,EAAMV,OAAOa,KACnDH,EAAMV,OAAOa,GAAYV,MAAQA,IAGrCY,QAAS,SAACL,EAA2BC,GACL,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,EAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,IAIjB5B,MAAO,SAACuC,GACNA,EAAMV,OAASH,EAAaG,OAC5BU,EAAMZ,SAAW,SC7CVD,GAAmC,CAC9CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgB,WAAY,CACVd,MAAO,KACPC,MAAO,MAET7H,IAAK,CACH4H,MAAO,KACPC,MAAO,MAET5H,IAAK,CACH2H,MAAO,KACPC,MAAO,MAETrB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAETc,eAAgB,CACdf,MAAO,GACPC,MAAO,MAETe,aAAc,CACZhB,MAAO,GACPC,MAAO,MAETgB,OAAQ,CACNjB,MAAO,GACPC,MAAO,MAETiB,sBAAuB,CACrBlB,OAAO,EACPC,MAAO,MAETkB,SAAU,CACRnB,OAAO,EACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,iBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,QAAU,UAAWU,EAAMV,OAAOa,KACnDH,EAAMV,OAAOa,GAAYV,MAAQA,IAIrCY,QAAS,SAACL,EAA2BC,GACL,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SClGVD,GAAuC,CAClDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN4B,KAAM,CACJ1B,MAAO,KACPC,MAAO,MAET0B,UAAW,CACT3B,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,qBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA+BC,GACT,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1DVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNlB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAET2B,KAAM,CACJ5B,MAAO,KACPC,MAAO,MAET4B,YAAa,CACX7B,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,cACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOlB,KAAKqB,MAAQ,MAE5BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAwBC,GACF,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAO+B,YAAY7B,MAAQS,EAAOC,QAAQmB,YAChDrB,EAAMV,OAAO8B,KAAK5B,MAAQS,EAAOC,QAAQkB,KACzCpB,EAAMV,OAAOlB,KAAKoB,MAAQS,EAAOC,QAAQ9B,MAAQ,KAIrDX,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCrDVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNlB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAET6B,IAAK,CACH9B,MAAO,KACPC,MAAO,MAET8B,WAAY,CACV/B,MAAO,KACPC,MAAO,MAET+B,OAAQ,CACNhC,OAAO,EACPC,MAAO,MAETgC,WAAY,CACVjC,MAAO,KACPC,MAAO,MAETiC,MAAO,CACLlC,MAAO,KACPC,MAAO,MAETkC,MAAO,CACLnC,MAAO,KACPC,MAAO,MAETmC,SAAU,CACRpC,MAAO,EACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,aACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC/EVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNiB,WAAY,CACVd,MAAO,KACPC,MAAO,MAETH,OAAQ,CACNuC,WAAY,CACVrC,MAAO,KACPC,MAAO,MAETqC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAETrB,KAAM,CACJoB,MAAO,KACPC,MAAO,MAETyB,KAAM,CACJ1B,MAAO,KACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,cACNe,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAAwBC,GACtCD,EAAMM,WAAWd,MAAQS,EAAOC,SAElCH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KACIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EACXA,EAAMV,OAAOa,GAAOV,MAAQA,EAE5B3H,QAAQ2H,MAAM,uBAAwBU,IAI1CE,QAAS,SAACL,EAAwBC,GAOxB,IAAD,GANPnI,QAAQC,IAAI,gBACZD,QAAQC,IAAIkI,EAAOC,SACW,mBAAnBD,EAAOC,UAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMM,WAAWd,OAAQ,SAAAS,EAAOC,QAAQ8B,cAAf,IAAwB1B,aAAc,KAC/DM,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1FVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNlB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAETyC,aAAc,CACZ1C,MAAO,GACPC,MAAO,MAET0C,SAAU,CACR3C,MAAO,EACPC,MAAO,MAETmC,SAAU,CACRpC,MAAO,EACPC,MAAO,MAET2C,MAAO,CACL5C,MAAO,KACPC,MAAO,MAET4C,qBAAsB,CACpB7C,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,QACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOlB,KAAKqB,MAAQ,MAE5BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAwBC,GACF,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAO8C,MAAM5C,MAAQS,EAAOC,QAAQkC,OAAS,EACnDpC,EAAMV,OAAO6C,SAAS3C,MAAQS,EAAOC,QAAQiC,UAAY,EACzDnC,EAAMV,OAAOsC,SAASpC,MAAQS,EAAOC,QAAQ0B,UAAY,EACzD5B,EAAMV,OAAOlB,KAAKoB,MAAQS,EAAOC,QAAQ9B,MAAQ,GACjD4B,EAAMV,OAAO4C,aAAa1C,MAAQS,EAAOC,QAAQgC,cAAgB,GACjElC,EAAMV,OAAO+C,qBAAqB7C,MAAQS,EAAOC,QAAQmC,sBAAwB,IAIrF5E,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCxEVD,GAA8B,CACzCC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgD,KAAM,CACJ9C,MAAO,GACPC,MAAO,MAETrB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAET8C,MAAO,CACL/C,MAAO,GACPC,MAAO,MAET+C,OAAQ,CACNhD,MAAO,GACPC,MAAO,MAETgD,gBAAiB,CACfjD,MAAO,KACPC,MAAO,MAETiD,WAAY,CACVlD,MAAO,KACPC,MAAO,MAETkD,QAAS,CACPnD,MAAO,QACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,YACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAsBC,GACA,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCvFVD,GAAwC,CACnDG,OAAQ,GACRD,MAAM,EACNuD,IAAI,GAGS/C,eAAY,CACzBzB,KAAM,sBACNe,gBACAW,SAAU,CACR+C,MAAO,SAAC7C,EAAgCC,GACtCD,EAAM4C,GAAK3C,EAAOC,SAEpBH,SAAU,SAACC,EAAgCC,GACzC,UAAsBA,EAAOC,QAA7B,GAAO4C,EAAP,KAAcC,EAAd,KACA/C,EAAMV,OAASU,EAAMV,OAAO3I,KAAI,SAACwJ,EAAO6C,GAAR,OAAiBA,IAAQF,EAAQC,EAAO5C,MAG1E8C,UAAW,SAACjD,EAAgCC,GAC1C,IACED,EAAMV,OAAS4D,KAAKC,MAAMlD,EAAOC,SACjC,MAAOT,GACP3H,QAAQC,IAAIkI,EAAOC,SACnBpI,QAAQ2H,MAAM,yCAA0CA,EAAMG,QAASK,EAAOC,WAIlFzC,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAM4C,GAAKzD,GAAayD,OCtBjBzD,GAAwC,CACnDC,SAAU,KACVE,OAAQ,IAGKO,eAAY,CACzBzB,KAAM,8BACNe,gBACAW,SAAU,CACRmD,UAAW,SAACjD,EAAgCC,GAC1CD,EAAMV,OAASW,EAAOC,SAGxBG,QAAS,SAACL,EAAgCC,GACxCD,EAAMZ,SAAWa,EAAOC,QAExB,IACEF,EAAMV,OAAS4D,KAAKC,MAAMlD,EAAOC,QAAQkD,YAAc,MACvD,MAAOC,GACPvL,QAAQC,IAAI,iBAAkBkI,EAAOC,QAAQkD,cAIjD3F,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCdVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgE,SAAU,CACR9D,MAAO,KACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,MAET+D,KAAM,CACJhE,MAAO,KACPC,MAAO,MAETgE,IAAK,CACHjE,MAAO,KACPC,MAAO,MAETiE,WAAY,CACVlE,MAAO,KACPC,MAAO,MAETkE,aAAc,CACZnE,MAAO,KACPC,MAAO,MAEToC,WAAY,CACVrC,MAAO,KACPC,MAAO,MAETmE,cAAe,CACbpE,MAAO,KACPC,MAAO,MAEToE,oBAAqB,CACnBrE,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,iBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOV,MAAQA,IAIhCY,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SChGVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgE,SAAU,CACR9D,MAAO,KACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,MAET+D,KAAM,CACJhE,MAAO,KACPC,MAAO,MAETiE,WAAY,CACVlE,MAAO,KACPC,MAAO,MAETqE,MAAO,CACLtE,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,sBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BsE,aAAc,SAAC/D,EAAuBC,GAAmC,IAAD,MACtED,EAAMV,OAAOwE,MAAMtE,MAAQS,EAAOC,QAAQvJ,KAAI,SAACqN,GAAD,cAAW,CACvDxN,GAAIyN,OAAM,SAACD,EAAKL,mBAAN,EAAC,EAAmBnN,IAC9B0N,MAAOD,OAAM,SAACD,EAAKP,UAAN,EAAC,EAAUjN,IACxBqL,WAAYoC,OAAOD,EAAKnC,gBAG1B7B,EAAMV,OAAOgE,SAAS9D,MAAtB,SAA8BS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAAzD,EAA8B,EAA+Bd,SAC7DtD,EAAMV,OAAOkE,KAAKhE,OAAQ,SAAAS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAA3B,IAA+BZ,OAAQ,KACjExD,EAAMV,OAAOiE,OAAO/D,MAApB,SAA4BS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAAvD,EAA4B,EAA+Bb,QAG7Dc,iBAAkB,SAACrE,EAAuBC,GACxCD,EAAMV,OAAOwE,MAAMtE,MAAQS,EAAOC,QAAQvJ,KAAc,SAAC2N,GAAD,gBAAa,CACnE9N,GAAIyN,OAAOK,EAAO9N,IAClB0N,MAAOD,OAAM,MAACK,GAAD,SAACA,EAAQC,gBAAT,SAAC,EAAuBJ,MAAK,qBAAG3N,YAAhC,EAAC,EAA6CA,IAC3DqL,WAAYoC,OAAM,MAACK,GAAD,SAACA,EAAQE,WAAT,EAAC,EAAc3C,iBAIrCxB,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1FVD,GAAqC,CAChDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNlB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAET2B,KAAM,CACJ5B,MAAO,KACPC,MAAO,MAETgF,SAAU,CACRjF,MAAO,KACPC,MAAO,MAETiF,qBAAsB,CACpBlF,OAAO,EACPC,MAAO,MAETkF,SAAU,CACRnF,OAAO,EACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,mBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA6BC,GACP,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAOmF,SAASjF,MAAQS,EAAOC,QAAQuE,UAAY,EACzDzE,EAAMV,OAAO8B,KAAK5B,MAAQS,EAAOC,QAAQkB,MAAQ,EACjDpB,EAAMV,OAAOoF,qBAAqBlF,MAAQS,EAAOC,QAAQwE,uBAAwB,EACjF1E,EAAMV,OAAOlB,KAAKoB,MAAQS,EAAOC,QAAQ9B,MAAQ,KAIrDX,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCrEVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNiB,WAAY,CACVd,MAAO,KACPC,MAAO,MAETH,OAAQ,CACNuC,WAAY,CACVrC,MAAO,GACPC,MAAO,MAETqC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAETrB,KAAM,CACJoB,MAAO,KACPC,MAAO,MAETmF,KAAM,CACJpF,MAAO,GACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,aACNe,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAAuBC,GACrCD,EAAMM,WAAWd,MAAQS,EAAOC,SAElCH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAuBC,GAKvB,IAAD,EAJuB,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMM,WAAWd,OAAQ,SAAAS,EAAOC,QAAQ8B,cAAf,IAAwB1B,aAAc,KAC/DM,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SClFVD,GAA2C,CACtDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNlD,QAAS,CACPoD,MAAO,KACPC,MAAO,MAEToF,YAAa,CACXrF,MAAO,KACPC,MAAO,MAETqF,cAAe,CACbtF,MAAO,KACPC,MAAO,MAETsF,gBAAiB,CACfvF,MAAO,KACPC,MAAO,MAETuF,MAAO,CACLxF,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,gBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KACIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,GAAS,UAAWA,EAAMV,OAAOa,GAC5CH,EAAMV,OAAOa,GAAOV,MAAQA,EAE5B3H,QAAQ2H,MAAM,uBAAwBU,IAI1CE,QAAS,SACPL,EACAC,GAE8B,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDxD,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC3EVD,GAAiC,CAC5CE,MAAM,EACNC,OAAQ,CACNkF,KAAM,CACJhF,MAAO,KACPC,MAAO,MAETwF,aAAc,CACZzF,OAAO,EACPC,MAAO,MAETgE,IAAK,CACHjE,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,mBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,GAE9BY,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAyBC,GACH,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMV,OAASH,GAAaG,SAE5BU,EAAMV,OAAOkF,KAAKhF,MAAQS,EAAOC,QACjCF,EAAMX,MAAO,IAIjB5B,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,WCzDrBH,GAAqC,CAChDE,MAAM,EACN6F,UAAU,EACV5F,OAAQ,CACN6F,SAAU,CACR3F,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,uBACNe,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,GAE9BY,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA6BC,GACP,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMV,OAASH,GAAaG,SAE5BU,EAAMV,OAAO6F,SAAS3F,MAAQS,EAAOC,QACrCF,EAAMX,MAAO,IAIjB6F,SAAU,SAAClF,EAA6BC,GACtCD,EAAMkF,cAA8B3M,IAAnB0H,EAAOC,SAAwBD,EAAOC,SAGzDzC,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,WCxBrBQ,GAAW,CACtBsF,QAASA,GACTD,SAAUA,GACVxB,aAAcA,GACd0B,MAAOA,GACPC,MAAOA,GACP9B,KAAMA,GACN7B,MAAOA,GACP8B,IAAKA,GACL8B,cAAeA,GACfC,sBAAuBA,GACvBC,SAAUA,GACVC,cAAeA,GACfhC,WAAYA,GACZc,KAAMA,GACNmB,WAAYA,GACZC,eAAgBA,GAChBC,QAASA,IC/CE1G,GAAiC,CAC5C2G,iBAAiB,EACjBC,WAAY,IAGClG,eAAY,CACzBzB,KAAM,eACNe,gBACAW,SAAU,CACRkG,cAAe,SAAChG,EAAyBC,GACvCD,EAAM+F,WAAa9F,EAAOC,SAG5B+F,iBAAkB,SAACjG,EAAyBC,GAC1CD,EAAM8F,gBAAkB7F,EAAOC,SAGjCzC,MAAO,SAACuC,GACNA,EAAM8F,gBAAkB3G,GAAa2G,gBACrC9F,EAAM+F,WAAa5G,GAAa4G,eCXzB5G,GAAe,CAC1BG,OAAQ,CACNwC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETyG,SAAU,CACR1G,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,QACNe,gBACAW,SAAU,CACRqG,SAAU,SAACnG,EAA0BC,GACnCD,EAAMV,OAAOwC,MAAMtC,MAAQS,EAAOC,SAEpCkG,YAAa,SAACpG,EAA0BC,GACtCD,EAAMV,OAAO4G,SAAS1G,MAAQS,EAAOC,SAEvCmG,cAAe,SAACrG,EAA0BC,GACxCD,EAAMV,OAAOwC,MAAMrC,MAAQQ,EAAOC,SAEpCoG,iBAAkB,SAACtG,EAA0BC,GAC3CD,EAAMV,OAAO4G,SAASzG,MAAQQ,EAAOC,SAEvCzC,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,WCnCrBH,GAAqC,CAChD2G,iBAAiB,EACjBS,cAAe,GACfR,WAAY,GACZS,QAAS,SAGI3G,eAAY,CACzBzB,KAAM,iBACNe,gBACAW,SAAU,CACR2G,YAAa,SAACzG,EAA6BC,GACzCD,EAAMuG,cAAgBtG,EAAOC,SAE/B8F,cAAe,SAAChG,EAA6BC,GAC3CD,EAAM+F,WAAa9F,EAAOC,SAG5B+F,iBAAkB,SAACjG,EAA6BC,GAC9CD,EAAM8F,gBAAkB7F,EAAOC,SAGjCwG,gBAAiB,SAAC1G,EAA6BC,GAC7CD,EAAMwG,QAAUvG,EAAOC,SAGzBzC,MAAO,SAACuC,GACNA,EAAM8F,gBAAkB3G,GAAa2G,gBACrC9F,EAAM+F,WAAa5G,GAAa4G,eCDzB5G,GAAe,CAC1BmB,WAAY,KACZhB,OAAQ,CACNwC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETyG,SAAU,CACR1G,MAAO,GACPC,MAAO,MAETkH,qBAAsB,CACpBnH,MAAO,GACPC,MAAO,MAEToC,WAAY,CACVrC,MAAO,GACPC,MAAO,MAETrB,KAAM,CACJoB,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBzB,KAAM,QACNe,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAA2BC,GACzCD,EAAMM,WAAaL,EAAOC,SAE5BH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BhC,MAAO,SAACuC,GACNA,EAAMV,OAASH,GAAaG,WCtFrBQ,GAAW,CACtB2F,SAAUA,GACV3B,MAAOA,GACP8C,MAAOA,GACPC,OAAQA,ICRG1H,GAA6B,CACxCE,MAAM,EACNyH,MAAO,MAGMjH,eAAY,CACzBzB,KAAM,qBACNe,gBACAW,SAAU,CACRO,QAAS,SAACL,EAAqBC,GAC7BD,EAAMX,MAAO,EACbW,EAAM8G,MAAQ7G,EAAOC,SAEvB6G,MAAO,SAAC/G,GACNA,EAAMX,MAAO,M,ioBCXnB,IAAM2H,GAA2B,YAC5BC,MACAC,MAF4B,IAG/BC,OAAO,GAAD,SACDF,KAAkBE,QAClBD,KAAuBC,QAFtB,IAGJC,QAAS,cAGPC,GAAiB,YAClBC,MACAC,MAFkB,IAGrBJ,OAAO,GAAD,SACDG,KAAeH,QACfI,KAAoBJ,QAFnB,IAGJC,QAAS,cA+BAjI,GAA6B,CACxCqI,YAAa,KACbC,gBAAiB,KACjBC,kBAAmB,KACnBC,YAAa,GACbC,YAAa,KACbC,cAAe,KACfC,MAAOd,GACPe,QAAQ,GAAD,MACFf,GAAqBG,QADnB,IAELC,QAAS,CACPY,KAAM,UACNC,KAAM,UACNC,MAAO,WAETC,OAAQ,CACNH,KAAM,UACNC,KAAM,UACNC,MAAO,aAGXE,YAAY,GAECvI,eAAY,CACzBzB,KAAM,SACNe,gBACAW,SAAU,CACRuI,eAAgB,SAACrI,EAAqBC,GACpCD,EAAM4H,YAAc3H,EAAOC,SAE7BoI,QAAS,SAACtI,EAAqBC,GAC7BD,EAAMwH,YAAcvH,EAAOC,SAE7BqI,iBAAkB,SAACvI,EAAqBC,GACtCD,EAAM6H,cAAgB5H,EAAOC,SAE/BsI,eAAgB,SAACxI,EAAqBC,GACpCD,EAAM2H,YAAc1H,EAAOC,SAE7BuI,gBAAiB,SAACzI,EAAqBC,GACrCD,EAAM8H,MAAMX,OAAOC,QAAUnH,EAAOC,QACpCF,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DE,eAAgB,SAAC7I,EAAqBC,GACpCD,EAAM8H,MAAMX,OAAOgB,OAASlI,EAAOC,QACnCF,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DG,YAAa,SAAC9I,EAAqBC,GAA4C,IAAD,QAInC,EAIE,GAP3CD,EAAMyH,gBAAkBxH,EAAOC,QAC/BF,EAAM0H,kBAAoB,SAAAzH,EAAOC,UAAP,EAAgB1J,GAAKyN,OAAM,SAAChE,EAAOC,cAAR,EAAC,EAAgB1J,IAAM,KAE5E,SAAIwJ,EAAMyH,kBAAN,EAAuBjH,gBACzBR,EAAM8H,MAAMX,OAAOC,QAAnB,SAA6BpH,EAAMyH,sBAAnC,EAA6B,EAAuBjH,cAGtD,SAAIR,EAAMyH,kBAAN,EAAuBlH,iBACzBP,EAAM8H,MAAMX,OAAOgB,OAAnB,SAA4BnI,EAAMyH,sBAAlC,EAA4B,EAAuBlH,gBAErDP,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DI,eAAgB,SAAC/I,GAAyB,IAAD,IAIE,EAIE,GAP3CA,EAAMoI,YAAcpI,EAAMoI,WAC1BpI,EAAM8H,MAAQ9H,EAAMoI,WAAaf,GAAoBL,GAErD,SAAIhH,EAAMyH,kBAAN,EAAuBjH,gBACzBR,EAAM8H,MAAMX,OAAOC,QAAnB,SAA6BpH,EAAMyH,sBAAnC,EAA6B,EAAuBjH,cAGtD,SAAIR,EAAMyH,kBAAN,EAAuBlH,iBACzBP,EAAM8H,MAAMX,OAAOgB,OAAnB,SAA4BnI,EAAMyH,sBAAlC,EAA4B,EAAuBlH,gBAGrDP,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMzM,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAO1M,KAAMwE,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DK,OAAQ,SAAChJ,GACPY,OAAOC,KAAK1B,IAAc2B,SAAQ,SAACC,GAEjC,GADmBA,KACDf,EAAO,CACvB,IAAMiB,EAFWF,EAKjBf,EALiBe,GAKG5B,GAAa8B,W,qBC3K9B9B,GAAe,CAAE8J,MAAO,IACtBpJ,eAAY,CACzBzB,KAAM,gBACNe,gBACAW,SAAU,CACRoJ,aAAc,SAAClJ,GACb,IAAYmJ,EAAZ,KAAwBnJ,EAAMiJ,OAA9B,SACAjJ,EAAMiJ,MAAQE,GAEhBC,aAAc,SAACpJ,EAA2BC,GACxCD,EAAMiJ,MAAMI,KAAKpJ,EAAOC,a,qkBCRvB,IAQDoJ,GAAgB,CACpBvI,IAAK,sBACLwI,QAEkB,QAAhBC,IAASC,GAAwBC,EAAQ,KAA6BC,QAAUC,IAClFC,UAAW,CAAC,WAIRC,GAAiBlJ,OAAOC,KAAKkJ,IAASC,QAE1C,SAACC,EAAKlJ,GAAN,OACGgJ,IAAahJ,KAAOgJ,GAArB,SAESE,GAFT,UAEelJ,EAAMgJ,GAAQhJ,GAA6BmJ,UADtDD,IAEN,IAKIE,GAAevJ,OAAOC,KAAKuJ,IAAOJ,QACtC,SAACC,EAAKlJ,GAAN,OACGqJ,IAAWrJ,KAAOqJ,GAAnB,SAAuCH,GAAvC,UAA6ClJ,EAAMqJ,GAAMrJ,GAA2BmJ,UAAxDD,IAC9B,IAKWI,GAAgBzJ,OAAOC,KAAKkJ,IAASC,QAChD,SAACC,EAAKlJ,GAAN,OACIA,KAAOgJ,GAAT,SAA+BE,GAA/B,UAAqClJ,EAAMgJ,GAAQhJ,GAA6BuJ,UAA5DL,IACtB,IAaWK,GAAU,CACrBF,MAVyBxJ,OAAOC,KAAKuJ,IAAOJ,QAC5C,SAACC,EAAKlJ,GAAN,OACIA,KAAOqJ,GAAT,SAA6BH,GAA7B,UAAmClJ,EAAMqJ,GAAMrJ,GAA2BuJ,UAAxDL,IACpB,IAQAF,QAASM,GACTE,OAAQC,GAAYF,QACpBG,cAAeC,GAAkBJ,QACjCK,YAAaC,GAAiBN,SAGnBO,GAAcC,YAAgB,CACzCP,OAAQC,GAAYN,QACpBO,cAAeC,GAAkBR,QACjCS,YAAaC,GAAiBV,QAC9BH,QAASe,YAAgBhB,IACzBM,MAAOU,YAAgBX,MAEZY,GAAmBC,YAAe1B,GAAeuB,IACjDI,GAAQC,YAAe,CAClChB,QAASa,GACTI,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAAC,oBAEnBC,gBAAgB,MAIPC,GAAYC,YAAaR,IAIzBS,GAAiB,kBAAMC,eACvBC,GAAkDC,I,qkBCvFhD,SAASC,GAAUnW,GAChC,IAAQI,EAAaJ,EAAbI,SACR,EAA8Ba,YAAe,GAA7C,WAAOmV,EAAP,KAAgBC,EAAhB,KACA,EAA8BpV,YAAe,GAA7C,WAAOqV,EAAP,KAAgBC,EAAhB,KACMC,EAAYvV,SAAyB,MACrCwV,EAAWV,KAEXW,EAAoBzV,eAAkB,0BAAAG,EAAAC,OAAA,mDACtB,QAAhBwS,IAASC,GAD6B,mEAAA1S,EAAA,MAIZuV,OAJY,kBAIlCC,aAGNP,GAAW,GAP6B,8DASzC,IAEGQ,EAAW5V,eAAkB,4BAAAG,EAAAC,OAAA,mDACb,QAAhBwS,IAASC,GADoB,wDAIjC,SAAA0C,EAAUlV,UAAV,EAAmBwV,OAJc,WAAA1V,EAAA,MAKTuV,OALS,sBAKzBI,MALyB,oCAAA3V,EAAA,MAOzBuV,OAPyB,QAQ/BJ,GAAW,GACXF,GAAW,GACXI,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAAS,2BAVxB,+DAYhC,CAACwM,IAMJ,OAJAxV,aAAgB,WACdyV,MACC,CAACA,IAGF,gBAAC1O,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,IAClB5W,EACAgW,GACC,gBAAC,IAAD,CAAUa,KAAK,OAAOvU,MAAOqC,GAAOmS,KAAMC,UAAW,IACnD,gBAACxO,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAApB,6BACA,gBAAC,IAAD,CACEC,IAAKb,EACL9T,MAAO,CACLzC,MAAO,IACPC,OAAQ,KAGVoX,OAAQvD,EAAQ,OAElB,gBAACwD,EAAA,EAAD,CACEC,SAAUlB,EACVA,QAASA,EACTzQ,MAAM,UACNnD,MAAOqC,GAAO0S,OACdC,KAAK,WACLC,QAAS,kBAAMd,MANjB,qBAgBV,I,YAAM9R,GAASC,IAAWC,OAAO,CAC/BiS,KAAK,SACAlS,IAAW4S,oBADZ,IAEFxS,WAAY,SACZiB,eAAgB,WAElB+Q,MAAO,CACLvR,MAAO,QACPD,SAAU,GACViS,WAAY,MACZ1X,SAAU,WACV2C,IAAK,KAEP2U,OAAQ,CACNtX,SAAU,WACV2X,OAAQ,IACR3R,YAAa,QACbxD,aAAc,M,qpBCrFDoV,aAAe,CAC9BC,IAAG,UAAEC,IAAUnI,WAAZ,UAAE,GAAoBJ,YAAtB,EAAE,GAA2BwI,MADlC,IAIMC,GAAgB,IAAIC,KAAc,CACtCC,eAAe,EACfC,SAAU,GACVN,IAAG,UAAEC,IAAUnI,WAAZ,UAAE,GAAoBJ,YAAtB,EAAE,GAA2BwI,MAGnB,SAASK,GAAT,GAA8D,IAA5CnY,EAA2C,EAA3CA,SACzB6R,EAAcgE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO3C,eACnDwE,EAAWV,KAEX0C,EAAYxX,WAChB,kBACEyX,cAAQ,YAA2D,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAA0B,EAAfC,SACjD,SAAIH,KAAeI,MAAK,SAACrL,GAAD,YAAkC,0BAAzB,SAAAA,EAAIsL,iBAAJ,IAAgBC,SAQ/C,OAPAxC,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,kBACRiP,QAAS,gBAGbzC,EAAS9B,GAAQC,OAAOvB,UAItBsF,GAA0C,eAAzBQ,62BAAYC,UAC/BT,EAAcxN,SAAQ,SAACuC,GACrB,IAAQzD,EAA0CyD,EAA1CzD,QAASoP,EAAiC3L,EAAjC2L,UAAWC,EAAsB5L,EAAtB4L,KAAM7Q,EAAgBiF,EAAhBjF,KAAM8Q,EAAU7L,EAAV6L,MACxC9C,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,oBAAqBA,EAAtB,KAAkCsD,KAAKiM,UAAUH,GAAjD,KAAgEC,EACvEJ,QAAS,WAGb/W,QAAQ2H,MAAR,oBACsBG,EADtB,KACkCsD,KAAKiM,UACnCH,GAFJ,KAGQC,EAHR,KAGiB7Q,EAHjB,KAG0B8Q,GAE1BpX,QAAQC,IAAImL,KAAKiM,UAAU9L,IAC3BvL,QAAQC,IAAIyW,MAGZD,GAAyC,eAAzBO,62BAAYC,UAC9B3C,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,oBAAqB2O,EAC7BM,QAAS,gBAKnB,CAACzC,IAGGgD,EAAWxY,WACf,kBACEyY,cAAW,SAACC,EAAD,GACT,MAAO,CACLC,QAAQ,SAFmB,EAAdA,SAII,MAAX3H,KAAa4H,YAAb,IAEEC,cAAc,UAAW7H,EAAY4H,YACrC,eAAgB5H,EAAY4H,YAC5B,aAAc5H,EAAY8H,WACvB9H,GAEL,UAIZ,CAACA,IAGG+H,EAAS/Y,WACb,kBACE,IAAIgZ,KAAa,CACfC,KAAMzB,EAAU0B,OAAOV,GAAUU,OAAO,IAAIC,MAAaD,OAAOhC,IAChEkC,MAAO,IAAIC,SAEf,CAACb,EAAUhB,IAGb,OAAO,gBAAC8B,GAAA,EAAD,CAAgBP,OAAQA,GAAS5Z,G,cC9F3B,SAASoa,KACtB,MAAwBvE,IAAe,SAACuC,GAAD,OAAUA,EAAKxD,eAA9CtL,EAAR,EAAQA,KAAMyH,EAAd,EAAcA,MACRsF,EAAWV,KAEjB,OAAQrM,GAASyH,EACf,gBAAC,KAAD,CAAUsJ,QAAStJ,EAAOuJ,eAAgB,kBAAMjE,EAAS9B,GAAQK,YAAY5D,YADtD,K,yoBCRpB,IASQ,IACbmB,MAAO,CACLoI,KAAM,OACNC,WAAY,OACZ3D,KAb0B,UAc1B4D,eAAgB,OAChBC,gBAf0B,UAgB1BC,QAdwB,UAexBjR,MAdsB,UAetBkR,QAdwB,UAexBC,KAdqB,WAgBvB3I,KAAM,CACJqI,KAAM,OACNC,WAAY,OACZ3D,KAvByB,OAwBzB4D,eAAgB,OAChBC,gBAzByB,OA0BzBC,QAzBwB,UA0BxBjR,MAzBsB,UA0BtBkR,QAzBwB,UA0BxBC,KAzBqB,YCIVC,OANf,WAGE,OAAO1J,GAAM,O,+kBCGf,IAEK2J,GAFGxG,GAAYyG,GAAZzG,S,SAEHwG,O,qBAAAA,I,qBAAAA,I,oBAAAA,Q,KAKL,IAiEMpW,GAASC,IAAWC,OAAO,CAC/BuR,UAAW,CACTtW,OAAQ,IACRD,MAAO,OAGIob,GAvEO,WACpB,IAAMhR,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK1D,iBACtC2B,EAAWV,KACX3D,EAAU8I,KACVI,EAAmBra,SAAyB,MAClD,EAA4CA,WAA+Bka,GAAeI,QAA1F,WAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAeza,WACnB,kBAAOoJ,EAAMiJ,MAAMqI,OAAStR,EAAMiJ,MAAM,GAAK,OAC7C,CAACjJ,EAAMiJ,QAETrS,aAAgB,WACVua,IAAmBL,GAAeI,QAAoC,aAAd,MAAZG,OAAA,EAAAA,EAAcxC,UAC5DuC,EAAkBN,GAAeS,WAElC,CAACJ,EAAD,MAAiBE,OAAjB,EAAiBA,EAAcxC,UAElC,IAAM2C,EAAe,CACnBZ,KAAM,CAAE9S,gBAAiBiK,EAAQ6I,MACjCF,QAAS,CAAE5S,gBAAiBiK,EAAQ2I,SACpCjR,MAAO,CAAE3B,gBAAiBiK,EAAQtI,OAClCkR,QAAS,CAAE7S,gBAAiBiK,EAAQ4I,UAGtC,OACE,gCACGQ,IAAmBL,GAAeS,SACjC,gBAAC5T,EAAA,EAAD,CACEtF,MAAK,SACAsC,IAAW4S,oBADX,IAEHxS,WAAY,SACZiB,eAAgB,WAElBnD,cAAc,QAEd,gBAAC,IAAD,CACEiE,MAAM,EACN2U,UAAQ,EACRC,kBAAmB,WACjBN,EAAkBN,GAAea,SACjCC,YAAW,WACTxF,EAAS9B,GAAQpB,gBACjBkI,EAAkBN,GAAeI,UAChC,MAELlE,IAAKiE,EACL5Y,MAAOqC,GAAOyR,UACdc,OAAQ4E,MAId,gBAACC,GAAA,EAAD,CACEC,OAAO,mBACPC,UAAWX,EACXY,UAAW,kBAAM7F,EAAS9B,GAAQpB,iBAClClM,SAAU,IACViD,OAAM,MAAEoR,OAAF,EAAEA,EAAcpR,OACtB5H,QAAQ,MAACgZ,MAAcxC,UAAW2C,EAAaH,EAAaxC,UAN9D,MAQGwC,OARH,EAQGA,EAAczR,W,UCzER,IACbsS,SAAU,CACRC,KAAgB,KAChB,2BACA,kBACA,0BAEFC,OAAQ,CACNrI,QAAS,CACPsI,QAAS,CACPpD,KAAM,WACNqD,OAAQ,CACNC,kCAA8Bha,IAGlCia,cAAe,CACbzI,QAAS,CACP0I,WAAY,QACZC,WAAY,iBACZC,cAAe,WACfC,cAAe,YACfC,YAAa,oBAGjBC,MAAO,CACL/I,QAAS,CACPgJ,gBAAiB,aACjBC,qBAAsB,qBAG1BC,gBAAiB,CACflJ,QAAS,CACPmJ,YAAa,SACbC,aAAc,e,6BC7BT,SAASC,GAAT,GAEuC,IADpDC,EACmD,EADnDA,WAEA,OACE,gBAAC1V,EAAA,EAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAACyD,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAApB,8BACA,gBAACuG,GAAA,EAAD,CAAkBhG,QAAS,kBAAM+F,EAAWE,QAAQ,SAASlb,MAAOqC,GAAOmV,MACzE,gBAACvR,EAAA,EAAD,CAAMjG,MAAOqC,GAAO8Y,UAApB,wBAMR,I,GAAM9Y,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN7O,gBAAiB,OACjB/C,WAAY,SACZiB,eAAgB,SAChByX,QAAS,IAEX1G,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdqC,KAAM,CACJ6D,UAAW,GACXC,gBAAiB,IAEnBH,SAAU,CACRjY,SAAU,GACVC,MAAO,a,qsBCVJ,SAASoY,GAAWhU,GACzB,MAAO,CACLA,UACAiU,QAAS,SAIN,SAASC,GAAQlU,GACtB,MAAO,CACLA,UACAiU,QAAS,IAAIE,OAEX,2JAKC,SAASC,GAAUpU,GACxB,MAAO,CACLA,UACAiU,QAAS,QAIN,SAASI,GACdrU,EACAsU,GAEA,MAAO,CACLtU,UACAsU,YAIG,SAASC,GAOdC,EACArb,GAeA,IAAQsb,EAAqDtb,EAArDsb,WAAYC,EAAyCvb,EAAzCub,cAA0BC,EAAexb,EAA1Bkb,UAEnC,OAAO,SACLha,GAEA,IAAQua,EAAqCva,EAArCua,aAAcC,EAAuBxa,EAAvBwa,UAAWpG,EAAYpU,EAAZoU,QAEjC,EAA8BqG,aAAYN,EAAUna,EAAKma,UAAzD,WAAOO,EAAP,KAAiB1I,EAAjB,KAAiBA,QAEX2I,EAAkBhe,eACtB,SAACuJ,EAAeP,GACd,IAAMiV,EAAiBC,KAAU3U,GAC3B4U,EACJT,GAAiBO,KAAkBP,EAC/BA,EAAcnU,GACdA,EAEM,MAAZqU,KAAY,GAAMO,EAAanV,KAEjC,CAAC4U,IAoEH,MAAO,CACLvI,UACA0I,OAnEe/d,eACf,SACEoe,EACAC,GAFF,yBAAAle,EAAAC,OAAA,8DAKI,IAAIke,GAAY,EAyBhB,OAvBIX,GACF3T,OAAOC,KAAKmU,GAAWlU,SAAQ,SAAClI,GAC9B,IAE2C,EAFrCuc,EAAWvc,EAEbuc,KAAapc,EAAQkb,WAAa,MACpC,SAAAM,EAAWY,KAAX,EAAsBrU,SAAQ,SAACsU,GACzBA,EAAUvB,QACPuB,EAAUvB,QAAQwB,KAAlB,IAA0BL,EAAUG,IAAa,OACpDD,GAAY,EAEZN,EAAgBO,EAAoBC,EAAUxV,UAEvCwV,EAAUlB,WAAakB,EAAUlB,SAASc,IACnDE,GAAY,EACZN,EAAgBO,EAAoBC,EAAUxV,UAE9C9H,QAAQC,IAAR,4CAAwDod,WAO1DD,EAGLI,GAjCP,8CAkCW/c,GAlCX,kCAAAxB,EAAA,MAqCyB4d,EAAO,IAC1BK,aACGC,KAvCT,UAqCUM,EArCV,OA4CW,OAFDrV,EAAUmU,EAAWkB,EAAOC,QAElC,SAAAtV,EAASuV,cAAT,EAAsB3U,SAAQ,YAAyB,IAAtBX,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACtCgV,EAAgBzU,EAAOP,MAGd,MAAPM,GAAA,SAAAA,EAASwV,UAAT,EAAiBpE,SAAUjD,EAhDnC,wBAiDM,SAAAnO,EAAQwV,SAAR,EAAgB/e,KAAI,SAACiJ,GAAD,OAAayO,EAAQzO,MAjD/C,uBAkDarH,GAlDb,eAoDQ,MAAC2H,GAAD,SAACA,EAASuV,cAAT,EAAsBnE,SAAUpR,GACnCyV,uBAAsB,kBAAMlB,EAAUvU,MArD5C,kBAuDWA,GAvDX,kCAyDW,MAAPmO,KAAU,KAAIzO,SAzDlB,sCA2DSrH,GA3DT,mEA6DA,CAACqc,EAAiBD,EAAQtG,EAASoG,MCpKzC,I,GA+DeN,MA/DcyB,aAAH,iiCAkEF,CACtBvB,WAAY,SAACkB,GAAD,OAAYA,EAAOM,YAC/B5B,UAAW,CACTnS,MAAO,CAAC8R,GAAW,qBAAsBE,GAAQ,sBACjD1V,KAAM,CAACwV,GAAW,qBAClB7R,MAAO,CAAC6R,GAAW,6BACnB/R,WAAY,CACV+R,GAAW,2BACXI,GAAU,sCACVC,GAAU,8BAA8B,YAAqB,IAAlBpS,EAAiB,EAAjBA,WACzC,OAAOoC,OAAOpC,GAAc,QAIlCyS,cAAe,CACbwB,UAAW,a,qkBC7ER,IAAMC,GAAiBH,aAAH,gmJA0OZ,SAASI,KAAsB,IAAD,sBACrCC,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAClDwO,EAAYtK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,iBAEjDJ,EAAkB0O,aAAgBJ,GAAgB,CACtDf,UAAW,CACTiB,aACAG,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,KAExDC,YAAa,sBAGTC,EAAqBC,GAAsB,CAC/CjC,UAAW,kBAAM,MACjBpG,QAAS,kBAAM,QA4BjB,OAtBAzX,aAAgB,WAAO,IAAD,gBACd+f,EAAM,MAAGlP,GAAH,SAAGA,EAAiB+N,OAApB,SAAG,EAAuBrQ,WAA1B,SAAG,EAAiCqC,cAApC,SAAG,EAA8ChD,WAAjD,EAAG,EAAoDhO,GAC7DogB,EAAW,MAAGnP,GAAH,SAAGA,EAAiB+N,OAApB,SAAG,EAAuBrQ,WAA1B,SAAG,EAAiCqC,cAApC,SAAG,EAA8ChD,WAAjD,EAAG,EAAoD0R,UAClEW,EAAaX,GAEdzO,EAAgBwE,SAAWxE,EAAgBqP,QAC1CD,GAAcA,IAAeD,GAAeD,GAC9CF,EAAmB9B,OAAO,CACxBne,GAAIyN,OAAO0S,GACXT,UAAWW,MAIhB,CACDX,EADC,MAEDzO,GAFC,SAEDA,EAAiB+N,OAFhB,SAED,EAAuBrQ,WAFtB,SAED,EAAiCqC,cAFhC,SAED,EAA8ChD,WAF7C,EAED,EAAoD0R,UAFnD,MAGDzO,GAHC,SAGDA,EAAiB+N,OAHhB,SAGD,EAAuBrQ,WAHtB,SAGD,EAAiCqC,cAHhC,SAGD,EAA8ChD,WAH7C,EAGD,EAAoDhO,GACpDiR,EAAgBwE,QAChBxE,EAAgBqP,OAChBL,IAGK,SACFhP,GADL,IAEEtC,SAAQ,MAAEsC,GAAF,SAAEA,EAAiB+N,WAAnB,EAAE,EAAuBrQ,SACjCqC,YAAW,MAAEC,GAAF,SAAEA,EAAiB+N,OAAnB,SAAE,EAAuBrQ,eAAzB,EAAE,EAAiCqC,c,0tBC3RlD,IAAMuP,GAAkB,GACXC,GAAmCpB,aAAH,wQAmLhCqB,IAjKiCrB,aAAH,ymFAgKrCoB,IACuCpB,aAAH,yOAgD7BsB,IA7B8BtB,aAAH,idA4BlCqB,IACyBrB,aAAH,0hBA8CfuB,GAAkBvB,aAAH,0eA6CtBsB,IACOE,GAAyBxB,aAAH,4bAkCtByB,GAAmBzB,aAAH,u1BAmEvBwB,IAC6BxB,aAAH,iZAe1ByB,IA+BC,IAAMC,GAAuB1B,aAAH,wPAa3BuB,IA4BC,IAAMI,GAA+B3B,aAAH,yQAanCqB,IA8B0CrB,aAAH,8rCAmGtC,I,GAAM4B,GAAiC5B,aAAH,yRC1oB5B,SAAS6B,GAAeC,GAAkC,IAAD,IAC9DhQ,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAER,ED8qBK,SAA4CiQ,GACzC,IAAM5e,EAAO,SAAOge,IAAmBY,GACvC,OAAOzJ,KAA2GsJ,GAAgCze,GChrB9H6e,CAAmC,CAC7D5C,UAAW,CACTiB,WAAYhS,OAAOyD,MAFvB,WAAOmQ,EAAP,KAAkBrC,EAAlB,KAAkBA,KAMlB5e,aAAgB,WACV8Q,GACFmQ,EAAQ,CACN7C,UAAW,CACTiB,WAAYhS,OAAOyD,QAIxB,CAACA,EAAmBmQ,IAEvB,IAAMlQ,GAAkB,MAAJ6N,GAAA,SAAAA,EAAMrQ,WAAN,WAAgBqC,kBAAhB,IAA6BG,cAAe,GAChE,OAAkB,MAAXA,OAAA,EAAAA,EAAamQ,SAASJ,MAA6B,ECRrD,I,GAAMK,GAAwBnC,aAAH,6bAyBnB,SAASoC,GAAQriB,GAAwB,IAAD,UAC7CsiB,EAAkEtiB,EAAlEsiB,MAAcC,EAAoDviB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiBqa,EAAoBxiB,EAApBwiB,SAAU3Y,EAAU7J,EAAV6J,MAC1DsI,EAAQsQ,eACR5c,EAAQ0c,GAAiBpQ,EAAMX,OAAOkR,UAC5C,EAAkCzhB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACQ7Q,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAEA8N,EAASW,aAAgB4B,GAAuB,CACtD/C,UAAW,CACTiB,WAAYhS,OAAOyD,GACnBC,YAAa,CAAC,eAHV6N,KAQR,OAFgBiC,GAAe3Y,EAAW0Z,YAmBxC,gBAACC,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAerd,EACf8R,QAAS,kBAAMiL,GAAY,IAC3BlgB,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,IAErC,MAALiH,KAAOhJ,GAAP,MAAYgJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAapG,KAAO,WAlBvC,MAsBGoX,GAtBH,SAsBGA,EAAMrQ,WAtBT,SAsBG,EAAgB6T,gBAtBnB,SAsBG,EAA+BC,YAtBlC,EAsBG,EAAsCtiB,KAAI,SAACuiB,GAAD,iBACzC,gBAACT,GAAA,EAAKU,KAAN,CACEpY,IAAG,mBAAcmY,GAAd,SAAcA,EAAME,WAApB,EAAc,EAAY5iB,IAC7B8W,QAAS,WACPiL,GAAY,GACZ,MAAIW,KAAME,MACRjB,EAAQ,MAACe,OAAD,EAACA,EAAME,OAGnBrM,MAAK,MAAEmM,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAY5U,WAAd,EAAE,EAAkBpG,WA/C/B,gBAACua,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,KAErC,MAALiH,GAAA,SAAAA,EAAOgF,WAAP,IAAapG,OAAQ,UCxDb,SAASib,GAAe1jB,GAA+B,IAAD,IAC3DsiB,EAAyEtiB,EAAzEsiB,MAAcC,EAA2DviB,EAAlE6F,MAAsBsC,EAA4CnI,EAA5CmI,gBAAiB0B,EAA2B7J,EAA3B6J,MAAO2Y,EAAoBxiB,EAApBwiB,SAAUmB,EAAU3jB,EAAV2jB,MACjExR,EAAQsQ,eACR5c,EAAQ0c,GAAiBpQ,EAAMX,OAAOkR,UAC5C,EAAkCzhB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACMgB,EAAU9B,GAAe3Y,EAAW0Z,YAE1C,OAAQe,EAiBN,gBAACd,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,GAC3C+U,QAAS,kBAAMiM,GAAWhB,GAAY,KAEhC,MAAL/Y,KAAOhJ,GAAP,MAAYgJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAapG,KAAO,kBAlBvC,MAsBGkb,OAtBH,EAsBGA,EAAO3iB,KAAI,SAACqN,GAAD,eACV,gBAACyU,GAAA,EAAKU,KAAN,CACEpY,IAAG,WAAaiD,EAAKxN,GACrB8W,QAAS,WACPiL,GAAY,GACZ,MAAIvU,KAAML,cACRwU,EAASnU,EAAKL,eAGlBoJ,MAAK,MAAE/I,GAAF,SAAEA,EAAML,eAAR,SAAE,EAAoBa,WAAtB,EAAE,EAA0BpG,WA/CvC,gBAACua,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,KAErC,MAALiH,GAAA,SAAAA,EAAOgF,WAAP,IAAapG,OAAQ,iBCpB5B,I,GAAMob,GAAuB5D,aAAH,+bAyBX,SAAS6D,GAAU9jB,GAA0B,IAAD,UACjDsiB,EAAkEtiB,EAAlEsiB,MAAcC,EAAoDviB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiBqa,EAAoBxiB,EAApBwiB,SAAU3Y,EAAU7J,EAAV6J,MAC1DsI,EAAQsQ,eACR5c,EAAQ0c,GAAiBpQ,EAAMX,OAAOkR,UAC5C,EAAkCzhB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACQ7Q,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAEA8N,EAASW,aAAgBqD,GAAsB,CACrDxE,UAAW,CACTiB,WAAYvO,EACZC,YAAa,CAAC,iBAHV6N,KAQR,OAFgBiC,GAAe3Y,EAAW0Z,YAmBxC,gBAACC,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,kBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,GAC3C+U,QAAS,kBAAMiL,GAAY,KAErB,MAAL/Y,KAAOhJ,GAAP,MAAYgJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAapG,KAAO,aAlBvC,MAsBGoX,GAtBH,SAsBGA,EAAMrQ,WAtBT,SAsBG,EAAgB6T,gBAtBnB,SAsBG,EAA+BC,YAtBlC,EAsBG,EAAsCtiB,KAAI,SAACuiB,GAAD,iBACzC,gBAACT,GAAA,EAAKU,KAAN,CACEpY,IAAG,uBAAkBmY,GAAlB,SAAkBA,EAAME,WAAxB,EAAkB,EAAY5iB,IACjC8W,QAAS,WACPiL,GAAY,GACZ,MAAIW,KAAME,MACRjB,EAASe,EAAKE,OAGlBrM,MAAK,MAAEmM,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAY5U,WAAd,EAAE,EAAkBpG,WA/C/B,gBAACua,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,KAErC,MAALiH,GAAA,SAAAA,EAAOgF,WAAP,IAAapG,OAAQ,YCrD5B,IAAMsb,GAAe9D,aAAH,4PAeH,SAAS+D,GAAUhkB,GAA0B,IAAD,EACjDsiB,EAAkEtiB,EAAlEsiB,MAAcC,EAAoDviB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiB0B,EAAoB7J,EAApB6J,MAAO2Y,EAAaxiB,EAAbwiB,SACvDrQ,EAAQsQ,eACR5c,EAAQ0c,GAAiBpQ,EAAMX,OAAOkR,UAC5C,EAAkCzhB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACQ7Q,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAEA8N,EAASW,aAAgBuD,GAAc,CAC7C1E,UAAW,CACTiB,WAAYhS,OAAOyD,MAFf8N,KAKF+D,EAAU9B,GAAe3Y,EAAW0Z,YAE1C,OAAQe,EAmBN,gBAACd,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,WACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExBwgB,UAAW,CAAEvd,QAAOD,SAAU0c,EAAQ,QAAK1f,GAC3C+U,QAAS,kBAAMiM,GAAWhB,GAAY,MAEhC,MAAL/Y,OAAA,EAAAA,EAAOpB,OAAQ,aAlBtB,MAsBGoX,GAtBH,SAsBGA,EAAMoE,aAtBT,EAsBG,EAAcjjB,KAAI,SAACgL,GAAD,OACjB,gBAAC8W,GAAA,EAAKU,KAAN,CACEpY,IAAG,iBAAmBY,EAAMnL,GAC5B8W,QAAS,WACPiL,GAAY,GACZJ,EAASxW,IAEXoL,MAAOpL,EAAMvD,WA/CnB,gBAACua,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,mBACLC,cAAerd,EACfnD,MAAO,CACLygB,iBAAkB,EAClBhb,kBACAjI,OAAQoiB,EAAQ,QAAK1f,EACrBwC,WAAY,UAEdge,UAAW,CACTvd,QACAD,SAAU0c,EAAQ,QAAK1f,KAGnB,MAALiH,OAAA,EAAAA,EAAOpB,OAAQ,Y,mIClDP,SAASyb,GAAYlkB,GAClC,IAAsBmkB,EAA2BnkB,EAAzCokB,aAAgCC,EAAxC,KAAiDrkB,EAAjD,IACQ6J,EAAUwa,EAAVxa,MACFsI,EAAQsQ,eAER2B,EAAenjB,eACnB,SAAC0Z,GACC,GAAI,KAAK+E,KAAK/E,GAAO,CACnB,MAAkBA,EAAK2J,MAAM,YAAc,CAAC,KAArCC,EAAP,YACAJ,EAAc7V,OAAOiW,OAGzB,CAACJ,IAEH,OACE,gBAACK,GAAA,EAAD,QACMH,EADN,CAEQD,eACNva,MAAK,IAAKA,GAAS,GACnB6N,KAAK,WACL+M,aAAa,aACbC,MACE,gBAACF,GAAA,EAAUG,MAAX,CACEvB,UAAW,CACTljB,OAAQ,QAIVya,KACE,gBAAC3S,EAAA,EAAD,CAAMtF,MAAOqC,GAAO6f,UAClB,gBAAC,IAAD,CACEliB,MAAO,CACLqC,GAAO8f,gBACP,CAAE1e,YAAagM,EAAMX,OAAOmJ,KAAMxS,gBAAiBgK,EAAMX,OAAOsT,UAElEnN,QAAS,wBAAMwM,OAAN,EAAMA,GAAiBta,GAAS,GAAK,KAE9C,gBAACkb,GAAA,EAAD,CAAwBtc,KAAK,aAAaC,KAAM,MAElD,gBAAC,IAAD,CACEhG,MAAO,CAACqC,GAAOigB,mBAAoB,CAAE7c,gBAAiBgK,EAAMX,OAAOsT,UACnEnN,QAAS,wBAAMwM,OAAN,EAAMA,GAAiBta,GAAS,GAAK,KAE9C,gBAACkb,GAAA,EAAD,CAAwBtc,KAAK,eAAeC,KAAM,SAM5Duc,aAAa,KAKnB,IAAMlgB,GAASC,IAAWC,OAAO,CAC/B+f,mBAAoB,CAClB/kB,MAAO,GACPC,OAAQ,GACRkF,WAAY,SACZ8f,gBAAiBlgB,IAAWmgB,eAE9BN,gBAAiB,CACf5kB,MAAO,GACPC,OAAQ,GACRklB,kBAAmBpgB,IAAWmgB,cAC9BD,gBAAiBlgB,IAAWmgB,cAC5B/f,WAAY,UAEdwf,SAAU,CACR3kB,MAAO,GACPC,OAAQ,GACRmlB,WAAY,EACZC,aAAc,GACdvf,cAAe,SACfM,eAAgB,c,SCnEb,SAASkf,GAIdC,EACApiB,GAIA,IAAQsb,EAAetb,EAAfsb,WAER,OAAO,SAAqBpa,GAC1B,IAAQ+a,EAAqC/a,EAArC+a,UAAWoG,EAA0BnhB,EAA1BmhB,aAAc/M,EAAYpU,EAAZoU,QAC3BjC,EAAWV,KAEjB,EAA0CyK,aAASgF,EAAO,CACxDnG,YACAoG,iBAFM5F,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAAS5b,EAAhC,EAAgCA,MAK1B6b,EAAkB1kB,WAAc,kBAAMyd,EAAWmB,KAAO,CAACA,IAiB/D,OAfA5e,aAAgB,WACd,MAAI6I,KAAOG,WACuB,IAA5B3F,EAAKshB,oBACPnP,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAASH,EAAMG,QACfiP,QAAS,WAKR,MAAPR,KAAU5O,EAAMG,YAEjB,CAAC3F,EAAKoU,QAAN,MAAe5O,OAAf,EAAeA,EAAOG,QAAS3F,EAAKshB,mBAAoBlN,EAASjC,IAE7D,CACLH,UACAuJ,KAAM8F,EACND,YCHSzkB,I,GAAAA,WAzCf,SAAgEjB,GAC9D,IACE6lB,EAQE7lB,EARF6lB,MACAC,EAOE9lB,EAPF8lB,SACAC,EAME/lB,EANF+lB,WACAC,EAKEhmB,EALFgmB,WACA/C,EAIEjjB,EAJFijB,KACAgD,EAGEjmB,EAHFimB,gBACAC,EAEElmB,EAFFkmB,iBACAC,EACEnmB,EADFmmB,gBASF,OANAllB,aAAgB,aACT6kB,IAAcA,EAASnK,QAAUkK,EAAMlK,QAAUwK,IACpDD,EAAiB,CAACL,EAAM,OAEzB,CAACC,EAAUK,EAAiBD,EAAkBL,IAG/C,gBAAC7d,EAAA,EAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAOqgB,SAAU,SAC5CP,EAAM7kB,KAAI,SAACoM,GAAD,OACT,gBAAC4V,GAAA,EAAD,CACE5X,IAAKmC,KAAKiM,UAAUpM,GACpBsK,KAAK,WACLuL,MAAO6C,EAAS/M,MAAK,SAAClP,GAAD,OAAWf,mBAAQsE,EAAMvD,OAAWoZ,EAAOA,OAAOrgB,EACvEF,MAAO,CAAE2jB,OAAQ,GACjB7O,UAAoB,MAAVwO,OAAA,EAAAA,EAAa5Y,MAAS,EAChC0Y,SAAUC,EAAaA,EAAW3Y,GAAQ0Y,EAAS/M,MAAK,SAAClP,GAAD,OAAWf,mBAAQsE,EAAMvD,MACjF8N,QAAS,kBACPuO,EACsB,IAApBJ,EAASnK,OAAe,CAACvO,GAAQkZ,iBAAMR,EAAU,CAAC1Y,GAAOG,KAAKiM,cAIjEyM,EAAgB7Y,WAOW,SAACmZ,EAAUC,GAC/C,OAAO1d,mBACL2d,gBAAKF,EAAU,CAAC,aAAc,aAAc,QAAS,aACrDE,gBAAKD,EAAM,CAAC,aAAc,aAAc,QAAS,iBCrDtC,SAASE,GAAmB1mB,GACzC,IAAQ2mB,EAAS3mB,EAAT2mB,KACR,OACE,gBAAC,KAAD,CACEC,WAAS,EACT9lB,eAAgB,CACdZ,OAAQ,GAA6B,IAAbymB,GAAQ,GAChC1mB,MAAO,OACPoG,eAAgB,SAChBwgB,aAAc,IAEhBpkB,OAAQ,CACN,CACE2I,IAAK,SACLnL,MAAO,GACPC,OAAQ,GACRyC,aAAc,EACdmkB,eAAgB,GAChB3D,iBAAkB,GAEpB,CACE/X,IAAK,QACLrF,cAAe,MACf3F,SAAU,CACR,CACEgL,IAAK,QACLnL,MAAO,GACPC,OAAQ,GACRyC,aAAc,GACd2iB,YAAa,GAEf,CACEla,IAAK,QACLnL,MAAO,GACPC,OAAQ,GACRyC,aAAc,GACd2iB,YAAa,GAEf,CAAEla,IAAK,QAASnL,MAAO,GAAIC,OAAQ,GAAIyC,aAAc,SC3B1D,I,GAiBDokB,GAAsBxB,GAjB2BtF,aAAH,4RAuBT,CACzCvB,WAAY,SAAC8G,GAAD,cAAY,CACtBwB,kBAAuB,MAALxB,GAAA,SAAAA,EAAOhW,eAAP,IAAiBwX,mBAAoB,GACvDtb,aAAkB,MAAL8Z,GAAA,SAAAA,EAAOhW,eAAP,IAAiB9D,cAAe,GAC7Cub,WAAgB,MAALzB,OAAA,EAAAA,EAAOyB,YAAa,OAIpB,SAASC,GAAmBlnB,GACzC,IAAQmnB,EAAmDnnB,EAAnDmnB,sBAAuBnG,EAA4BhhB,EAA5BghB,OAAQnX,EAAoB7J,EAApB6J,MAAO2Y,EAAaxiB,EAAbwiB,SACtCzQ,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBACR,EAA0BgV,GAAoB,CAC5C1H,UAAW,CACT+H,QAAS,CAAC9Y,OAAO0S,IAAW,MAAMqG,OAAOC,SACzChH,WAAYhS,OAAOyD,IAErB2G,QAASvW,QAAQ2H,QALX+V,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAYd,OAJArV,aAAgB,WACO,MAArBkmB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,kBACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,MACE2B,kBAAO,GAAD,aAAU,MAAJ3H,OAAA,EAAAA,EAAMmH,mBAAoB,IAAhC,MAA6C,MAAJnH,OAAA,EAAAA,EAAMoH,YAAa,MAAM,qBAAGpmB,OAC3E,GAEFilB,SAAU,CAACjc,GAAOwd,OAAOC,SACzBrB,gBAAiB,SAACtY,GAAD,OAAsB,MAARA,OAAA,EAAAA,EAAUlF,OAAQ,WACjDud,WAAY,SAACrY,GAAD,cACV,MAACkS,GAAD,SAACA,EAAMmH,mBAAN,EAAwBhmB,KAAI,qBAAGH,MAAashB,SAA5C,MAAqDxU,OAArD,EAAqDA,EAAU9M,MAElEqlB,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SC/D3D,I,GAqBDC,GAAiBnC,GArBkCtF,aAAH,8WA2BT,CAC3CvB,WAAY,SAAC8G,GAAD,YAAY,CACtB9Z,aAAkB,MAAL8Z,GAAA,SAAAA,EAAOhW,eAAP,IAAiB9D,cAAe,OAIlC,SAASic,GAAqB3nB,GAC3C,IAAQ6J,EAA8D7J,EAA9D6J,MAAOsd,EAAuDnnB,EAAvDmnB,sBAAuB3E,EAAgCxiB,EAAhCwiB,SAAUoF,EAAsB5nB,EAAtB4nB,kBACxC7V,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAER,EAA0B2V,GAAe,CACvCrI,UAAW,CACTiB,WAAYhS,OAAOyD,GACnB6V,kBAAmBA,GAAqB,MAE1ClP,QAASvW,QAAQ2H,QALX+V,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAYd,OAJArV,aAAgB,WACO,MAArBkmB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,eACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,OAAW,MAAJhG,OAAA,EAAAA,EAAMnU,cAAe,GAC5Boa,SAAU,CAACjc,GAAOwd,OAAOC,SACzBrB,gBAAiB,SAAClY,GAAD,aAAgBA,OAAhB,EAAgBA,EAAYtF,MAC7Cud,WAAY,kBAAM,GAClBE,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SC3DlE,SAASI,GAAS7nB,GAChB,IAAMmS,EAAQsQ,eACN3U,EAAQ9N,EAAR8N,IACFrF,GAAU,MAAHqF,OAAA,EAAAA,EAAKrF,QAAL,MAAgBqF,OAAhB,EAAgBA,EAAKnB,MAArB,WAA6BmB,OAA7B,EAA6BA,EAAKlB,OAE/C,OACE,gCACE,gBAACjE,EAAA,EAAD,KAAUF,EAAV,YAAmBqF,OAAnB,EAAmBA,EAAKf,YAAxB,UACEe,EAAIe,KAWF,KAVF,gBAAC7G,EAAA,EAAD,CACEtF,MAAO,CACLob,QAAS,EACT3Y,kBAAmB,EACnBgD,gBAAiBgK,EAAMX,OAAOgB,OAC9B7P,aAAc,KAGhB,gBAACgG,EAAA,EAAD,CAAMjG,MAAO,CAAEkD,SAAU,GAAIC,MAAO,UAApC,kBAOV,IAAMiiB,GAAa7H,aAAH,+ZAsBD,SAAS8H,GAAU/nB,GAAoB,IAAD,QAC3CghB,EAAiEhhB,EAAjEghB,OAAQnX,EAAyD7J,EAAzD6J,MAAOsc,EAAkDnmB,EAAlDmmB,gBAAiB3D,EAAiCxiB,EAAjCwiB,SAAUlC,EAAuBtgB,EAAvBsgB,WAAY0H,EAAWhoB,EAAXgoB,OAC9D,EAAkC/mB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACQ7Q,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAER,EAA8BkW,aAAoBH,GAAY,CAC5DjH,YAAa,sBADf,WAAOqH,EAAP,KAAoBrI,EAApB,KAAoBA,KAsBpB,OAlBA5e,aAAgB,WACV+f,GAAUV,GACZ4H,EAAU,CACR7I,UAAW,CACTiB,WAAYvO,EACZiP,OAAQ1S,OAAO0S,GACfhS,SAAUgZ,QAAUplB,OAIzB,CAACoe,EAAQV,EAAY4H,EAAWnW,EAAmBiW,IAEtD/mB,aAAgB,WAAO,IAAD,OACf4I,GAASsc,GAAV,MAA6BtG,GAA7B,SAA6BA,EAAMrQ,WAAnC,SAA6B,EAAgBxB,eAA7C,SAA6B,EAA8BY,gBAA9B,EAA6C+M,QAC5E6G,EAAS3C,EAAKrQ,SAASxB,aAAaY,cAAc,MAEnD,CAACuX,EAAD,MAAkBtG,GAAlB,SAAkBA,EAAMrQ,SAASxB,mBAAjC,EAAkB,EAA6BY,cAAe4T,EAAU3Y,IAGzE,gBAACiZ,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACyB,GAAA,EAAD,CACE2D,WAAY,kBAAMvF,GAAY,IAC9BwF,MAAM,aACNve,MACEA,IACY,MAALA,OAAA,EAAAA,EAAOpB,QAAP,MAAkBoB,OAAlB,EAAkBA,EAAO8C,MAAzB,WAAiC9C,OAAjC,EAAiCA,EAAO+C,QAD1C,YACsD/C,OADtD,EACsDA,EAAOkD,YAD7D,cAEDnK,EAENI,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,eAC5BqF,UAAU,EACV5Q,KAAK,cAdX,MAkBGmI,GAlBH,SAkBGA,EAAMrQ,WAlBT,SAkBG,EAAgBxB,eAlBnB,SAkBG,EAA8BY,oBAlBjC,EAkBG,EAA6C5N,KAAI,SAAC8M,GAAD,OAChD,gBAACgV,GAAA,EAAKU,KAAN,CACEpY,IAAG,cAAgB0C,EAAIjN,GACvB8W,QAAS,WACPiL,GAAY,GACZJ,EAAS1U,IAEXpL,MAAO,CAAEzC,MAAO,QAChBmX,MAAO,gBAACyQ,GAAD,CAAU/Z,IAAKA,UCxGjB,SAASya,KAAgB,IAAD,8CAC/B9R,EAAWV,KACXjE,EAAkBuO,KAClBhW,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3E,YAClD7O,aAAgB,WAAO,IAAD,EACpB,YAAIoJ,EAAMV,OAAOqE,eAAb,EAA2BnE,MAAO,CAAC,IAAD,IACA,MAS+C,IATnF,IAAKQ,EAAMV,OAAOuC,WAAWrC,MAC3B4M,EACE9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAC9B,aACAkE,QAAO,SAAAjE,EAAMV,OAAOqE,eAAb,WAA2BnE,QAA3B,WAAkCgF,WAAlC,IAAwC3C,aAAc,OAKnE,IAAK7B,EAAMV,OAAOmE,IAAIjE,OAAlB,SAA2BQ,EAAMV,OAAOqE,aAAanE,MAAMgF,OAA3D,SAA2B,EAAsCI,OAAtC,EAA4C0M,OACzElF,EACE9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,MAAD,SAAQC,EAAMV,OAAOqE,eAArB,SAAQ,EAA2BnE,YAAnC,EAAQ,EAAkCgF,KAAKI,KAAK,SAIzF,CACDwH,EACApM,EAAMV,OAAOqE,aAAanE,MAFzB,SAGDQ,EAAMV,OAAOqE,aAAanE,YAHzB,EAGD,EAAiChJ,GACjCwJ,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOmE,IAAIjE,QAGnB,IAEM2e,EAA0B1G,IAFpB,MAAGzX,GAAH,SAAGA,EAAOZ,eAAV,EAAG,EAAiB5I,IAGrBsI,EAAWsf,eAAiBtf,EAAWuf,gBAGlD,OACE,gCACE,gBAACxB,GAAD,CACErd,MAAOQ,EAAMV,OAAOgE,SAAS9D,MAC7BmX,OAAQ1S,OAAM,MAACjE,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeqE,eAAhB,SAAC,EAA6BnE,QAA9B,SAAC,EAAoCgF,WAArC,EAAC,EAA0ChO,KAAO,KAChE2hB,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,WAAYP,QAE7E,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgE,SAAS7D,MAAQ,QAAU,QACvDO,EAAMV,OAAOgE,SAAS7D,OAAS,IAGlC,gBAAC6d,GAAD,CACE9d,MAAOQ,EAAMV,OAAOoE,WAAWlE,MAC/B+d,mBAAoBY,EACpBhG,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,aAAcP,QAE/E,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOoE,WAAWjE,MAAQ,QAAU,QACzDO,EAAMV,OAAOoE,WAAWjE,OAAS,IAGnC,MAACO,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeoE,aAAhB,SAAC,EAA2BlE,QAA5B,SAAC,EAAkC+D,SAAlC,EAA0C+N,OAC1C,gBAAC,KAAK4L,UAAN,sBADmD,KAGrD,gBAACsB,GAAA,EAAD,CAAYC,YAAU,EAACpmB,MAAOqC,GAAOgkB,cAArC,MACG1e,GADH,SACGA,EAAOV,SADV,SACG,EAAeoE,aADlB,SACG,EAA2BlE,QAD9B,SACG,EAAkC+D,aADrC,EACG,EAA0C5M,KAAI,SAAC0O,GAAD,mBAC7C,gBAACsT,GAAA,EAAD,CACE8C,SAAQ,MAAEzb,GAAF,SAAEA,EAAOV,SAAT,SAAE,EAAeiE,OAAO/D,YAAxB,EAAE,EAA6BkP,MAAK,qBAAGlY,KAAgB6O,EAAM7O,MACrE8W,QACO,MAALtN,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,OAAO/D,QAAtB,EAA6BkP,MAAK,qBAAGlY,KAAgB6O,EAAM7O,MACvD,0BACE4V,EACE9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAC9B,SAD8B,MAE9BC,GAF8B,SAE9BA,EAAOV,SAFuB,SAE9B,EAAeiE,OAAO/D,YAFQ,EAE9B,EAA6Bwd,QAAO,qBAAGxmB,KAAgB6O,EAAM7O,UAGnE,0BACE4V,EACE9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAC9B,SAD8B,gBAEpB,MAALC,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,aAAf,IAAuB/D,QAAS,IAFP,CAEY6F,SAKlDA,EAAMjH,KApBZ,MAoBsBiH,EAAMjE,KApB5B,SAwBJ,gBAACkd,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOiE,OAAO9D,MAAQ,QAAU,QACrDO,EAAMV,OAAOiE,OAAO9D,OAAS,IAEhC,gBAACkf,GAAA,EAAD,MACE3e,EAAMV,OAAOqE,aACb,gBAAC+Z,GAAD,CACEkB,UAAQ,EACRpf,MAAOQ,EAAMV,OAAOmE,IAAIjE,MACxBmX,OAAQ1S,OAAM,SAACjE,EAAMV,OAAOqE,eAAd,SAAC,EAA2BnE,QAA5B,SAAC,EAAkCgF,WAAnC,EAAC,EAAwChO,IACvDyf,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C2hB,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,MAAOP,QAN5C,KAS9B,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOmE,IAAIhE,MAAQ,QAAU,QAClDO,EAAMV,OAAOmE,IAAIhE,OAAS,IAE7B,gBAACoa,GAAD,CACEkE,MAAM,mBACNte,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,MAAK,SAAEQ,EAAMV,OAAOuC,iBAAf,EAAE,EAAyBrC,MAChCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,aAAckE,OAAO4a,SAInE,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGnC,SAACO,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BmF,SAC/B,gCACE,gBAAC,KAAKuY,UAAN,kBACA,gBAAC/C,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,iBACNte,QAASO,EAAMV,OAAOsE,cAAcnE,MACpCD,OAAO,SAAAQ,EAAMV,OAAOsE,gBAAb,WAA4BpE,YAA5B,IAAmCsf,aAAc,GACxD/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,gBAAiB8e,QAI/D,gBAAC1E,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,wBACNte,QAASO,EAAMV,OAAOuE,oBAAoBpE,MAC1CD,OAAO,SAAAQ,EAAMV,OAAOuE,oBAAoBrE,YAAjC,IAAwCsf,aAAc,GAC7D/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,sBAAuBkE,OAAO4a,UArBpC,MA8BlD,I,GAAMnkB,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,GAERxM,MAAO,CACLqc,aAAc,GAEhBkC,aAAc,CACZlC,aAAc,K,qkBCtJlB,IAAMuC,GAAuBnJ,aAAH,s/DA2GX,SAASoJ,GAAmBrpB,GAA6B,IAAD,oCAC7D8e,EAAoB9e,EAApB8e,UAAWpV,EAAS1J,EAAT0J,KACb+M,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3E,YAC5CwZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAA2CmK,aAAsBqK,IAAjE,WAAOG,EAAP,KAA2BC,EAA3B,KAEM7J,EAAW1e,eAAkB,WAAO,IAAD,IACnCse,GAAY,EAkBhB,OAjBI,SAAClV,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BhJ,KAChC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,WAAY,wCAIlD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BhJ,KAClC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM3E,SAASrF,cAAc,CACnC,aACA,iDAKE8U,IACP,CAAC9I,EAAD,SAAWpM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BhJ,GAAxC,SAA4CwJ,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BhJ,KACxE4oB,EAAaxoB,eAAkB,0EAAAG,EAAAC,OAAA,mDAC9Bse,IAD8B,4EAAAve,EAAA,MAKZmoB,EAAmB,CACtClK,UAAU,IACRqK,WAAYpb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BhJ,IAChD8oB,SAAQ,SAAEtf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4B7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,MAC7D+oB,OAAQtb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBhJ,IACxC0N,MAAO,SAAClE,EAAMV,OAAOmE,IAAIjE,QAAjB,EAAwBhJ,GAAYyN,OAAM,SAACjE,EAAMV,OAAOmE,IAAIjE,YAAlB,EAAC,EAAwBhJ,IAAtC,KACrCgpB,aAAcvb,OAAM,SAACjE,EAAMV,OAAOoE,aAAd,SAAC,EAAyBlE,YAA1B,EAAC,EAAgChJ,IACrDipB,eAAgBxb,OAAM,SAACjE,EAAMV,OAAOqE,eAAd,SAAC,EAA2BnE,YAA5B,EAAC,EAAkChJ,IACzDqL,WAAY7B,EAAMV,OAAOuC,WAAWrC,OAChC,SAACQ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BmF,SAEhC,CACEf,cAAa,SAAE5D,EAAMV,OAAOsE,oBAAf,EAAE,EAA4BpE,MAC3CqE,oBAAmB,SAAE7D,EAAMV,OAAOuE,0BAAf,EAAE,EAAkCrE,OAHzD,OAfyB,UAK3B+V,EAL2B,OAuBjC,SAAAA,EAAOC,OAAP,WAAakK,aAAb,WAAyBjK,cAAzB,EAAsC9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QAClD,OAAQO,GACN,IAAK,YACH,OAAOiM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,WAAYR,KACpE,IAAK,OACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,OAAQR,KAChE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,SAAUR,KAClE,IAAK,cACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,aAAcR,KACtE,IAAK,MACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,MAAOR,KAC/D,IAAK,gBACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,eAAgBR,KACxE,IAAK,cACH,OAAOwM,EAAS9B,GAAQF,MAAM3E,SAASrF,cAAc,CAAC,aAAcR,KACtE,QACE,OAAO,SA1CoB,MA6C7B2V,GA7C6B,SA6C7BA,EAAQC,OA7CqB,SA6C7B,EAAckK,aA7Ce,SA6C7B,EAA0BhK,UAA1B,EAAkCpE,OA7CL,wBA8C/BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAckK,iBAAhB,EAAE,EAA0BhK,OAAO,GAC1C7G,QAAS,WAjDkB,2BAsD7B,SAAC0G,EAAOC,OAAR,SAAC,EAAakK,aAAd,SAAC,EAAyBjK,cAAzB,EAAsCnE,QACzCmD,IAvD+B,kDA0DjCrI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WA7DoB,mEAiElC,CACDzC,EACA8S,EACAzK,EAHC,SAIDzU,EAAMV,OAAOqE,eAJZ,SAID,EAA2BnE,YAJ1B,EAID,EAAkChJ,GAClCwJ,EAAMV,OAAOuC,WAAWrC,MALvB,SAMDQ,EAAMV,OAAOiE,aANZ,EAMD,EAAqB/D,MANpB,SAODQ,EAAMV,OAAOgE,SAAS9D,YAPrB,EAOD,EAA6BhJ,GAP5B,SAQDwJ,EAAMV,OAAOkE,KAAKhE,YARjB,EAQD,EAAyBhJ,GARxB,SASDwJ,EAAMV,OAAOuE,0BATZ,EASD,EAAkCrE,MATjC,SAUDQ,EAAMV,OAAOsE,oBAVZ,EAUD,EAA4BpE,MAV3B,SAWDQ,EAAMV,OAAOmE,IAAIjE,YAXhB,EAWD,EAAwBhJ,GAXvB,SAYDwJ,EAAMV,OAAOoE,WAAWlE,YAZvB,EAYD,EAA+BhJ,GAZ9B,SAaDwJ,EAAMV,OAAOoE,WAAWlE,YAbvB,EAaD,EAA+BmF,SAC/B2Q,IAGF,OACE,gBAACqK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,EAAMhH,MAAO,CAAEwnB,UAAW,MAC3C,gBAACC,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASmN,EAAalT,QACtBzQ,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAElC,gBAACyX,GAAA,EAAOI,MAAR,wBAEehgB,GAFf,SAEeA,EAAOV,SAFtB,SAEe,EAAeqE,eAF9B,SAEe,EAA6BnE,QAF5C,SAEe,EAAoCgF,WAFnD,EAEe,EAA0CpG,MAFzD,iBAEoE4B,EAAMV,OAAOkE,OAFjF,SAEoE,EAAmBhE,YAFvF,EAEoE,EAA0BpB,OAE9F,gBAACwhB,GAAA,EAAOK,WAAR,KACE,gBAACzB,GAAA,EAAD,KACE,gBAAC,GAAD,QAGJ,gBAACoB,GAAA,EAAOM,QAAR,CAAgB7nB,MAAO,CAAE2D,eAAgB,aACvC,gBAACkR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAM3E,SAAShI,SAChC9H,EAAMwqB,YAHV,UAQA,gBAACjT,EAAA,EAAD,CAAQI,QAAS8R,GAAjB,e,iBC7NV,IAsCMgB,GAA+BlF,GAtCStF,aAAH,yoBA4CF,CACvCvB,WAAY,SAAC8G,GAAD,mBAAWA,GAAX,SAAWA,EAAOhW,eAAlB,EAAW,EAAiBxB,gBAG3B,SAAS0c,GAAY1qB,GAAsB,IAAD,MClFZ2qB,EAAwBC,EDoFjEtK,EAYEtgB,EAZFsgB,WACAwJ,EAWE9pB,EAXF8pB,eACAe,EAUE7qB,EAVF6qB,YACA3e,EASElM,EATFkM,WACA4e,EAQE9qB,EARF8qB,YACA9b,EAOEhP,EAPFgP,SACAf,EAMEjO,EANFiO,cACA8c,EAKE/qB,EALF+qB,gBACAC,EAIEhrB,EAJFgrB,SACAC,EAGEjrB,EAHFirB,mBACAC,EAEElrB,EAFFkrB,sBACAC,EACEnrB,EADFmrB,wBAEc7B,EAAgBrT,IAAe,SAACuC,GAAD,OAAUA,KAAjD5D,OAER,EAA0B6V,GAA6B,CACrDpL,UAAW,CACTyK,iBACAxJ,cAEF5H,QAASvW,QAAQ2H,QALX+V,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAad,OALArV,aAAgB,WAAO,IAAD,GACfiL,GAAD,MAAe2T,GAAf,SAAeA,EAAMhR,OAAN,EAAY3C,YAC7B+e,EAAmB3c,OAAOuR,EAAKhR,KAAK3C,eAErC,OAAC2T,OAAD,EAACA,EAAMhR,KAAK3C,WAAYA,EAAY+e,IAErC,gBAACG,GAAA,EAAD,CAAM1oB,MAAO,CAAEygB,iBAAkB,GAAI0D,aAAc,IAAMwE,UAAW,GAClE,gBAAClB,EAAA,EAAD,CAAaC,eAAa,EAACvkB,MAAOyjB,EAAYnX,MAAMX,OAAOgB,OAAQ6J,QAAS/F,IAC5E,gBAAC8U,GAAA,EAAKf,MAAN,CACEjT,MAAK,MAAEyI,OAAF,EAAEA,EAAMhR,KAAKpG,KAClBzF,KAAM,wBACA,MAAJ6c,GAAA,SAAAA,EAAMhR,OAAN,EAAYsC,MACV,gBAAC,KAAOma,MAAR,CAAchU,OAAQ,CAAEU,IAAK6H,EAAKhR,KAAKsC,OAASzI,KAAM,KAEtD,gBAAC,KAAO2f,KAAR,CAAapF,KAAK,UAAUva,KAAM,QAKxC,gBAAC0iB,GAAA,EAAKG,QAAN,KACE,gBAACvC,GAAA,EAAD,CAAStmB,MAAO,CAAEmkB,aAAc,KAChC,gBAACgC,GAAA,EAAD,CAAYC,YAAU,GACpB,gBAAC9F,GAAA,EAAD,CAAMtgB,MAAO,CAAEygB,iBAAkB,GAAKF,KAAK,OAAOvL,KAAK,WAAWF,UAAQ,GAA1E,MACGqI,GADH,SACGA,EAAMtU,WADT,EACG,EAAY9C,MAEf,gBAACua,GAAA,EAAD,CAAMtgB,MAAO,CAAEygB,iBAAkB,GAAKF,KAAK,iBAAiBvL,KAAK,WAAWF,UAAQ,GAApF,MACGqI,GADH,SACGA,EAAMhR,OADT,SACG,EAAYxC,cADf,EACG,EAAqB5D,MAEtBqiB,GAAgB5e,GAAe4e,EAAY/d,WAC3C,gBAACiW,GAAA,EAAD,CAAMtgB,MAAO,CAAEygB,iBAAkB,GAAKF,KAAK,iBAAiBvL,KAAK,WAAWF,UAAQ,ICxInDmT,EDyITze,ECzIiC0e,EDyIrBE,EAAY/d,WCxInDnE,iBAAO,QAAU+hB,EAAkBC,EAAgB,GAAGY,QAAQ,KDsIH,MAM5D,gBAACxjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAACzjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO2mB,UAClB,gBAAC3D,GAAD,CACE/G,OAAQ8I,EACRxJ,WAAYA,EACZkC,SAAUqI,EACVhhB,MAAOihB,EACP9C,OAAQhZ,EACRmX,iBAAe,EACf8C,UAAQ,KAGZ,gBAACjhB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4mB,SAClB,gBAACzH,GAAD,CACEra,MAAQqC,GAAa,EACrBkY,aAAc,SAACwH,GAAD,OAASX,EAAmBW,IAC1CxD,MAAM,uBAIVpZ,EACA,gCACE,gBAACga,GAAA,EAAD,MACA,gBAAC,KAAKzB,UAAN,kBACA,gBAACvf,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAACzjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO2mB,UAClB,gBAAClH,GAAA,EAAD,CACE3a,MAAOoE,GAAiB,GACxBmW,aAAc,SAACzJ,GAAD,aAAkBuQ,OAAlB,EAAkBA,EAAwBvQ,IACxDyN,MAAM,iBACN1Q,KAAK,cAGT,gBAAC1P,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4mB,SAClB,gBAACzH,GAAD,CACEra,MAAQkhB,GAAkB,EAC1B3G,aAAc,SAACwH,GAAD,aAAST,OAAT,EAASA,EAA0BS,IACjDxD,MAAM,wBAjBH,MAwBf,gBAACgD,GAAA,EAAKb,QAAN,CAAc7nB,MAAOqC,GAAO4P,SAC1B,gBAAC4C,EAAA,EAAD,CAAQG,KAAK,OAAOC,QAAS,wBAAMqT,OAAN,EAAMA,MAAnC,YAQR,I,GAAMjmB,GAASC,IAAWC,OAAO,CAC/BwmB,IAAK,CACHxrB,MAAO,OACP8F,cAAe,MACfX,WAAY,SACZ2Y,UAAW,IAEb2N,SAAU,CACR1U,KAAM,GACNsO,YAAa,GAEfqG,QAAS,CACP3U,KAAM,IAERrC,QAAS,CAAEtO,eAAgB,c,qkBEnM7B,IA8BM0gB,GAAsBxB,GA9BoBtF,aAAH,4eAyCF,CACzCvB,WAAY,SAAC8G,GAAD,cAAY,CACtBwB,kBAAuB,MAALxB,GAAA,SAAAA,EAAOhW,eAAP,IAAiBwX,mBAAoB,GACvDtb,aAAkB,MAAL8Z,GAAA,SAAAA,EAAOhW,eAAP,IAAiB9D,cAAe,GAC7Cub,WAAgB,MAALzB,OAAA,EAAAA,EAAOyB,YAAa,OAIpB,SAAS4E,KAAY,IAAD,4BAC3BxhB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1E,iBAC5CuZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KACX+V,EAAoBhK,GAAe3Y,EAAWuf,gBAC5C7I,EAASkH,GAAoB,CACnC1H,UAAW,CACT+H,QAAO,SAAE/c,EAAMV,OAAOwE,QAAf,SAAE,EAAoBtE,YAAtB,EAAE,EAA2B7I,KAAI,SAAC+qB,GAAD,OAAcA,EAASlrB,MAC/Dyf,WAAYgJ,EAAYvX,kBACxB/G,UAAU8gB,GAAoB,MAEhCpT,QAASvW,QAAQ2H,QANX+V,KASF7Q,IAAY,SAAC3E,EAAMV,OAAOoE,WAAWlE,SAAxB,EAA+BmF,UAElD,OACE,gCACE,gBAAC,KAAKuY,UAAN,kBACA,gBAAC6D,GAAA,EAAD,CAAMC,UAAW,EAAG3oB,MAAO,CAAEmkB,aAAc,GAAImF,WAAY,EAAG7I,iBAAkB,KAC9E,gBAACiI,GAAA,EAAKG,QAAN,KACE,gBAAC,GAAD,CACEpF,iBAAe,EACfN,MACE2B,kBAAO,GAAD,aACK,MAAJ3H,OAAA,EAAAA,EAAMmH,mBAAoB,IAD3B,MACwC,MAAJnH,OAAA,EAAAA,EAAMoH,YAAa,MAC3D,qBAAGpmB,OACA,GAEPilB,SAAUzb,EAAMV,OAAOgE,SAAS9D,MAAQ,CAACQ,EAAMV,OAAOgE,SAAS9D,OAAS,GACxEoc,gBAAiB,SAACtY,GAAD,OAAwBA,EAASlF,MAClDud,WAAY,SAACrY,GAAD,cACV,MAACkS,GAAD,SAACA,EAAMmH,mBAAN,EAAwBhmB,KAAI,qBAAGH,MAAashB,SAASxU,EAAS9M,MAEjEqlB,iBAAkB,gBAAEuB,EAAF,mBAChBhR,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,WAAYqd,QAI/D,gBAACkB,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgE,SAAS7D,MAAQ,QAAU,QACvDO,EAAMV,OAAOgE,SAAS7D,OAAS,MAKtC,gBAAC,KAAKyd,UAAN,eACA,gBAAC6D,GAAA,EAAD,CAAMC,UAAW,EAAG3oB,MAAO,CAAEygB,iBAAkB,KAC7C,gBAACiI,GAAA,EAAKG,QAAN,KACE,gBAAC,GAAD,CACEpF,iBAAe,EACfN,OAAW,MAAJhG,OAAA,EAAAA,EAAMnU,cAAe,GAC5Boa,SAAUzb,EAAMV,OAAOoE,WAAWlE,MAAQ,CAACQ,EAAMV,OAAOoE,WAAWlE,OAAS,GAC5Eoc,gBAAiB,SAAClY,GAAD,OAA4BA,EAAWtF,MACxDyd,iBAAkB,gBAAEuB,EAAF,mBAChBhR,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,aAAcqd,QAGjE,gBAACkB,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOoE,WAAWjE,MAAQ,QAAU,QACzDO,EAAMV,OAAOoE,WAAWjE,OAAS,IAGnC,MAACO,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeoE,aAAhB,SAAC,EAA2BlE,QAA5B,SAAC,EAAkC+D,SAAlC,EAA0C+N,OAC1C,gBAAC,KAAK4L,UAAN,sBADmD,KAGrD,gBAACsB,GAAA,EAAD,CAAYC,YAAU,EAACpmB,MAAOqC,GAAOgkB,cAArC,MACG1e,GADH,SACGA,EAAOV,SADV,SACG,EAAeoE,aADlB,SACG,EAA2BlE,QAD9B,SACG,EAAkC+D,aADrC,EACG,EAA0C5M,KAAI,SAAC0O,GAAD,mBAC7C,gBAACsT,GAAA,EAAD,CACE8C,SAAQ,MAAEzb,GAAF,SAAEA,EAAOV,SAAT,SAAE,EAAeiE,OAAO/D,YAAxB,EAAE,EAA6BkP,MAAK,qBAAGlY,KAAgB6O,EAAM7O,MACrE8W,QACO,MAALtN,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,OAAO/D,QAAtB,EAA6BkP,MAAK,qBAAGlY,KAAgB6O,EAAM7O,MACvD,0BACE4V,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,SADmC,MAEnCC,GAFmC,SAEnCA,EAAOV,SAF4B,SAEnC,EAAeiE,OAAO/D,YAFa,EAEnC,EAA6Bwd,QAAO,qBAAGxmB,KAAgB6O,EAAM7O,UAGnE,0BACE4V,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,SADmC,gBAEzB,MAALC,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,aAAf,IAAuB/D,QAAS,IAFF,CAEO6F,SAKlDA,EAAMjH,KApBZ,MAoBsBiH,EAAMjE,KApB5B,SAwBJ,gBAACkd,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOiE,OAAO9D,MAAQ,QAAU,QACrDO,EAAMV,OAAOiE,OAAO9D,OAAS,MAIpC,gBAACkf,GAAA,EAAD,MAEA,gBAAC,KAAKzB,UAAN,cAhFF,SAiFGld,EAAMV,SAjFT,SAiFG,EAAcwE,QAjFjB,SAiFG,EAAqBtE,YAjFxB,EAiFG,EAA4B7I,KAAI,SAAC+qB,GAAD,OAC/B,gBAACrB,GAAD,CACEpK,WAAYgJ,EAAYvX,kBACxB+X,eAAgBxb,OAAOyd,EAASlrB,IAChCiqB,YAAaiB,EAASje,UAAOlL,EAC7BsJ,WAAY6f,EAAS7f,WACrB+e,mBAAoB,SAAC/e,GAAD,aAClBuK,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0B7I,KAAI,SAAC6N,GAAD,OAC5BA,EAAKhO,KAAOkrB,EAASlrB,GAArB,SAA+BkrB,GAA/B,IAAyC7f,eAAe2C,SAKhEmc,SAAU,wBACRvU,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0Bwd,QAAO,SAACxY,GAAD,OAAUA,EAAKhO,KAAOkrB,EAASlrB,UAItEgqB,YAAa,SAACoB,GAAD,aACXxV,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0B7I,KAAI,SAAC6N,GAAD,OAC5BA,EAAKhO,KAAOkrB,EAASlrB,GAArB,SACSkrB,GADT,IACmBxd,MAAOD,OAAO2d,EAAOprB,IAAKiN,IAAKme,IAC9Cpd,SAKNG,WACNf,cAAe8d,EAAS9d,cACxB8c,gBAAiBgB,EAAS7d,oBAC1Bgd,sBAAuB,SAACjd,GAAD,aACrBwI,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0B7I,KAAI,SAAC6N,GAAD,OAC5BA,EAAKhO,KAAOkrB,EAASlrB,GAArB,SAA+BkrB,GAA/B,IAAyC9d,kBAAkBY,SAKnEsc,wBAAyB,SAACjd,GAAD,aACvBuI,EACE9B,GAAQF,MAAM1E,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0B7I,KAAI,SAAC6N,GAAD,OAC5BA,EAAKhO,KAAOkrB,EAASlrB,GAArB,SAA+BkrB,GAA/B,IAAyC7d,wBAAwBW,eAWnF,IAAM9J,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,GAERxM,MAAO,CACLqc,aAAc,GAEhBkC,aAAc,CACZlC,aAAc,K,oHCrOX,SAASqF,GACdlsB,EACAmsB,GAEA,IACMC,EAAiBpsB,EAAK,MAE5B,OAAIosB,GAGGC,GAAM,MAAQF,GAWhB,SAASxjB,GAAK3I,GACnB,IAAQ0C,EAAgD1C,EAAhD0C,MAAO4pB,EAAyCtsB,EAAzCssB,WAAYC,EAA6BvsB,EAA7BusB,UAAcC,EAAzC,KAAwDxsB,EAAxD,IACM6F,EAAQqmB,GAAc,CAAE3Z,MAAO+Z,EAAYha,KAAMia,GAAa,QAEpE,OAAO,gBAAC,IAAD,MAAa7pB,MAAO,CAAC,CAAEmD,SAASnD,IAAY8pB,IAG9C,SAASxkB,GAAKhI,GACnB,IAAQ0C,EAAgD1C,EAAhD0C,MAAO4pB,EAAyCtsB,EAAzCssB,WAAYC,EAA6BvsB,EAA7BusB,UAAcC,EAAzC,KAAwDxsB,EAAxD,IACMmI,EAAkB+jB,GAAc,CAAE3Z,MAAO+Z,EAAYha,KAAMia,GAAa,cAE9E,OAAO,gBAAC,IAAD,MAAa7pB,MAAO,CAAC,CAAEyF,mBAAmBzF,IAAY8pB,IC5BhD,SAASC,GAAT,GAA4D,IAAvCrV,EAAsC,EAAtCA,MAAOvR,EAA+B,EAA/BA,MAAO6mB,EAAwB,EAAxBA,SAChD,OACE,gBAAC,GAAD,CAAMhqB,MAAOqC,GAAO4nB,OAClB,gBAACtC,GAAA,EAAD,CAAO3nB,MAAO,CAAEmD,UAAUuR,GAC1B,gBAACwV,GAAA,EAAD,CAAWlqB,MAAO,CAAEmD,QAAOL,UAAW,WAAaknB,IAKzD,I,GAAM3nB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN8G,QAAS,EACTjN,QAAS,OACT1I,gBAAiB,eAEnB0kB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5Q,UAAW,SACXhB,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPkI,gBAAiB,cACjBjI,OAAQ,UC1BN2jB,GAAuB5D,aAAH,2tBA4CX,SAAS6M,GAAe9sB,GAAyB,IAAD,YACrDoU,EAAY6B,IAAe,SAACuC,GAAD,OAAUA,KAArCpE,QACFqC,EAAWV,KACjB,EAAoC9U,WAAe,IAAnD,WAAOmP,EAAP,KAAmBC,EAAnB,KACQ0B,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAEA8N,EAASW,aAAgBqD,GAAsB,CACrDxE,UAAW,CACTiB,WAAYhS,OAAOyD,GACnBgb,OAAQ3c,KAHJyP,KAOAhO,EAAgBwO,KAAhBxO,YACFmb,EAAmBlL,GAAe3Y,EAAWuf,gBAC7CuE,EAA+BnL,GAAe3Y,EAAW+jB,wBAE/D,OACE,gCACE,gBAACC,GAAA,EAAD,CAAWtjB,MAAOuG,EAAYgU,aAAc/T,EAAe+c,YAAY,qBACvE,gBAACplB,EAAA,EAAD,CAAMtF,MAAO,CAAExC,OAAQ,MACrB,gBAAC,IAAD,CAAYmtB,sBAAuB,CAAEhI,WAAY,OAC9C,MAACxF,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgB6T,gBAAjB,SAAC,EAA+BC,QAA/B,EAAsC3H,SACtC,gBAAC8Q,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,KAFzC,MAKG7M,GALH,SAKGA,EAAMrQ,WALT,SAKG,EAAgB6T,gBALnB,SAKG,EAA+BC,YALlC,EAKG,EAAsCtiB,KAAI,SAACuiB,GAAD,yBACzC,gBAAC,WAAD,CAAgBnY,IAAG,UAAc,MAAJmY,GAAA,SAAAA,EAAME,WAAN,IAAY5iB,KAAM,IAC7C,gBAAC,KAAK2iB,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,QAChBmL,IAAG,eAAUmY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAY5iB,IACzBuW,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKpG,KACxB6kB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAYlY,WAAd,EAAE,EAAkB9C,KAC/BzF,KAAM,4BACJ,MAACugB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAY5U,OAAZ,EAAkBsC,MAGjB,gBAAC,KAAOma,MAAR,CACEhU,OAAQ,CAAEU,IAAG,MAAEuL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKsC,OAChCzO,MAAO,CAAE0D,UAAW,SAAU+c,iBAAkB,IAChDza,KAAM,KALR,gBAAC,KAAK2f,KAAN,CAAWpF,KAAK,aASpByB,MAAO,0BACL,gBAAC6I,GAAA,EAAD,CACE/rB,OACE,SAAA4S,EAAQtE,SAASc,gBAAjB,EACI5P,KAAY,qBAAGH,MAChBshB,SAFH,MAEYoB,GAFZ,SAEYA,EAAME,WAFlB,EAEY,EAAY5iB,IACpB,UACA,eAIV2W,UAGM,MAAJ+L,GAAA,SAAAA,EAAME,WAAN,IAAY5U,KAAKhO,OAAjB,MAAwBgR,OAAxB,EAAwBA,EAAahR,KACrCosB,IACCD,EAEHrV,QAAS,WAAO,IAAD,IACblB,EACE9B,GAAQP,QAAQtE,SAASgB,YACvB,SAAAsD,EAAQtE,SAASc,gBAAjB,EAAgCpC,MAAK,2BAAG3N,KAAW,UAAQ0iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAY5iB,OAAvE,SACIuT,EAAQtE,SAASc,oBADrB,EACI,EAAgCyW,QAC9B,2BAAGxmB,KAAW,UAAQ0iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAY5iB,OAFxC,eAISuT,EAAQtE,SAASc,eAJ1B,OAIyC2S,OAJzC,EAIyCA,EAAME,YAKvD,gBAACuF,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,QAAUmL,IAAG,kBAAamY,GAAb,SAAaA,EAAME,WAAnB,EAAa,EAAY5iB,YAKvE,gBAAC0W,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1E,cAAcrB,iBAAiB0F,EAAQtE,SAASc,gBACvE5Q,EAAMwtB,UAER9qB,MAAOqC,GAAO0S,OACdC,KAAK,aANP,SAcN,I,GAAM3S,GAASC,IAAWC,OAAO,CAC/BwS,OAAQ,CACNxX,MAAO,OACP0C,aAAc,GACdmb,QAAS,GAEX2P,WAAY,CACVvtB,OAAQ,OC5INwtB,GAAwBzN,aAAH,k+CAyFZ,SAASoJ,GAAmBrpB,GAA6B,IAAD,gBAC7D0J,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QACR/T,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1E,iBAClD,EAA4CgP,aAAsB2O,IAAlE,WAAOC,EAAP,KAA4BnE,EAA5B,KACA,EAAgCvoB,WAAe,GAA/C,WAAO2sB,EAAP,KAAiBC,EAAjB,KAEMlO,EAAW1e,eAAkB,WAAO,IAAD,IACnCse,GAAY,EAkBhB,OAjBI,SAAClV,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BhJ,KAChC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,WAAY,wCAIvD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BhJ,KAClC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM1E,cAActF,cAAc,CACxC,aACA,iDAKE8U,IACP,CAAC9I,EAAD,SAAWpM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BhJ,GAAxC,SAA4CwJ,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BhJ,KACxE4oB,EAAaxoB,eAAkB,4DAAAG,EAAAC,OAAA,mDAC9Bse,IAD8B,4EAAAve,EAAA,MAKZusB,EAAoB,CACvCtO,UAAW,CACTqK,WAAYpb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BhJ,IAChDgpB,aAAcvb,OAAM,SAACjE,EAAMV,OAAOoE,WAAWlE,YAAzB,EAAC,EAA+BhJ,IACpD8oB,SAAQ,SAAEtf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4B7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,MAC7D+oB,OAAQtb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBhJ,IACxCitB,UAAS,SAAEzjB,EAAMV,OAAOwE,MAAMtE,YAArB,EAAE,EAA0B7I,KAAI,SAAC+sB,GAAD,OACvCC,gBAAKD,EAAiB,CAAC,eAZI,UAK3BnO,EAL2B,OAiBjC,SAAAA,EAAOC,OAAP,WAAaoO,cAAb,WAA0BnO,cAA1B,EAAuC9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACnD,OAAQO,GACN,IAAK,YACH,OAAOiM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,WAAYR,KACzE,IAAK,OACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,OAAQR,KACrE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,SAAUR,KACvE,IAAK,cACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,aAAcR,KAC3E,QACE,OAAO,SA9BoB,MAiC7B2V,GAjC6B,SAiC7BA,EAAQC,OAjCqB,SAiC7B,EAAcoO,cAjCe,SAiC7B,EAA2BlO,UAA3B,EAAmCpE,OAjCN,wBAkC/BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcoO,kBAAhB,EAAE,EAA2BlO,OAAO,GAC3C7G,QAAS,WArCkB,2BA0C7B,SAAC0G,EAAOC,OAAR,SAAC,EAAaoO,cAAd,SAAC,EAA0BnO,cAA1B,EAAuCnE,QAC1C3b,EAAMwqB,UA3CyB,kDA8CjC/T,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WAjDoB,mEAqDlC,CACDzC,EACAkX,EACA3tB,EAHC,SAIDqK,EAAMV,OAAOiE,aAJZ,EAID,EAAqB/D,MAJpB,SAKDQ,EAAMV,OAAOgE,SAAS9D,YALrB,EAKD,EAA6BhJ,GAL5B,SAMDwJ,EAAMV,OAAOkE,KAAKhE,YANjB,EAMD,EAAyBhJ,GANxB,SAODwJ,EAAMV,OAAOoE,WAAWlE,YAPvB,EAOD,EAA+BhJ,GAC/BwJ,EAAMV,OAAOwE,MAAMtE,MACnB8V,IAGF,OACE,gBAACqK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,EAAM4S,UAAWkO,GAClC,gBAACxiB,EAAA,EAAD,CAAMtF,MAAO,CAAEyF,gBAAiB,SAAWiU,OAAO,wBAChD,gBAACpU,EAAA,EAAD,CAAM9E,gBAAgB,SAAAmH,EAAMV,OAAOwE,QAAb,WAAoBtE,YAApB,IAA2B8R,SAAU,GAAK,OAAI/Y,EAAY,QAC9E,gBAAC,KAAD,CAAMsrB,aAAcN,EAAUlW,KAAK,QAAQyW,cAAeN,GACxD,gBAAC,KAAD,CAAWzF,MAAM,gBACf,gBAACpgB,EAAA,EAAD,OAEF,gBAAC,KAAD,CAAWogB,MAAM,kBACf,gBAACpgB,EAAA,EAAD,SAKQ,IAAb4lB,EACC,gBAAC5lB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOqpB,mBAClB,gBAACtB,GAAD,CAAgBU,OAAQ,kBAAMK,EAAY,OAG5C,gBAAC,IAAD,CAAYR,sBAAuB,CAAEgB,cAAe,IAAKC,SAAU,IACjE,gBAAC,GAAD,MACA,gBAACtmB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOwpB,iBAClB,gBAAChX,EAAA,EAAD,CACEI,QAAS8R,EACTnT,QAASkT,EAAalT,QACtBoB,KAAK,YACLhV,MAAOqC,GAAO0S,QAJhB,aAiBhB,IAAM1S,GAASC,IAAWC,OAAO,CAC/BwS,OAAQ,CACNxX,MAAO,OACP0C,aAAc,GACdmb,QAAS,GAEXyQ,gBAAiB,CACfppB,kBAAmB,GACnBgD,gBAAiB,SAEnBqmB,iBAAkB,CAChBrpB,kBAAmB,GACnBkpB,cAAe,IAEjBD,kBAAmB,CACjBluB,OAAQ,OACRiI,gBAAiB,QACjBlI,MAAO,OACP6d,QAAS,IAEX2Q,MAAO,CACLpD,UAAW,EACXljB,gBAAiB,QACjBmmB,SAAU,EACVpuB,OAAQ,OACR2Q,QAAS,OACT9K,cAAe,SACfM,eAAgB,SAChBgoB,cAAe,IAEjBK,YAAa,CACXrD,UAAW,EACXsD,oBAAqB,GACrBC,qBAAsB,GACtB1uB,OAAQ,GACR2uB,YAAa,OACbC,aAAc,CACZ7uB,MAAO,EACPC,QAAS,GAEXiI,gBAAiB,QACjB4mB,cAAe,IACfC,aAAc,Q,UC3QH,SAASC,GAASjvB,GAAwB,IAAD,gBAC9CqO,EAAmCrO,EAAnCqO,KAAMsJ,EAA6B3X,EAA7B2X,QAASuX,EAAoBlvB,EAApBkvB,SAAUxsB,EAAU1C,EAAV0C,MAC3ByP,EAAQsQ,eAER0M,IAAgB,MAAC9gB,MAAMJ,eAC7B,OACE,gCACE,gBAACmd,GAAA,EAAD,CACEzT,QAAO,8GAAE,wBAAMA,OAAN,EAAMA,EAAUtJ,MACzBgd,UAAW,EACX3oB,MAAOsC,IAAWoqB,QAAQ,CAACrqB,GAAOsqB,KAAM,CAAExI,aAAcsI,GAAgB,EAAI,IAAMzsB,KAElF,gBAAC0oB,GAAA,EAAKf,MAAN,CACEjT,OAAW,MAAJ/I,GAAA,SAAAA,EAAML,mBAAN,IAAoBa,KAAKpG,QAAzB,MAAiC4F,OAAjC,EAAiCA,EAAMJ,eAC9CjL,KAAM,4BACA,MAAJqL,GAAA,SAAAA,EAAML,eAAN,WAAoBa,OAApB,EAA0BsC,MACxB,gBAAC,KAAOma,MAAR,CACE5oB,MAAO,CAAEyF,gBAAiBgK,EAAMX,OAAOsT,SACvCxN,OAAQ,CAAEU,IAAG,MAAE3J,GAAF,SAAEA,EAAML,mBAAR,EAAE,EAAoBa,KAAKsC,OACxCzI,KAAM,KAGR,gBAAC,KAAO2f,KAAR,CACE3lB,MAAO,CAAEyF,gBAAiBgK,EAAMX,OAAOsT,SACvCjf,MAAOsM,EAAMG,KAAOH,EAAMX,OAAOmJ,KAAOxI,EAAMX,OAAOC,QACrDwR,KAAK,UACLva,KAAM,MAIZgc,MAAO,kBACJwK,EACC,gBAACI,GAAA,EAAD,CACE5sB,MAAO,CAAEqb,WAAY,GAAIuH,aAAc,GACvC3N,QAAS,SAAC4X,GACRA,EAAEC,iBACM,MAARN,KAAW7gB,KAJf,KADU,QAahB,gBAAC+c,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAAEqD,cAAe,MAAOqgB,SAAU,SACrD,gBAACpD,GAAA,EAAD,CACEtgB,MAAOqC,GAAO0qB,SACdrM,UAAWre,GAAO2qB,SAClBzM,KAAK,OACLvL,KAAK,WACLF,UAAQ,GALV,MAOGnJ,GAPH,SAOGA,EAAML,eAPT,SAOG,EAAoBzC,WAPvB,EAOG,EAA0B9C,MAE7B,gBAACua,GAAA,EAAD,CACEtgB,MAAOqC,GAAO0qB,SACdrM,UAAWre,GAAO2qB,SAClBzM,KAAK,iBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGnJ,GAPH,SAOGA,EAAML,eAPT,SAOG,EAAoBa,OAPvB,SAOG,EAA0BxC,cAP7B,EAOG,EAAmC5D,MAEtC,gBAACua,GAAA,EAAD,CACEtgB,MAAOqC,GAAO0qB,SACdrM,UAAWre,GAAO2qB,SAClBzM,KAAK,gBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGnJ,GAPH,SAOGA,EAAMV,eAPT,EAOG,EAAgBlF,MAEnB,gBAACua,GAAA,EAAD,CACEtgB,MAAOqC,GAAO0qB,SACdrM,UAAWre,GAAO2qB,SAClBzM,KAAK,gBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGnJ,GAPH,SAOGA,EAAMN,iBAPT,EAOG,EAAkBtF,MAEnB4F,EAAKshB,YACL,gBAAC3M,GAAA,EAAD,CACEtgB,MAAOqC,GAAO6qB,KACdxM,UAAWre,GAAO2qB,SAClBzM,KAAK,iBACLvL,KAAK,WACLF,UAAQ,GAEPnJ,EAAKshB,YAAYnE,QAAQ,IART,OAaxB,MAACnd,KAAMJ,cACN,gCACE,gBAACjG,EAAA,EAAD,CACEtF,MAAO,CACLzC,MAAO,OACPC,OAAQ,GACRkF,WAAY,SACZiB,eAAgB,WAGlB,gBAAC0e,GAAA,EAAD,CAAwBlf,MAAOsM,EAAMX,OAAOkR,UAAWja,KAAK,eAAeC,KAAM,MAEnF,gBAAC0iB,GAAA,EAAD,CACE1oB,MAAOsC,IAAWoqB,QAAQ,CACxB,CAAE/I,OAAQ,GAAItI,WAAY,EAAG7d,OAAQ,IAAKD,MAAO,QACjDyC,IAEF2oB,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACEjT,MAAK,MAAE/I,OAAF,EAAEA,EAAMJ,cACbjL,KAAM,kBACJ,gBAAC,KAAOqlB,KAAR,CACEpF,KAAK,qBACLpd,MAAOsM,EAAMG,KAAOH,EAAMX,OAAOmJ,KAAOxI,EAAMX,OAAOC,QACrD/O,MAAO,CAAEyF,gBAAiBgK,EAAMX,OAAOsT,SACvCpc,KAAM,QAIZ,gBAAC0iB,GAAA,EAAKG,QAAN,KACE,gBAAC5iB,EAAA,EAAD,CAAMjG,MAAOqC,GAAO8qB,gBAApB,wBA/BgB,MAwC9B,I,GAAM9qB,GAASC,IAAWC,OAAO,CAC/BoqB,KAAM,CACJhJ,OAAQ,GACRnmB,OAAQ,IACRD,MAAO,QAET2vB,KAAM,CACJvJ,OAAQ,EACRnmB,OAAQ,GACR4d,QAAS,EACT1Y,WAAY,UAEdqqB,SAAU,CACRpJ,OAAQ,EACRnmB,OAAQ,GACR4d,QAAS,EACT1Y,WAAY,UAEdsqB,SAAU,CACR9pB,SAAU,IAEZkqB,cAAe,CACbzJ,OAAQ,GACRnmB,OAAQ,IACRD,MAAO,QAET4vB,eAAgB,CACdjqB,SAAU,GACVkB,QAAS,GACTV,UAAW,SACXnG,MAAO,OACPuF,UAAW,SACXK,MAAO,a,oBCpFI2Y,MA5FcyB,aAAH,giDA4FyE,CACjGvB,WAAY,SAACkB,GAAD,OAAYA,EAAOmQ,YAC/BpR,cAAe,CACbqR,QAAS,QACTC,MAAO,MACPC,QAAS,QACTC,aAAc,gBCtFH,SAASC,GAAapwB,GAAgC,IAAD,MAC5DyW,EAAWV,KACjB,EAAkC9U,YAAe,GAAjD,WAAOovB,EAAP,KAAmBC,EAAnB,KAEQziB,EAAS7N,EAAT6N,KAGAgE,EADgBwO,KAChBxO,YAER,ExBieK,SAAiCmQ,GAChC,IAAM5e,EAAO,SAAOge,IAAmBY,GACvC,OAAOzJ,KAA4FoJ,GAAsBve,GwBnehGmtB,GAAxBC,EAAP,YAEMC,EAAqBC,GAAsB,CAC/C5R,UAAW,kBAAM,MACjBpG,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAG9DyX,EAAa1vB,eACjB,SAAO2vB,GAAP,eAAAxvB,EAAAC,OAAA,uDACQwvB,EAAgBD,EAAiBE,aAAW,IAAInQ,KAAQiQ,GAAShQ,UAAY,IAAnD,KADlC,WAAAxf,EAAA,MAGQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChB+K,WAAYilB,EAAehtB,KAAKktB,KAAKF,GAAgB,KACrDxmB,MAAOwmB,EAAe5nB,EAAU+nB,aAAe/nB,EAAUgoB,QAN7D,8DASA,CAACR,EAAoB5iB,IAGjBqjB,EAAkBjwB,eACtB,SAAOoJ,GAAP,SAAAjJ,EAAAC,OAAA,kEAAAD,EAAA,MACQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBwJ,QACAuB,WAAY,QAJhB,8DAOA,CAAC6kB,EAAoB5iB,IAGjBsjB,EAAWlwB,eAAkB,oBAAAG,EAAAC,OAAA,kEAAAD,EAAA,MAC3BovB,EAAqB,CACzBnR,UAAW,CACTxe,GAAIyN,OAAOT,EAAKhN,IAChBwJ,MAAOpB,EAAUmoB,WAJY,8DAOhC,CAACZ,EAAsB3iB,IAEpB4b,EAAaxoB,eAAkB,WACnC,OAAI,MAAC4Q,KAAawf,WASd,MAACxf,KAAayf,cASd,MAACzf,KAAa0f,cASd,MAAC1f,KAAa2f,YASlB/a,EAAS9B,GAAQF,MAAM3E,SAASpF,SAAQ,IACxC+L,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,eAAgByH,KAC1D4E,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,OAAQyD,KAC3C,MAXE4I,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,sCACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,6DACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,iCACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,oDACTiP,QAAS,eAoCd,CAACrH,EAAa4E,EAAU5I,IAErB4jB,EAAgB3P,GAAe3Y,EAAW0Z,YAE1C6O,EAAkB5P,GAAe3Y,EAAWwoB,YAC5C3E,EAAmBlL,GAAe3Y,EAAWuf,gBAC7CuE,EAA+BnL,GAAe3Y,EAAW+jB,wBAEzDrhB,EAAS,CAAC5C,EAAUgoB,KAAMhoB,EAAU+nB,cAAc7O,SAAStU,EAAKxD,OAChEunB,IAAc,MAAJ/jB,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,MAAW,MAAJ9N,OAAA,EAAAA,EAAM5B,YAAN,MAAkB4B,GAAlB,SAAkBA,EAAM7B,YAAxB,EAAkB,EAAaC,WAAY,GACnF4lB,EACJhmB,IACC+lB,GACDF,KACA,MAAC7jB,GAAD,SAACA,EAAM8V,QAAN,EAAa5K,MAAK,SAAC1K,GAAD,aAAU,SAAAA,EAAKL,mBAAL,IAAmBnN,OAAnB,MAA0BgR,OAA1B,EAA0BA,EAAahR,QAEhEixB,GACH9E,GAAoBC,KACjB,MAAJpf,OAAA,EAAAA,EAAMxD,SAAUpB,EAAUmoB,WACzB,MAACvjB,KAAMjC,aAAciC,EAAKjC,YAAa,IAAI+U,MAAOC,UAAY,KAE3DmR,EAAmB9wB,eACvB,SAAC2vB,GAAD,OAA4B,WAC1BN,GAAY,GACZK,EAAWC,MAEb,CAACD,IAGGqB,EAAc,CAClB,CACE5J,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,oBAER,CACEmF,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,oBAER,CACEmF,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,qBAIJgP,EAAkB,CACrBJ,EAEG,CACEzJ,MAAO,cACPnF,KAAM,UACNtL,QAAS,kBAAM8R,MAJjB,KAMHqI,EAEG,CACE1J,MAAO,iBACPnF,KAAM,gBACNtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1E,cAAcjI,SACrC2O,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQyD,KAEnDof,IAAiCD,GAAoBnb,IAEvD4E,EAAS9B,GAAQP,QAAQtE,SAASgB,YAAY,CAACe,KAC/C4E,EAAS9B,GAAQF,MAAM1E,cAAcrB,iBAAiB,CAACmD,MAGzD4E,EAAS9B,GAAQF,MAAM1E,cAAcrF,SAAQ,IAC7C+L,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQyD,OAf3D,MAkBJwZ,OAAOC,SAEH4K,EAAkB,CACrB,CAACjpB,EAAU+nB,cAAc7O,SAAStU,EAAKxD,OAEpC,CACE+d,MAAO,uBACPnF,KAAM,eACNtL,QAASoa,EAAiB,OAJ5B,KAMH,CAAC9oB,EAAUgoB,MAAM9O,SAAStU,EAAKxD,OAE5B,CACE+d,MAAO,cACPnF,KAAM,eACNtL,QAAS,kBACP6Y,EAAqB,CACnBnR,UAAW,CAAExe,GAAIyN,OAAOT,EAAKhN,IAAKwJ,MAAOpB,EAAUkpB,eANzD,KASH,CAAClpB,EAAUkpB,WAAWhQ,SAAStU,EAAKxD,OAEjC,CACE+d,MAAO,eACPnF,KAAM,OACNtL,QAAS,kBAAMuZ,EAAgBjoB,EAAUgoB,QAJ3C,KAMH,CAAChoB,EAAU+nB,aAAc/nB,EAAUmpB,UAAUjQ,SAAStU,EAAKxD,OAExD,CACE+d,MAAO,iBACPnF,KAAM,mBACNtL,QAAS,kBAAMwZ,MAJjB,MAMJ9J,OAAOC,SAEH+K,EAAa,eACbxmB,EAASomB,EAAkB,IADd,KAEbR,GAAiB,CAACxoB,EAAUgoB,MAAM9O,SAAjB,MAA0BtU,OAA1B,EAA0BA,EAAMxD,OAAS2nB,EAAc,IAF3D,KAGbP,EAAgBS,EAAkB,KAGxC,OACE,gBAAClI,GAAA,EAAD,KACE,gBAACsI,GAAA,EAAIC,MAAL,CACElW,UAAWgW,EAAc1W,OACzBjS,KAAM2mB,EACNpN,KAAMoN,EAAa,QAAU,OAC7BmC,SAAU,CACRC,WAAY,GACZ5L,aAAc,KAIhBlS,QAAS0d,EACTK,cAAe,gBAAGhpB,EAAH,EAAGA,KAAH,OAAc4mB,EAAY5mB,O,8DCvO3CipB,GAAuB9e,IAAS+e,OAAO,CAC3CC,IAAK5xB,QAAW,kBACd,kCAA8C6xB,MAC5C,kBAA8C,CAC5C9e,QADF,EAAG2e,4BAKPI,QAAS9xB,QAAW,kBAClB,kCAA8C6xB,MAC5C,kBAA8C,CAC5C9e,QADF,EAAG2e,4BAOPK,IAAK/xB,QAAW,kBACd,kCAAuC6xB,MAAK,kBAA8C,CACxF9e,QAD0C,EAAG2e,8BAWpC,SAASM,GAAUjzB,GAChC,IAAQkzB,EAAuBlzB,EAAvBkzB,IAAKxqB,EAAkB1I,EAAlB0I,KAAMwQ,EAAYlZ,EAAZkZ,QACbia,EAAaC,aAAKF,EAAK,IAAIvS,MAC3B0S,EAAsB,EAAIF,EAC1BG,EAAqB,GAAKH,EAC1BI,EAAwB,GAAKJ,EACnC,OACE,gBAACR,GAAD,CACEa,UAAWL,EAAa,EACxB9rB,SAAU8rB,EAAa,EAAIA,EAAa,EACxC3hB,OACE2hB,EAAa,EACT,CACE,CAAa,UAAZja,EAAsB,UAAY,UAAWqa,GAC9C,CAAa,UAAZra,EAAsB,UAAY,UAAWoa,GAC9C,CAAa,UAAZpa,EAAsB,UAAY,UAAWma,IAEhD,CAAC,CAAa,UAAZna,EAAsB,UAAY,UAAW,IAErDxQ,KAAMA,GAAQ,GACd+qB,YAAa,IAKX,YAAuC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACVC,EAAU/vB,KAAK+E,MAAM8qB,EAAgB,IACrC9C,EAAUiD,aAAiBH,GAC3BI,EAAmBF,EAAU,GAAV,IAAmBA,EAAYA,EAClDG,EAAmBnD,EAAU,GAAV,IAAmBA,EAAYA,EACxD,OACE,gBAAC,KAASjoB,KAAV,CAAejG,MAAO,CAAEmD,MAAO8tB,EAAe/tB,SAAU,KACrDmuB,EADH,IACsBD,MClDnB,SAASE,GAAWh0B,GACjC,IAAQ6N,EAAoC7N,EAApC6N,KAAMomB,EAA8Bj0B,EAA9Bi0B,OAAQC,EAAsBl0B,EAAtBk0B,QAAS9zB,EAAaJ,EAAbI,SAC/B,EAA2B6V,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,OACE,gBAAC+hB,GAAA,eAAD,CACExsB,MAAO,CAAE1E,EAAG,EAAKF,EAAG,KACpBmwB,IAAK,CAAEjwB,EAAG,GAAKF,EAAG,GAClBL,MAAOqC,GAAOG,UACdsM,OAAQ,CAACW,EAAMX,OAAOsT,QAAS3S,EAAMX,OAAOsT,UAE5C,gBAAC9c,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4P,SAChBuf,EACA,gBAACE,GAAA,EAAD,CACEnR,KAAK,SACLva,KAAM,GACN7C,MAAOsM,EAAMX,OAAOsT,QACpBnN,QAAS,kBAAOsc,EAASA,IAAW,QAL5B,MASd,gBAACjsB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOsvB,iBAClB,gBAACrsB,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,EAAI,IAClB,MAAJnJ,KAAMjC,YAAc0oB,aAA0B,IAAlBzmB,EAAKjC,WAAmB,IAAI+U,MACvD,gBAACsS,GAAD,CAAWC,IAAK,IAAIvS,KAAuB,IAAlB9S,EAAKjC,YAAoBsN,QAAQ,QAAQxQ,KAAM,KAExE,gBAAC,KAAO2f,KAAR,CACE3f,KAAM,GACNua,KAAK,kBACLpd,MAAOsM,EAAMG,KAAOH,EAAMX,OAAOmJ,KAAOvI,EAAQX,QAAQa,KACxD5P,MAAO,CAAEyF,gBAAiBgK,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQc,UAIpF,gBAACvK,EAAA,EAAD,CAAMtF,MAAOqC,GAAOwvB,gBAClB,gBAAClK,GAAA,EAAD,CAAO3nB,MAAOqC,GAAOqS,OAArB,eAAmCvJ,OAAnC,EAAmCA,EAAM2mB,YACzC,gBAAC5H,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO0vB,WAAzB,MAAqC5mB,OAArC,EAAqCA,EAAMpF,QAI9CrI,GAKP,IAAM2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,MAAO,OACPolB,WAAY,IAEd1Q,QAAS,CACP5O,cAAe,MACfM,eAAgB,YAElBguB,gBAAiB,CACftuB,cAAe,MACfX,WAAY,SACZiB,eAAgB,SAChBlB,kBAAmB,GACnB0hB,aAAc,GACd9I,UAAW,IAEbwW,eAAgB,CACdlvB,YAAa,EACbwS,WAAY,OACZjS,SAAU,GACVoR,KAAM,EAAI,EACV5R,WAAY,aACZiB,eAAgB,UAElB+Q,MAAO,GACPqd,UAAW,KC/EE,SAASC,GAAS10B,GAC/B,IAAQ6lB,EAAU7lB,EAAV6lB,MACF7O,EAAO,EAAI6O,EAAMlK,OAEvB,OACE,gCACE,gBAACqN,GAAA,EAAD,CAAStmB,MAAOqC,GAAO4vB,UACvB,gBAAC3sB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOG,WACjB2gB,EAAM7kB,KAAI,SAACoM,EAAMqB,GAAP,OACT,gCACE,gBAACzG,EAAA,EAAD,CACEtF,MAAO,CAAEsU,QAET5L,IAAG,aAAeqD,GAElB,gBAAC,KAAK+U,KAAN,CACEoR,WAAY,CACV7vB,GAAOqS,MACP,CACES,YAA0B,IAAdzK,EAAKynB,KAAiB,YAASjyB,IAG/CF,MAAO,CACLsb,gBAAiB,IAEnB5G,MAAOhK,EAAKvD,MACZirB,iBAAkB/vB,GAAOuoB,YACzBA,YAAalgB,EAAKgK,MAClBO,QAASvK,EAAKuK,WAGjBlJ,IAAMoX,EAAMlK,OAAS,EAAI,KAExB,gBAACqN,GAAA,EAAD,CAAS5d,IAAG,qBAAuBqD,EAAK/L,MAAOqC,GAAOgwB,wBASpE,I,MAAMhwB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CAAEjF,MAAO,OAAQ8F,cAAe,OAC3C4uB,QAAS,CACPz0B,OAAQ8E,IAAWmgB,cACnBllB,MAAO,QAET80B,gBAAiB,CACf90B,MAAO+E,IAAWmgB,cAClBjlB,OAAQ,QAEVkX,MAAO,CACL5R,UAAW,UAEb8nB,YAAa,CACX9nB,UAAW,YC+BA+f,MA1FWtF,aAAH,q2CA+FT,CACZvB,WAAY,SAAC8G,GAAD,aAAWA,OAAX,EAAWA,EAAO3X,QC7CjB2Q,MAnDcyB,aAAH,02BAmD8D,CACtFvB,WAAY,SAACkB,GAAD,OAAYA,EAAOoV,cC7BjC,SAASC,GAAT,GAA0D,IAA7Bh1B,EAA4B,EAA5BA,MAC3B,OACE,gBAACmrB,GAAA,EAAD,CACE1oB,MAAO,CACLxC,OAAQ,IACR4G,QAAS,GACTuf,OAAQ,GACRpmB,QACAmF,WAAY,SACZiB,eAAgB,UAElBglB,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACEjT,MAAM,YACN1U,MAAO,CAAE0D,UAAW,SAAUC,eAAgB,SAAU2Q,KAAM,GAC9D4d,WAAY,CAAEpvB,UAAW,aAMjC,SAAS0vB,GAAT,GAAqD,IAA7Bj1B,EAA4B,EAA5BA,MACtB,OACE,gBAAC,KAAD,CACE2mB,WAAS,EACT9lB,eAAgB,CACdZ,OAAQ,IACRD,QACAomB,OAAQ,IAEV5jB,OAAQ,CAAC,CAAE2I,IAAK,sBAAuBlL,OAAQ,IAAKD,YAK3C,SAAS8c,KAAc,IAAD,QAC7BtG,EAAWV,KACjB,EAAkC9U,YAAe,GAAjD,WAAOovB,EAAP,KAAmBC,EAAnB,KACM7b,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SAC5C,EAA2BwB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDxC,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,MACXgjB,EAAQC,sBAEd,EAIIC,GAAa,CACfhW,UAAW,CACTxe,GAAIyN,OAAO6mB,EAAMxY,OAAO9O,KAAKhN,KAE/B4kB,aAAc,MAPR6P,EADR,EACEzV,KACAvJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QAQI7X,EAAOynB,GAAgBH,EAAMxY,OAAO9O,KAElCgE,EADgBwO,KAChBxO,YAEF4e,EAAqBC,GAAsB,CAC/C5R,UAAW,kBACTrI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,SAAU4D,EAAK2mB,WAAhB,WACPtb,QAAS,cAGfR,QAAS,SAACzO,GAAD,OACPwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,cAIXqc,EAAqBC,GAAsB,CAC/C1W,UAAW,SAACvU,GAAD,iBACTkM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UAAY,SAAAM,EAAQ8D,OAAR,WAAcL,eAAd,WAA4Ba,WAA5B,IAAkCpG,OAAQ,QAA/C,6BACLoF,EAAK2mB,WAEPtb,QAAS,cAGfR,QAAS,SAACzO,GAAD,OACPwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,cAKXuc,EAAex0B,eACnB,SAAOoN,GAAP,SAAAjN,EAAAC,OAAA,kEAAAD,EAAA,MACQm0B,EAAmBvW,OAAO,CAC9Bne,GAAIyN,OAAOD,EAAKxN,OAFpB,8DAKA,CAAC00B,IAGGG,EAAcz0B,eAClB,SAAO8K,GAAP,SAAA3K,EAAAC,OAAA,kEAAAD,EAAA,MACQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBmvB,QAAS1hB,OAAOvC,EAAMlL,OAH1B,8DAMA,CAAC4vB,EAAoB5iB,EAAKhN,KAGtB80B,EAAY10B,eAChB,SAAO0K,GAAP,SAAAvK,EAAAC,OAAA,kEAAAD,EAAA,MACQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBovB,MAAO3hB,OAAO3C,EAAI9K,OAHtB,8DAMA,CAAC4vB,EAAoB5iB,EAAKhN,KAGtB+0B,EAAc30B,eAClB,SAAO+K,GAAP,SAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBqvB,QAAS5hB,OAAOtC,EAAMnL,OAH1B,8DAMA,CAAC4vB,EAAoB5iB,EAAKhN,KAGtBg1B,EAAmB50B,eACvB,SAAO60B,GAAP,SAAA10B,EAAAC,OAAA,kEAAAD,EAAA,MACQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBsvB,aAAc7hB,OAAOwnB,EAAGj1B,OAH5B,8DAMA,CAAC4vB,EAAoB5iB,EAAKhN,KAGtBk1B,EAAcjU,GAAe3Y,EAAW6sB,YACxCC,EAAgBnU,GAAe3Y,EAAWsf,gBAE1CyN,EAAgBpU,GAAe3Y,EAAWgtB,YAC1CC,EAAkBtU,GAAe3Y,EAAWktB,gBAElDp1B,aAAgB,WACN,MAAJ4M,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,IAAMokB,GAC3CC,GAAY,KAEb,CAACD,EAAD,MAAaxiB,OAAb,EAAaA,EAAM5B,WAEtB,IAAMyR,EAAa4Y,2BAEb3S,EAAsB4S,MAAMC,KAAK,CACrC7a,SAAa,MAAJ9N,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,KAAU,MAAJ9N,OAAA,EAAAA,EAAM4oB,iBAAkB,KAC7Dz1B,KAAI,SAAC2Y,EAAGxM,GAAJ,cAAoB,MAAJU,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,GAAKxO,EAASU,EAAK8V,MAAiBxW,GAAS,KAErFlB,GAAe,MAAJ4B,OAAA,EAAAA,EAAM5B,YAAN,MAAkB4B,GAAlB,SAAkBA,EAAM7B,YAAxB,EAAkB,EAAaC,WAAY,EACtDyqB,EAAgBzqB,IAAgB,MAAJ4B,OAAA,EAAAA,EAAM4oB,iBAAkB,GAElDx2B,EAAU02B,eAAV12B,MAIF22B,EAAa/yB,KAAKgzB,MAAM52B,EAAK,MAA6B,EAC5D62B,EAAe,IAAwBF,EAF3B,GAGhBE,EAAe72B,EAAQ62B,EAAe72B,EAAQ62B,EAE9C,IAAMC,IAAiB,MAACzB,GAAD,SAACA,EAAc3R,QAAd,EAAqBhI,SAAUrF,EAEvD,OACE,gBAAC,GAAD,CAAM5T,MAAO,CAAE4rB,SAAU,EAAGnmB,gBAAiBgK,EAAMX,OAAOoJ,aACxD,gBAAC,GAAD,CAAQ/M,KAAMA,GACZ,gBAAC,IAAD,CAAYib,YAAU,EAACkO,gCAAgC,EAAOt0B,MAAO,CAAEokB,eAAgB,IACrF,gBAAC9C,GAAD,CACEna,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbwW,SAAU,SAAOxW,GAAP,mBAAA5K,EAAAC,OAAA,uDACC,MAAJwM,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,IAAM3P,EAAMC,UAAY,IAD5C,gBAEAmnB,IAAY,MAAJvlB,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,IAAM3P,EAAMC,UAAY,GAE7DwK,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,oBAAqBmpB,EAAtB,4CACPla,QAAS,aAPP,wCAAA9X,EAAA,MAWAw0B,EAAY5pB,IAXZ,OAYN0Z,IAZM,6DAeVpD,OAAK,EACLna,gBAAgB,cAChBtC,MAAOuM,EAAQX,QAAQa,OAEzB,gBAAC+P,GAAD,CACExY,MAAK,MAAEgE,OAAF,EAAEA,EAAMlC,IACb6W,SAAUmT,EACVrT,OAAK,EACLna,gBAAgB,cAChBtC,MAAOuM,EAAQX,QAAQa,OAEzB,gBAACwR,GAAD,CACEja,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MACbyW,SAAUkT,EACVpT,OAAK,EACLna,gBAAgB,cAChBtC,MAAOuM,EAAQX,QAAQa,OAEzB,gBAACoR,GAAD,CACE7Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM/B,WACb6X,MAAO9V,EAAK8V,OAAS,GACrBnB,SAAUqT,EACVvT,OAAK,EACLna,gBAAgB,cAChBtC,MAAOuM,EAAQX,QAAQa,QAG3B,gBAACoiB,GAAD,CACE7O,MAAO,CACL,CACEzO,MAAO,SACPvN,OAAO,WACJZ,EAAUgoB,KAAO,QADb,MAEJhoB,EAAU+nB,aAAe,WAFrB,MAGJ/nB,EAAUkpB,UAAY,aAHlB,MAIJlpB,EAAUmpB,SAAW,UAJjB,MAKJnpB,EAAUmoB,OAAS,UALf,SAMLvjB,OANK,EAMLA,EAAMxD,QAEV,CAAE+M,MAAO,QAASvN,MAAU6sB,EAAL,IAAsBzqB,GAC7C,CACEmL,MAAO,SACPvN,QAAc,MAAJgE,OAAA,EAAAA,EAAMopB,SAAU,GAArB,UAKb,gBAAC,IAAD,CACE7a,OAAO,QACP8a,aAAc,SAAC9pB,EAAMC,GAAP,gBAA2B,MAAJD,OAAA,EAAAA,EAAMvM,KAAMwM,IACjD3K,MAAO,CAAEsU,KAAM,EAAG9W,OAAQ2E,KAAWC,IAAI,UAAU5E,QACnDmtB,sBAAuB,CACrBptB,MAAO62B,EACP1wB,UAAW,SACXC,eAAgB,eAChBgoB,cAAe,KAEjBuI,WAAYA,EACZ9N,YAAY,EACZjJ,KAAOkX,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAA9BpT,EACxBwT,WAAY7gB,EACZ8gB,UAAW1R,EACX2R,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW,kBAAM1R,OACtE6R,WAAY,YAA4B,IAAD,EAAlB9T,EAAkB,EAAxBrW,KAAYD,EAAY,EAAZA,MACzB,OAAa,IAATsW,EACK,gBAACyR,GAAD,CAAcj1B,MA9Fb,MAiGM,IAATwjB,EACL,gBAACwR,GAAD,CAAmB7pB,IAAG,cAAgB+B,EAASlN,MAlGvC,MAoGR,gBAACgvB,GAAD,CACEvsB,MAAO,CAAEzC,MArGH,KAsGNmL,IAAG,QAAUqY,EAAK5iB,GAClBwN,KAAMoV,EACNyL,UACc,MAAXrd,OAAA,EAAAA,EAAahR,OAAb,MAAoB4iB,GAApB,SAAoBA,EAAMzV,mBAA1B,EAAoB,EAAoBnN,KAAMq1B,GAAkBE,EAC7DX,OACA7yB,EAEN+U,QAAS,SAACtJ,GAAU,IAAD,IACXmpB,EAAS,MAAG3pB,GAAH,SAAGA,EAAM8V,YAAT,EAAG,EAAa0D,QAC7B,gBAAGoQ,EAAH,EAAGA,YAAH,OAAqBA,GAAeA,IAAgBppB,EAAKopB,eAErDC,EAAmB,WACnBF,IACF/gB,EAAS9B,GAAQF,MAAM1E,cAAcjI,SACrC2O,EAAS9B,GAAQF,MAAM1E,cAAc3B,aAAaopB,IAClD/gB,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQyD,KACvD6P,EAAWia,SAAS,yBAGlBC,EAAc,WAClBnhB,EAAS9B,GAAQF,MAAM3E,SAASpF,QAAQ2D,IACxCoI,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,OAAQyD,OAGhD,SAAAQ,EAAKQ,WAAL,IAAWhO,OAAX,MAAkBgR,OAAlB,EAAkBA,EAAahR,IAC7Bk1B,IACF,MAAIyB,KAAW7b,OACb+b,IAEAE,KAGK3B,IACT,MAAIuB,KAAW7b,OACb+b,IAEAE,WAQd,gBAACxH,GAAD,CAAcviB,KAAMA,IACpB,gBAAC,GAAD,CACEnE,KAAM+K,EAAM3E,SAASpG,KACrB8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM3E,SAASpF,SAAQ,KACvDoU,UAAW,WACTrI,EAAS9B,GAAQF,MAAM3E,SAASpF,SAAQ,OAG5C,gBAAC,GAAD,CACEhB,KAAM+K,EAAM1E,cAAcrG,KAC1B8gB,QAAS,WACP/T,EAAS9B,GAAQF,MAAM1E,cAAcrF,SAAQ,IAC7C+L,EAAS9B,GAAQF,MAAM1E,cAAcjI,UAEvCgX,UAAW,kBAAMrI,EAAS9B,GAAQF,MAAM1E,cAAcrF,SAAQ,Q,uBCvVvD,SAASmtB,GAAiB73B,GACvC,IAAQ0I,EAAiC1I,EAAjC0I,KAAMovB,EAA2B93B,EAA3B83B,gBAAiBC,EAAU/3B,EAAV+3B,MAEvB93B,EAAU4E,KAAWC,IAAI,UAAzB7E,MAGF+3B,IAFc/3B,EAAQ,IAAM,IAAMA,GAEJ,GAAgB,GAAPyI,GAAaA,EAE1D,OACE,gBAACV,EAAA,EAAD,CAAMtF,MAAOqC,GAAOkzB,YACjB1B,MAAMC,KAAK,CAAE7a,OAAQjT,IAAQ1H,KAAI,SAAC2Y,EAAGxM,GACpC,IAAM+qB,EAAgBH,GAASA,EAAMpc,OAASxO,EAG1CgrB,EAFWhrB,GAAS2qB,GAAmB,GAEhB,QAAU,GAGrC,OAFAK,EAFkBhrB,IAAU2qB,EAEF,SAAWK,EAInC,gBAAC,WAAD,CAAgB/sB,IAAK+B,GACnB,gBAAC,KAAOkb,KAAR,CACEpF,KAAMiV,GAAiBH,EAAQA,EAAM5qB,GAASgrB,EAC9CzvB,KAAM,GACNhG,MAAO,CAACqC,GAAOke,MAAO6U,GAAmB,GAAK3qB,EAAQpI,GAAOqzB,cAAWx1B,KAEzE8F,EAAO,EAAIyE,EACV,gBAACnF,EAAA,EAAD,CACEtF,MAAO,CACLqC,GAAOszB,OACP,CAAEp4B,MAAO+3B,IACRF,GAAmB,GAAK3qB,EAAQpI,GAAOuzB,gBAAa11B,KAGvD,UAQhB,IAAMmC,GAASC,IAAWC,OAAO,CAC/BgzB,WAAY,CACVlyB,cAAe,MACf5F,SAAU,WACV2C,IAAK,IACLsD,UAAW,UAEbiyB,OAAQ,CACNn4B,OAAQ,GACR6d,UAAW,GACX0U,YAAa,EACbxyB,MAAO,GACPkI,gBAAiB,SAEnBmwB,WAAY,CACVnwB,gBvC/DwB,WuCiE1B8a,KAAM,CACJ9a,gBAAiB,QACjBsqB,YAAa,GAEf2F,SAAU,CACRjwB,gBvCtEwB,UuCuExBsqB,YAAa,KCxDJ8F,GAAgBt3B,gBAAoC,CAC/DkM,MAAO,EACPqrB,MAAO,EACPC,SAAU,kBAAM,QAyClB,IAAQx4B,GAAU4E,KAAWC,IAAI,UAAzB7E,MAEF8E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,SACA+W,KAAM,EACNqX,cAAe,KAIJqK,GAhDf,SAAgB14B,GACd,IAAQI,EAAoBJ,EAApBI,SAAU23B,EAAU/3B,EAAV+3B,MAClB,EAA0B92B,WAAe,GAAzC,WAAOkM,EAAP,KAAcsrB,EAAd,KACMphB,EAAMpW,SAA6B,MACnCu3B,EAAQv3B,WAAeu3B,MAAMp4B,GAEnC,OACE,gBAACm4B,GAAcI,SAAf,CACE9uB,MAAO,CACLsD,QACAqrB,QACAC,SAAU,SAACprB,GAAS,IAAD,EAGjB,SAAAgK,EAAI/V,UAAJ,EAAas3B,cAAc,CAAEzrB,MAAOE,EAAKwrB,UAAU,OAIvD,gBAAC7wB,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOG,YACnB,gBAAC,KAAD,CACE4zB,gBAAc,EACd3rB,MAAOA,EACP4rB,oBAAqB,SAACC,GAAD,OAAiB,gBAACnB,GAAD,QAAsBmB,EAAtB,CAAmCjB,MAAOA,MAChFnB,WAAY,EACZqC,eAAe,EACfC,UAAU,EACV7hB,IAAKA,EACL8W,cAAe,YAAgC,IAAtB9gB,EAAqB,EAA5BF,MAA4B,EAAhBgsB,UAC5BV,EAASprB,GAAO,KAGjBjN,M,gDC/CIa,iBAAgD,SAACjB,EAAOqX,GACrE,IAAQnX,EAAWy2B,eAAXz2B,OACAiS,EAAU8D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCzC,MACAzP,EAAoD1C,EAApD0C,MAAOtC,EAA6CJ,EAA7CI,SAAUitB,EAAmCrtB,EAAnCqtB,sBAA0BhJ,EAAnD,KAA4DrkB,EAA5D,IAEA,OACE,gBAAC6oB,GAAA,EAAD,QACMxE,EADN,CAEEhN,IAAKA,EACL+hB,oBAAoB,UACpBC,0BAA0B,UAC1BC,+BAA+B,SAC/B52B,MAAO,CACLqC,GAAOG,UACP,CAAEiD,gBAAiBgK,EAAMX,OAAOsT,QAAS5kB,OAAQA,EAAS,KAC1DwC,GAEF2qB,sBAAuB,CACrBtoB,GAAOe,QACP,CAAEqC,gBAAiBgK,EAAMX,OAAOoJ,YAChCyS,KAGDjtB,MAKD2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAERlR,QAAS,CACPX,kBAAmB,GACnBC,WAAY,aACZkpB,SAAU,EACVD,cAAe,MC4DnB,IAAMtpB,GAASC,IAAWC,OAAO,CAC/Bs0B,aAAc,CACZlzB,eAAgB,UAElBnB,UAAW,CACTiD,gBAAiB,UACjBhD,kBAAmB,GACnBiB,UAAW,UAEbN,QAAS,CAAEuf,WAAY,IAAKiJ,SAAU,EAAGD,cAAe,GACxDjX,MAAO,CACLjX,SAAU,WACV2C,IAAK,IACL+jB,aAAc,GACdhhB,MAAO,QACPD,SAAU,GACViS,WAAY,OACZrS,UAAW,SACXY,UAAW,UAEbqR,OAAQ,CACNrR,UAAW,SACXnG,MAAO,QAETu5B,WAAY,CACVpzB,UAAW,SACXnG,MAAO,OACPkjB,iBAAkB,IAEpBsW,QAAS,CACPrzB,UAAW,SACXhB,WAAY,WACZkpB,SAAU,EACVjoB,eAAgB,WAChBpG,MAAO,OACPy5B,SAAU,IACV7S,aAAc,OAIH8S,GA3Hf,SAAsB35B,GACpB,IACEI,EAWEJ,EAXFI,SACAgX,EAUEpX,EAVFoX,MACAd,EASEtW,EATFsW,QACAsjB,EAQE55B,EARF45B,OACAC,EAOE75B,EAPF65B,gBACAC,EAME95B,EANF85B,gBACAtM,EAKExtB,EALFwtB,OACAuM,EAIE/5B,EAJF+5B,aACAj5B,EAGEd,EAHFc,eACA4B,EAEE1C,EAFF0C,MACAs3B,EACEh6B,EADFg6B,cAEF,EAA0Bn1B,KAAWC,IAAI,UAAjC7E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,EAA4Be,aAAiBs3B,IAArCprB,EAAR,EAAQA,MAAOsrB,EAAf,EAAeA,SAETwB,EAAYh5B,WAWlB,OATAA,aAAgB,WACVg5B,EAAU34B,SACZ24B,EAAU34B,QAAQ44B,SAAS,CAAEn3B,EAAG,EAAG81B,UAAU,IAC7C12B,QAAQC,IAAI,aAAcgV,EAAO,UAEjCjV,QAAQC,IAAI,YAEb,CAAC+K,EAAOiK,IAGT,gBAACpP,EAAA,EAAD,CAAMtF,MAAOsC,IAAWoqB,QAAQ,CAACrqB,GAAOw0B,aAAc,CAAEt5B,SAASyC,KAC/D,gBAACy3B,GAAD,CACEz3B,MAAO,CAACqC,GAAOG,UAAWpE,GAAkB,GAAI,CAAEb,UAClDotB,sBAAuBroB,IAAWoqB,QAAQ,CACxCrqB,GAAOe,QACP,CAAEs0B,UAAWl6B,EAAQiI,gBAAiB,eACtC4xB,IAEFd,eAAgBe,EAChB92B,cAAc,WAGdmU,IAAK4iB,GAEL,gBAAC5P,GAAA,EAAD,CAAO3nB,MAAOqC,GAAOqS,OAAQA,GAC5BhX,EAED,gBAAC4H,EAAA,EAAD,CAAMtF,MAAOqC,GAAO00B,QAASv2B,cAAc,YACzC,gBAACqU,EAAA,EAAD,CACEnM,IAAG,eAAiB+B,EACpBmJ,QAASA,EACToB,KAAK,YACL7R,MAAM,UACN2R,SAAUlB,EACV5T,MAAOqC,GAAO0S,OACdE,QAAS,oBAAAvW,EAAAC,OAAA,gDACPc,QAAQC,IAAI,oBAAqB+K,GACjCqgB,EAAOrgB,EAAOsrB,GAFP,8DAKRqB,GAGDF,EACA,gBAACriB,EAAA,EAAD,CACEnM,IAAG,UAAY+B,EACfuK,KAAK,OACLF,SAAUlB,EACVzQ,MAAM,UACNnD,MAAOqC,GAAOy0B,WACd7hB,QAAS,oBAAAvW,EAAAC,OAAA,gDACPu4B,EAAOzsB,EAAOsrB,GADP,8DAIRoB,GAXM,S,wBC5DrB,I,GAAM90B,GAASC,IAAWC,OAAO,CAC/BynB,SAAU,CACR7mB,MAAO,QACPL,UAAW,UAEb4R,MAAO,CACLxR,SAAU,GACVC,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEd/R,QAAS,CACPV,WAAY,SACZiB,eAAgB,SAChBioB,SAAU,EACVloB,UAAW,UAEb6c,KAAM,CACJ6D,eAAgB,GAChB3e,gB3CxCwB,W2C0C1BjD,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,iBAINkyB,GAzCf,SAA4Br6B,GAC1B,IAAQoX,EAA6BpX,EAA7BoX,MAAOsV,EAAsB1sB,EAAtB0sB,SAAarI,EAA5B,KAAqCrkB,EAArC,IACA,OACE,gBAAC,GAAD,MAAc0C,MAAOqC,GAAOG,WAAemf,GACzC,gBAACrc,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC,KAAOuiB,KAAR,CAAapF,KAAK,QAAQva,KAAM,IAAKhG,MAAOqC,GAAOke,OACnD,gBAACta,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAAQA,GAC5B,gBAACwV,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO2nB,UAAWA,MCmC7BlO,MAhDkCyB,aAAH,27BAmDT,CACnCvB,WAAY,SAACkB,GAAD,OAAYA,EAAO0a,wBAC/Bhc,UAAW,GACXK,cAAe,K,wlBCjDF,SAAS4b,GAAQv6B,GAC9B,IAAQw6B,EAAyCx6B,EAAzCw6B,MAAOC,EAAkCz6B,EAAlCy6B,UAAW3rB,EAAuB9O,EAAvB8O,SAAU4rB,EAAa16B,EAAb06B,SACpC,EAAgDz5B,YAAe,GAA/D,WAAO05B,EAAP,KAAyBC,EAAzB,KACA,EAA4B35B,WAAeu5B,GAA3C,WAAOK,EAAP,KAAeC,EAAf,KACA,EAAoC75B,WAAew5B,GAAnD,WAAOM,EAAP,KAAmBC,EAAnB,KACM7oB,EAAQsQ,eAEd,OACE,gBAAC2I,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACD,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAO0mB,KAC1B,gBAACzjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOk2B,cAClB,gBAACnY,GAAA,EAAD,CACExG,UAAW,kBAAMse,GAAoB,IACrCve,QAASse,EACTj4B,MAAO,CAAEw4B,SAAU,KACnBnY,OACE,gBAAC,IAAD,CACErgB,MAAO,CACL4rB,SAAU,EACVpuB,OAAQ,GACR6F,cAAe,MACfX,WAAY,SACZiB,eAAgB,UAElBsR,QAAS,kBAAMijB,GAAoB,KAEnC,gBAAC,KAAKvS,KAAN,CAAWpF,KAAK,WAAWvgB,MAAOqC,GAAOke,OACzC,gBAACta,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOo2B,eAAgB,CAAEt1B,MAAOsM,EAAMX,OAAOkR,aAA3D,MACG5T,OADH,EACGA,EAAUqa,cAKhB,CAAC,KAAO,KAAO,IAAO,IAAM,IAAM,IAAM,KAAMnoB,KAAI,SAACo6B,GAAD,OACjD,gBAAC,KAAK5X,KAAN,CACEpY,IAAKgwB,EACLzjB,QAAS,WACHyjB,GACFV,EAAS,WAAYU,GAEvBR,GAAoB,IAEtBxjB,MAAOgkB,EAAIjS,WACXnmB,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAW3lB,MAAOqC,GAAOke,KAAMA,KAAK,qBAMxD,gBAACjb,EAAA,EAAD,CAAMtF,MAAOqC,GAAOs2B,cAClB,gBAAC,KAAKhT,KAAN,CAAWpF,KAAK,gBAAgBvgB,MAAOqC,GAAOke,OAC9C,gBAACuB,GAAA,EAAD,CACE3a,MAAK,MAAEgxB,OAAF,EAAEA,EAAQ1R,WACfmS,OAAQ,kBAAMZ,EAAS,QAASpsB,OAAOusB,KACvCzW,aAAc,SAACmX,GACb,GAAI,KAAK7b,KAAK6b,GAAW,CACvB,MAAkBA,EAASjX,MAAM,QAAU,CAACuW,GAArCtW,EAAP,YACAuW,EAAUvW,QACAgX,GACVT,EAAU,KAGdp4B,MAAOqC,GAAOy2B,UACd/W,aAAa,aAIjB,gBAACzc,EAAA,EAAD,CAAMtF,MAAOqC,GAAO02B,eAClB,gBAAC,KAAKpT,KAAN,CAAWpF,KAAK,UAAUvgB,MAAOqC,GAAOke,OACxC,gBAACuB,GAAA,EAAD,CACE3a,MAAK,MAAEkxB,OAAF,EAAEA,EAAY5R,WACnBmS,OAAQ,kBAAMZ,EAAS,YAAapsB,OAAOysB,KAC3C3W,aAAc,SAACsX,GACb,GAAI,KAAKhc,KAAKgc,GAAS,CACrB,MAAkBA,EAAOpX,MAAM,QAAU,CAACyW,GAAnCxW,EAAP,YACAyW,EAAczW,QACJmX,GACVV,EAAc,KAGlBt4B,MAAOqC,GAAOy2B,UACd/W,aAAa,eAQzB,IAAMkX,GAAwB,CAC5Bz7B,OAAQ,GACR6F,cAAe,MACf9F,MAAO,IAAM,GAGT8E,GAASC,IAAWC,OAAO,CAC/Bk2B,eAAgB,CACdD,SAAU,GACV5M,SAAU,EACVlpB,WAAY,SACZiB,eAAgB,SAChBu1B,kBAAmB,SACnBC,WAAY,GACZj2B,SAAU,GACVQ,UAAW,UAEbipB,KAAM,CACJvI,eAAgB,EAChB3D,iBAAkB,GAClBljB,MAAO,IACPmG,UAAW,SAEXzD,aAAc,IAEhBsgB,KAAM,CACJhjB,MAAO,IAETg7B,aAAa,SACRU,IADO,IAEVhN,oBAAqB,GACrBmN,uBAAwB,GACxBj5B,SAAU,WAEZw4B,aAAa,MACRM,IAELF,cAAc,SACTE,IADQ,IAEX/M,qBAAsB,GACtBmN,wBAAyB,GACzBl5B,SAAU,WAEZ24B,UAAW,CACTxkB,KAAM,EACNsX,SAAU,EACVK,oBAAqB,EACrBC,qBAAsB,EACtB3uB,MAAO,OACPi7B,SAAU,IAEZzP,IAAK,CACH6C,SAAU,EACVzd,QAAS,OACTuV,SAAU,SACVrgB,cAAe,MACfX,WAAY,aACZiB,eAAgB,aAChBlB,kBAAmB,EACnB6Y,gBAAiB,EACjB8I,eAAgB,GAChB/I,UAAW,EACX8I,aAAc,K,qkBCnJH,SAASmV,GAAqBh8B,GAAoC,IAAD,QACtEkZ,EAA4BlZ,EAA5BkZ,QAAS+iB,EAAmBj8B,EAAnBi8B,eACX5xB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,WAC5CuG,EAAWV,KACF1G,EAAUhF,EAAMV,OAAO0F,MAA9BxF,MACFsI,EAAQsQ,eAEd,EAAsCxhB,YACpC,SAAAoJ,EAAMV,SAAN,WAAcuF,kBAAd,IAA2BrF,QAAS,GADtC,WAAOqF,EAAP,KAAoBgtB,EAApB,KAGA,EAA8Bj7B,YAC5B,SAAAoJ,EAAMV,SAAN,WAAclD,cAAd,IAAuBoD,QAAS,GADlC,WAAOpD,EAAP,KAAgB01B,EAAhB,KAkBA,OAdAl7B,aAAgB,WACVoJ,EAAMV,OAAOlD,QAAQoD,QAAUpD,GACjC01B,EAAW9xB,EAAMV,OAAOlD,QAAQoD,SAIjC,CAACsyB,EAAY9xB,EAAMV,OAAOlD,QAAQoD,QAErC5I,aAAgB,WACVoJ,EAAMV,OAAOuF,YAAYrF,QAAUqF,GACrCgtB,EAAe7xB,EAAMV,OAAOuF,YAAYrF,SAGzC,CAACQ,EAAMV,OAAOlD,QAAQoD,MAAOQ,EAAMV,OAAOuF,YAAYrF,MAAOqyB,IAE9D,gBAACE,GAAA,EAAD,CAAsBC,SAAS,WAAW35B,MAAOqC,GAAOe,SACtD,gBAACkC,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAAC9iB,EAAA,EAAD,CACEjG,MAAO,CAACqC,GAAOu3B,kBAAmB,CAAEz2B,MAAmB,UAAZqT,EAAsB,QAAU,WAD7E,eAKA,gBAACvQ,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOw3B,cAAe,CAAE12B,MAAmB,UAAZqT,EAAsB,QAAU,WAA7E,aAKF,gBAAClR,EAAA,EAAD,CAAMtF,MAAOqC,GAAOy3B,iBAClB,gBAACpR,GAAA,EAAD,CACE1oB,MAAO,CAACqC,GAAO03B,gBAAiB,CAAEt0B,gBAAiBgK,EAAMX,OAAOsT,UAChEuG,UAAW,GAEX,gBAACD,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAO23B,aAC1B,gBAAC,KAAKrU,KAAN,CAAWpF,KAAK,cAAcvgB,MAAO,CAAEzC,MAAO,MAC9C,gBAAC,KAAD,CACE4J,MAAK,MAAEqF,OAAF,EAAEA,EAAaia,WACpBmS,OAAQ,kBACN7kB,EAAS9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAAC,cAAekE,OAAOY,OAEjEkV,aAAc,SAACuY,GACb,GAAI,KAAKjd,KAAKid,GAAU,CACtB,MAAkBA,EAAQrY,MAAM,YAAc,CAACpV,GAAxCqV,EAAP,YACA2X,EAAe5tB,OAAOiW,MAG1B7hB,MAAO,CAACqC,GAAOy2B,UAAW,CAAE31B,MAAOsM,EAAMX,OAAOkR,YAChD+B,aAAa,cAKnB,gBAAC2G,GAAA,EAAD,CAAM1oB,MAAOqC,GAAO63B,YAAavR,UAAW,GAC1C,gBAACD,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAACqC,GAAO23B,YAAa,CAAEv0B,gBAAiBgK,EAAMX,OAAOsT,WACxE,gBAAC,KAAKuD,KAAN,CAAWpF,KAAK,UAAUvgB,MAAO,CAAEzC,MAAO,MAC1C,gBAAC,KAAD,CACE4J,MAAK,MAAEpD,OAAF,EAAEA,EAAS0iB,WAChBmS,OAAQ,kBAAM7kB,EAAS9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAAC,UAAWkE,OAAO7H,OACzE2d,aAAc,SAACyY,GACb,GAAI,KAAKnd,KAAKmd,GAAa,CACzB,MAAkBA,EAAWvY,MAAM,QAAU,CAAC7d,GAAvC8d,EAAP,YACA4X,EAAW7tB,OAAOiW,MAGtBE,aAAa,UACb/hB,MAAO,CAACqC,GAAOy2B,UAAW,CAAE31B,MAAOsM,EAAMX,OAAOkR,cAElD,gBAAC,IAAD,CAAkB/K,QAAS,wBAAMskB,OAAN,EAAMA,MAC/B,gBAAC,KAAK5T,KAAN,CAAWpF,KAAK,QAAQpd,MAAM,UAAUnD,MAAO,CAAEzC,MAAO,UAKhE,gBAAC+H,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAAC9iB,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO+3B,eAAgB,CAAEj3B,MAAmB,UAAZqT,EAAsB,QAAU,WAA9E,YAGA,gBAACvQ,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOg4B,YAAa,CAAEl3B,MAAmB,UAAZqT,EAAsB,QAAU,WAA3E,SAGA,gBAACvQ,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOi4B,gBAAiB,CAAEn3B,MAAmB,UAAZqT,EAAsB,QAAU,WAA/E,cAIF,gBAAC8P,GAAA,EAAD,MACA,gBAAC,IAAD,CACEnJ,KAAMxQ,EACN6nB,aAAc,WAAW/pB,GAAX,EAAGC,KAAH,cAA6BD,GAC3CoqB,WAAY,YAA4B,IAAnB0F,EAAkB,EAAxB7vB,KAAYD,EAAY,EAAZA,MACzB,OACE,gBAACotB,GAAD,QACM0C,EADN,CAEE7xB,IAAG,cAAgB+B,EACnButB,SAAU,SAAClwB,EAAOX,GAChB,IAAMqzB,EAAWC,eAAI,KAAK9tB,GAAmBlC,EAAzB,GAAC,MAChB8vB,GADe,UAEjBzyB,EAAQX,KAEX4M,EAAS9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAAC,QAAS8yB,aAM3D,MAAC7tB,OAAD,EAACA,EAAkBsM,QAAS,EAC3B,gBAAC,IAAD,CACEhE,QAAS,kBACPlB,EACE9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAC7B,QAD6B,eAExBiF,GAAS,IAFe,CAEV,CAAEP,SAAU,IAAK2rB,UAAW,IAAKD,MAAO,YAKjE,gBAACxyB,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,OAAQ6G,QAAS,IAAO5D,cAAc,YAC1D,gBAACq3B,GAAD,CAASzrB,SAAS,MAAM2rB,UAAU,IAAID,MAAM,IAAIE,SAAU,kBAAM,UAGlE,MAKV,IAAM31B,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAEhBQ,QAAS,CACP7F,MAAO,OACP8F,cAAe,SACfoC,gBAAiB,eAEnBq0B,gBAAiB,CACfr3B,kBAAmB,GACnBlF,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjBmmB,SAAU,EACVzd,QAAS,OACTuV,SAAU,SACVrgB,cAAe,MACfX,WAAY,aACZ4Y,gBAAiB,EACjB8I,eAAgB,GAChB/I,UAAW,EACX8I,aAAc,EACdxgB,eAAgB,iBAElBm1B,UAAU,SACL3nB,IAAS+e,OAAO,CACjBI,IAAK,CAAE/yB,MAAO,QACd4yB,IAAK,CAAEvE,SAAU,MAHZ,IAKPD,cAAe,EACfnuB,OAAQ,GACR2X,WAAY,OACZjS,SAAU,KAEZ82B,YAAa,CACX/5B,aAAc,EAEd2rB,SAAU,EACVzd,QAAS,OACTuV,SAAU,SACVrgB,cAAe,MACfX,WAAY,aACZiB,eAAgB,aAChBlB,kBAAmB,EACnB6Y,gBAAiB,EACjB8I,eAAgB,GAChB/I,UAAW,EACX8I,aAAc,GAEhB4E,IAAK,CACHxrB,MAAO,IACPmG,UAAW,SACXL,cAAe,MACfM,eAAgB,gBAChBjB,WAAY,SACZD,kBAAmB,EACnB2hB,eAAgB,IAElBwV,kBAAmB,CACjBr8B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEd0kB,cAAe,CACbt8B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEd+kB,YAAa,CACX38B,MAAO,IACPC,OAAQ,GACR6F,cAAe,MACfoC,gBAAiB,QACjBxF,aAAc,GAEhB85B,gBAAiB,CACfv8B,OAAQ,GACRD,MAAO,IACP8F,cAAe,MACfoC,gBAAiB,QACjBxF,aAAc,GAEhBm6B,eAAgB,CACd78B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdklB,YAAa,CACX98B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdmlB,gBAAiB,CACf/8B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdwX,KAAM,CACJvI,eAAgB,EAChB7mB,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjB0mB,YAAa,eAEfuO,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbgF,MAAO,CACLqc,aAAc,GAEhByW,OAAQ,CACNv3B,cAAe,UAEjBw3B,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SC9RX,IAAM8E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,KAIHo4B,GAjBf,SAA2B19B,GACzB,OACE,gBAAC,GAAD,MAAc0C,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,gBACtD,gBAAC4kB,GAAD,Q,UCIC,SAAS2B,GAAT,KAAyF,IAC1FC,EATC,cAA4F,IAA5DC,EAA2D,EAA9D56B,EAAU66B,EAAoD,EAAvD/6B,EAA4Bg7B,EAA2B,EAA9B96B,EAC5D+6B,EAD0F,EAAvBj7B,EACzD+6B,EACVG,EAAKF,EAAKF,EACZD,EAAQ/5B,KAAKq6B,MAAMF,EAAIC,GAE3B,OADAL,GAAS,IAAM/5B,KAAKC,GAKRq6B,CAAkB,CAAEl7B,EAD6D,EAA9DA,EACQF,EADsD,EAAvDA,GACU,CAAEE,EAD2C,EAA9BA,EACNF,EADoC,EAAvBA,IAGtE,OADI66B,EAAQ,IAAGA,EAAQ,IAAMA,GACtBA,EChBT,IAAMQ,GAA2B,CAC/B,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,K,6lBCGF,IAAQn+B,GAAU4E,KAAWC,IAAI,UAAzB7E,MAWO,SAASo+B,GAAgBr+B,GACtC,MAAoCiB,WAAgC,CAClEgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,IAJT,WAAOoC,EAAP,KAAmBC,EAAnB,KAMIgE,EARsB,EAQXjE,EAAWpC,MAC1BqG,EAAWA,EAAW,IAAM,IAAMA,EAElC,IAAQtC,EAAgDhE,EAAhDgE,SAAUs6B,EAAsCt+B,EAAtCs+B,UAAWz0B,EAA2B7J,EAA3B6J,MAAOuN,EAAoBpX,EAApBoX,MAAOsjB,EAAa16B,EAAb06B,SAC3C,EAAkCz5B,YAAe,GAAjD,WAAOs9B,EAAP,KAAmBC,EAAnB,KACA,EAA8Bv9B,WAAe4I,GAAS,GAAtD,WAAOpD,EAAP,KAAgB01B,EAAhB,KACA,EAA4Bl7B,WAE1B,CACAgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,EACPyG,QAAS,EACTC,QAAS,IARX,WAAOC,EAAP,KAAeC,EAAf,KAWM43B,EAAWx9B,SAAa,IAAI8F,KAASC,MAAMP,IAC3CK,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAEhD/F,aAAgB,WACTs9B,GACHpC,EAAWtyB,KAEZ,CAAC00B,EAAY10B,IAGhB,ID9CqCjG,EC8C/BqD,EAAgBhG,SAAa,IAAI8F,KAASC,MAAM,IAChDE,EAAiBjG,SACrB8F,KAASI,KACPJ,KAASK,OAAOH,EAAc3F,QAAS,CACrC+F,SAAU,IACVC,SAAU,IACVC,iBAAiB,IAEnB,CACEC,sBAAsB,KAKtBk3B,EAAiBz9B,eACrB,SAACsuB,GAECtoB,EAAc3F,QAAQq9B,SAAS,GAC/Bz3B,EAAe5F,QAAQuG,OAGvBX,EAAe5F,QAAQwG,QACvB,IAAQtF,EAAgB+sB,EAAhB/sB,YAIFo8B,EAAqB,CACzB37B,EAJeT,EAATS,EAKNF,EALeP,EAANO,GAQL87B,EAAQlB,GAAe,CAAE16B,EAAG2D,EAAOF,QAAS3D,EAAG6D,EAAOD,SAAWi4B,GACvE5e,uBAAsB,kBAAMmc,EAAW0C,MAEvCJ,EAASn9B,QAAQq9B,SAASE,KAE5B,CAAC1C,EAAYv1B,IAGTa,EAAuBxG,eAC3B,SAACyG,GACC,IAAQjF,EAAWiF,EAAMlF,YAAjBC,OACRoE,EAAU,SACLpE,GADI,IAGPiE,QAASjE,EAAOQ,EAAIZ,EAAWpC,MAAQ,EACvC0G,QAASlE,EAAOM,EAAIV,EAAWnC,OAAS,OAG5C,CAACmC,EAAWnC,OAAQmC,EAAWpC,QAG3B8H,EAAqB1D,aAAiB,CAC1CpB,EAAG2D,EAAOF,QACV3D,EAAG6D,EAAOD,QACV/C,QAAS6C,EACTjC,SAAU,GACVC,SAAU,GACVF,OAAQ+B,EAAW,IAGrB,OACE,gBAAC,IAAD,CACEw4B,QAAS,WACPN,GAAY,GACZz3B,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,IAChBI,SAELo3B,QAAS,WACPP,GAAY,GACZz3B,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,IAChBI,QACHT,EAAe5F,QAAQqG,QACvBqY,uBAAsB,wBAAM0a,OAAN,EAAMA,EAAWj0B,OAEnCi4B,kBAEN,gBAAC12B,EAAA,EAAD,CACEtF,MAAO,CACLzC,MAAO,OACPC,OAAQ,OACRkF,WAAY,SACZ2Y,UAAW,IAEbxb,SAAU,SAACE,GAAD,OAAYH,EAAcG,EAAOD,YAAYC,UAEtD2U,GACC,gBAAC,KAASzO,KAAV,CACEjG,MAAO,CACLqC,GAAOqS,MACP,CACEyP,aAAc,EACd/f,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,QAKtB8O,GAIL,gBAAC,KAAD,CACEjX,SAAU,CAAE4C,EAAG,EAAGE,EAAG,GACrB3C,OAAQ,CACN2B,IAAK+B,EACL9B,IAAKo8B,GAEPx9B,eAAgB,CACdX,SAAU,WACV2C,SAAKF,EACLI,UAAMJ,EACN82B,SAAU,IACVxP,UAAW,KAEb1pB,aAAa,EACbN,OAAQoG,EACRrG,MAAOqG,EACPo0B,SAAU,kBAAM,MAChBn6B,MAAM,SAEN,gBAAC,KAASyH,KAAV,CACEzF,SAAUkF,EACV/E,MAAO,CACLqC,GAAOiB,cACP,CACE/F,MAAOqG,EACPpG,OAAQoG,KAIZ,gBAAC,KAAS0B,KAAV,CACEtF,MAAO,CACLxC,OAAQoG,EACRrG,MAAO6G,EAAQxF,QAAQ8G,YAAY,CACjCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAI,KAEpBH,gBAAiB,UACjBrB,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAK,KAErBL,UAAW,CACT,CACEC,OAAQu2B,EAASn9B,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,OAAQ,kBAOjC,MAACjG,KAAYpC,MACZ,gBAAC,KAAS+H,KAAV,CACEtF,MAAO,CACL,CACEvC,SAAU,WACVF,MAAO,GACPC,OAAQ,GACR4C,IAAKiF,EAAmBhF,EACxBC,KAAM+E,EAAmB9E,EACzB+7B,OAAQ,IACRl4B,QAASG,EAAc3F,QAAQ8G,YAAY,CACzCC,WAAY,EAAE,KAAM,IAAK,KACzBC,YAAa,CAAC,EAAK,EAAK,KAE1BL,UAAW,CACT,CACEC,OAAQu2B,EAASn9B,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,OAAQ,aAG1B,CACEE,WAAYvB,EAAc3F,aAMlC,gBAACyjB,GAAA,EAAD,CAAwBtc,KAAK,WAAWC,KAAM,GAAI7C,MAAM,aA5BtC,KA+BtB,gBAAC,KAAS8C,KAAV,CACEjG,MAAO,CACLqC,GAAOQ,YACP,CACEuB,QAASA,EAAQxF,QACjBwB,IAAKwD,EAAW,EAAI,GACpBtD,KAAMsD,EAAW,EAAI,OAIxBzC,KAAK+E,MAAMnC,KAIhB,gBAAC,KAASkC,KAAV,CACEjG,MAAO,CACLqC,GAAOk6B,kBACP,CACEn4B,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,QAKtBzE,KAAK+E,MAAMnC,GAXd,UD5P+B7C,ECuQuB6C,EDtQrD23B,GAAyBv6B,KAAK+E,MAAMhF,EAAU,QC2P/C,OAkBR,IAAMmB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAEhB8R,MAAO,CACLxR,SAAU,GACViS,WAAY,OACZhS,MAAO,QACP7C,KAAM,EACN/C,MAAO,OACPouB,cAAe,GACf7oB,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZqF,YAAa,CACXtF,MAAO,IACPC,OAAQ,IACRsF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEV0F,SAAU,IACVC,MAAO,QACP1F,SAAU,YAEZ8+B,kBAAmB,CACjBr5B,SAAU,GACVyoB,cAAe,GACfxW,WAAY,OACZhS,MAAO,QACP1F,SAAU,WACV2X,OAAQ,GACR9U,KAAM,EACNF,IAAK,GACL7C,MAAO,OACPuF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAIZ4F,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACbC,YAAa,GACbtD,aAAc1C,GAAQ,EACtBiG,YAAa,QACbC,YAAa,UACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,YChTpB,IAAMtB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACb8C,gBAAiB,OACjB7C,aAAc,GAEhBg4B,OAAQ,CACNr9B,MAAO,OACP8d,UAAW,IAEbmhB,UAAW,CACTh/B,OAAQ,GACRD,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjBtC,MAAO,QACPD,SAAU,GACVJ,UAAW,SACXqhB,aAAc,IAEhB/gB,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACb/F,MAAO,IACPC,OAAQ,IACRyC,aAAc,IACdsD,YAAa,GACbE,YAAa,QACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,UAElB4c,KAAM,CAAE9iB,SAAU,WAAY2C,KAAM,IAEpC2oB,IAAK,CACHzU,KAAM,EACNjR,cAAe,MACfM,eAAgB,gBAChBjB,WAAY,SACZD,kBAAmB,EACnB2hB,eAAgB,IAElBgW,eAAgB,CACd9lB,KAAM,IAENnR,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdklB,YAAa,CACX/lB,KAAM,GAENnR,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdmlB,gBAAiB,CACfhmB,KAAM,GAENnR,MAAO,QACPL,UAAW,SACXqS,WAAY,QAEdwX,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IACpCsW,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbgF,MAAO,CACLqc,aAAc,GAEhB0W,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SAIIy9B,GA9If,SAA2B19B,GACzB,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,WAC5CuG,EAAWV,KACTvG,EAAa6Q,KAAb7Q,SACR,EAAgCvO,aAAhC,WAAOk+B,EAAP,KAAiBC,EAAjB,KACMC,EAAmBp+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjCpB,EANiC,OAQvCi/B,EAAYj/B,EAASG,QARkB,kDAUvC6B,QAAQC,IAAR,MAVuC,mEAYxC,IAQH,OANAnB,aAAgB,WACV,MAACuO,KAAUvN,KAAO,MAACuN,KAAUtN,KAC/Bm9B,MAED,OAAC7vB,OAAD,EAACA,EAAUvN,IAAX,MAAgBuN,OAAhB,EAAgBA,EAAUtN,IAAKm9B,IAGhC,gBAAC,GAAD,MAAc38B,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkD+5B,aAAc,CAAE1U,WAAY,OAC5E,gBAACrd,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,QACpC,gBAACm+B,GAAD,CACEx0B,MAAOQ,EAAMV,OAAOlD,QAAQoD,OAAS,EACrC7F,UAAkB,MAARwL,OAAA,EAAAA,EAAUvN,OAAV,MAAiBk9B,OAAjB,EAAiBA,EAAUn7B,WAAY,EACjDs6B,WAAmB,MAAR9uB,OAAA,EAAAA,EAAUtN,OAAV,MAAiBi9B,OAAjB,EAAiBA,EAAUb,YAAa,EACnD5D,SAAU,SAAC7wB,GAAD,OACR4M,EAAS9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAAC,UAAWvG,KAAK+E,MAAMiB,YCsC5Dy1B,OAvEf,WACE,IAAMj1B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,WAC5CoQ,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAClD0E,EAAWV,KACX2H,EAAa4Y,2BAEbiJ,EAAkCC,GAAmC,CACzE1gB,UAAW,kBAAM,MACjBD,aAAc,SAACrU,EAAkCP,GAAnC,OACZwM,EAAS9B,GAAQF,MAAMvE,QAAQzF,cAAc,CAACD,EAAOP,MACvDyO,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAI9DumB,EAAmBx+B,eACvB,SAAOy+B,EAAsBjH,GAA7B,eAAAr3B,EAAAC,OAAA,kEAAAD,EAAA,MACQm+B,EAAgCvgB,OAAO,CAC3Cne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3Byf,WAAYA,EACZjR,MAAO9B,KAAKiM,UAAUnP,EAAMV,OAAO0F,MAAMxF,OACzCpD,QAAS4D,EAAMV,OAAOlD,QAAQoD,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SAN1C,OAQE4uB,EAASiH,EAAe,GAR1B,8DAUA,CAACH,EAAiCl1B,EAAOiW,IAG3C,OACE,gBAAC,GAAD,KACE,gBAACqf,GAAD,CACE9F,gBAAgB,SAChBC,gBAAgB,OAChBF,OAAQ,WACNnjB,EAAS9B,GAAQF,MAAMvE,QAAQpI,SAC/B2O,EAAS9B,GAAQF,MAAMvE,QAAQxF,SAAQ,IACvCgT,EAAWkiB,UAEbtpB,QAASipB,EAAgCjpB,QACzCkX,OAAQ,SAACrgB,EAAOsrB,GAAR,OAAqBA,EAAStrB,EAAQ,MAGhD,gBAAC0yB,GAAD,CACEhG,gBAAgB,OAChBC,gBAAgB,OAChBxjB,QAASipB,EAAgCjpB,QACzCkX,OAAQ,SAACrgB,EAAOsrB,GACdgH,EAAiBtyB,EAAOsrB,IAE1BmB,OAAQ,SAACzsB,EAAOsrB,GAAR,OAAqBA,EAAStrB,EAAQ,MAGhD,gBAAC,GAAD,CACEiK,MAAM,2BACNsV,SAAS,mCACTmN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACzsB,EAAOsrB,GACdA,EAAStrB,EAAQ,IAEnBqgB,OAAQ,WACN/W,EAAS9B,GAAQF,MAAMvE,QAAQpI,SAC/B2O,EAAS9B,GAAQF,MAAMvE,QAAQxF,SAAQ,IACvCgT,EAAWkiB,cC9DN,SAASE,KAAiB,IAAD,EAChCz1B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,WAC5CoQ,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAClD0E,EAAWV,KACX2H,EAAa4Y,2BAEbiJ,EAAkCC,GAAmC,CACzE1gB,UAAW,kBAAM,MACjBD,aAAc,SAACrU,EAAkCP,GAAnC,OACZwM,EAAS9B,GAAQF,MAAMvE,QAAQzF,cAAc,CAACD,EAAOP,MACvDyO,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAI9DumB,EAAmBx+B,eAAkB,0BAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACnCm+B,EAAgCvgB,OAAO,CAC3Cne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3Byf,WAAYA,EACZjR,MAAO9B,KAAKiM,UAAUnP,EAAMV,OAAO0F,MAAMxF,OACzCpD,QAAS4D,EAAMV,OAAOlD,QAAQoD,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SANC,OAQzC6T,EAAWkiB,SACXnpB,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,wBACTiP,QAAS,aAZ4B,8DAexC,CACDqmB,EADC,SAEDl1B,EAAMZ,eAFL,EAED,EAAgB5I,GAChBwJ,EAAMV,OAAO0F,MAAMxF,MACnBQ,EAAMV,OAAOlD,QAAQoD,MACrBQ,EAAMV,OAAOuF,YAAYrF,MACzByW,EACA5C,EACAjH,IAGMjH,EAAa6Q,KAAb7Q,SACR,EAAgCvO,aAAhC,WAAOk+B,EAAP,KAAiBC,EAAjB,KACMC,EAAmBp+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjCpB,EANiC,OAQvCi/B,EAAYj/B,EAASG,QARkB,kDAUvC6B,QAAQC,IAAR,MAVuC,mEAYxC,IAQH,OANAnB,aAAgB,WACV,MAACuO,KAAUvN,KAAO,MAACuN,KAAUtN,KAC/Bm9B,MAED,OAAC7vB,OAAD,EAACA,EAAUvN,IAAX,MAAgBuN,OAAhB,EAAgBA,EAAUtN,IAAKm9B,IAGhC,gBAACr3B,EAAA,EAAD,CAAMtF,MAAOsC,IAAWgE,cACtB,gBAACq1B,GAAD,CACEx0B,MAAOQ,EAAMV,OAAOlD,QAAQoD,OAAS,EACrC7F,UAAkB,MAARwL,OAAA,EAAAA,EAAUvN,OAAV,MAAiBk9B,OAAjB,EAAiBA,EAAUn7B,WAAY,EACjDs6B,WAAmB,MAAR9uB,OAAA,EAAAA,EAAUtN,OAAV,MAAiBi9B,OAAjB,EAAiBA,EAAUb,YAAa,EACnD5D,SAAU,SAAC7wB,GAAD,OACR4M,EAAS9B,GAAQF,MAAMvE,QAAQ9F,SAAS,CAAC,UAAWvG,KAAK+E,MAAMiB,SAGnE,gBAACyoB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLW,KAAK,QACL3M,QAASipB,EAAgCjpB,QACzCkB,SAAU+nB,EAAgCjpB,QAC1CqB,QAAS,kBAAM8nB,KACfrX,MAAM,UAMd,IAAMrjB,GAASC,IAAWC,OAAO,CAC/B4nB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,KC5FG,SAASioB,KACtB,IAAM11B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,WAClD,EAA2B+F,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACTkO,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAClD0E,EAAWV,KACX2H,EAAa4Y,2BAEbiJ,EAAkCC,GAAmC,CACzE1gB,UAAW,kBAAM,MACjBD,aAAc,SAACrU,EAAkCP,GAAnC,OACZwM,EAAS9B,GAAQF,MAAMvE,QAAQzF,cAAc,CAACD,EAAOP,MACvDyO,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAI9DumB,EAAmBx+B,eAAkB,0BAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACnCm+B,EAAgCvgB,OAAO,CAC3Cne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3Byf,WAAYA,EACZjR,MAAO9B,KAAKiM,UAAUnP,EAAMV,OAAO0F,MAAMxF,OACzCpD,QAAS4D,EAAMV,OAAOlD,QAAQoD,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SANC,OAQzC6T,EAAWkiB,SACXnpB,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,wBACTiP,QAAS,aAGbzC,EAAS9B,GAAQF,MAAMvE,QAAQpI,SAC/B2O,EAAS9B,GAAQF,MAAMvE,QAAQxF,SAAQ,IAhBE,8DAiBxC,CAAC60B,EAAiCl1B,EAAOiW,EAAY5C,EAAYjH,IAEpE,OACE,gBAAC0jB,GAAD,CAAkB9M,sBAAuB,CAAEllB,gBAAiBgK,EAAMX,OAAOoJ,aACvE,gBAACohB,GAAD,CACEC,eAAgB,kBAAMve,EAAWia,SAAS,kBAC1Cze,QAAS/G,EAAMG,KAAO,aAAU1P,IAElC,gBAACoF,EAAA,EAAD,CAAMtF,MAAOqC,GAAO00B,QAASv2B,cAAc,YACzC,gBAACqU,EAAA,EAAD,CACEjB,QAASipB,EAAgCjpB,QACzCoB,KAAK,YACL7R,MAAOuM,EAAQX,QAAQY,KACvBmF,SAAU+nB,EAAgCjpB,QAC1C5T,MAAO,CACLqC,GAAO0S,OACP,CACE9U,aAAc,GACdzC,OAAQ,GACRkF,WAAY,SACZiB,eAAgB,SAChB0X,UAAW,KAGfiiB,WAAY,CACVn6B,MAAO,SAET8R,QAAS,oBAAAvW,EAAAC,OAAA,gDACPo+B,IADO,8DAlBX,UA6BR,IAAM16B,GAASC,IAAWC,OAAO,CAC/BwS,OAAQ,CACNrR,UAAW,SACXnG,MAAO,QAETu5B,WAAY,CACVpzB,UAAW,SACXnG,MAAO,OACPkjB,iBAAkB,IAEpBsW,QAAS,CACPrzB,UAAW,SACXhB,WAAY,WACZkpB,SAAU,EACVjoB,eAAgB,WAChBpG,MAAO,OACPy5B,SAAU,IACV7S,aAAc,O,UCnFlB,SAASoZ,GAAQjgC,GACf,IAAQsK,EAAkBtK,EAAlBsK,OAAQ8M,EAAUpX,EAAVoX,MAChB,OACE,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOiW,SAClB,gBAAC4R,GAAA,EAAD,CAAWlqB,MAAO,CAAEmD,MAAO,QAASmR,KAAM,GAAQsX,SAAU,IAAMlX,GAChE9M,EACA,gBAACiN,EAAA,EAAD,CAAQI,QAASrN,EAAQ5H,MAAO,CAAEsU,KAAM,GAAQgV,WAAY,IAA5D,OADS,MASF,SAASkU,GAAalgC,GACnC,IACEyP,EASEzP,EATFyP,QACA6G,EAQEtW,EARFsW,QACAvL,EAOE/K,EAPF+K,sBACAo1B,EAMEngC,EANFmgC,WACAC,EAKEpgC,EALFogC,oBACAC,EAIErgC,EAJFqgC,mBACAC,EAGEtgC,EAHFsgC,gBACAC,EAEEvgC,EAFFugC,wBACAC,EACExgC,EADFwgC,cAGF,GAAIlqB,EACF,OAAO,KAGT,IAAK8pB,IAAwBD,EAAY,CACvC,IAAMM,EAAU,CACbL,EAAsC,KAAhB,cACtBD,EAA2B,KAAd,aACd9Y,OAAOC,SAET,OACE,gBAAC2Y,GAAD,CACE7oB,MAAK,sBAAwBqpB,EAAQC,KAAK,SAArC,mBACLp2B,OAAQ,wBAAMk2B,OAAN,EAAMA,OAIpB,OAAKH,EAGAE,EAGAD,GAMDv1B,GAA0B0E,GAAY6G,EAInC,KAHE,gBAAC2pB,GAAD,CAAS7oB,MAAM,6DAJpB,gBAAC6oB,GAAD,CAAS7oB,MAAM,mFALV,gBAAC6oB,GAAD,CAAS7oB,MAAM,wEAHf,gBAAC6oB,GAAD,CAAS7oB,MAAM,4CAkB1B,I,GAAMrS,GAASC,IAAWC,OAAO,CAC/B+V,QAAS,CACPjV,cAAe,MACfX,WAAY,SACZlF,OAAQ,GACRD,MAAO,OACPkI,gBAAiB,QACjB9B,eAAgB,gBAChBlB,kBAAmB,MC9EjBw7B,GAAqB1gB,aAAH,mxBA4IT2gB,OAxFf,SAAgB5gC,GAAsB,IAAD,8CAC3B0d,EAA8C1d,EAA9C0d,WAAY6I,EAAkCvmB,EAAlCumB,SAAUsa,EAAwB7gC,EAAxB6gC,MAAOC,EAAiB9gC,EAAjB8gC,aACrC,EAA8C7qB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApE7C,EAAR,EAAQA,kBAAmBK,EAA3B,EAA2BA,QAASD,EAApC,EAAoCA,MAC9BsE,EAAWV,KACjB,EAAsCkS,aAAoB0Y,GAAoB,CAC5EthB,UAAW,CACTiB,WAAYhS,OAAOyD,MAFvB,WAAOgvB,EAAP,YAAmBlhB,EAAnB,EAAmBA,KAAMvJ,EAAzB,EAAyBA,QAYzB,OANArV,aAAgB,WACV8Q,GACFgvB,MAED,CAACA,EAAUhvB,IAGZ,gCACE,gBAACivB,GAAA,EAAOC,OAAR,CACEv+B,MAAO,CAAEyF,gBAAiBgK,EAAMG,KAAOH,EAAMX,OAAOoJ,WAAazI,EAAMX,OAAOsT,UAE7EyB,EACC,gBAACya,GAAA,EAAOE,WAAR,CACEvpB,QAAS+F,EAAWkiB,OACpB/5B,MAAOsM,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQY,OAG7D,gBAAC+hB,GAAA,EAAD,CACEvuB,MAAOsM,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQY,KAC3D4Q,KAAK,OACLva,KAAM,GACNiP,QAAS,kBAAM+F,EAAWjH,SAAS0qB,iBAAcC,mBAGrD,gBAACJ,GAAA,EAAOzV,QAAR,CACEnU,MAAOypB,EAAMQ,WAAWj+B,QAAQgU,MAChCwd,WAAY,CAAE/c,WAAY,OAAQhS,MAAOuM,EAAQX,QAAQa,QAG1DuuB,EAAMQ,WAAWj+B,QAAQk+B,YACxBT,EAAMQ,WAAWj+B,QAAQk+B,YAAY,CAAEC,UAAW,UAElD,gBAACve,GAAA,EAAD,CACEtgB,MAAO,CAAEyF,gBAAiBiK,EAAQI,OAAOH,MACzCqF,KAAK,OACL0L,UAAW,CAAEvd,MAAOuM,EAAQ0S,UAH9B,MAIU,MAAJjF,GAAA,SAAAA,EAAMrQ,WAAN,WAAgBqC,kBAAhB,IAA6BpC,UAAW,KAGjDqxB,EAAe,KACd,gBAACZ,GAAD,CACEzwB,SAAa,MAAJoQ,GAAA,SAAAA,EAAMrQ,WAAN,WAAgBqC,kBAAhB,IAA6BpC,UAAW,EACjD6G,QAASA,EACTvL,wBAAwB,MAAC8U,GAAD,SAACA,EAAMrQ,YAAN,EAAgBzE,uBACzCq1B,sBAAsB,MAACvgB,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,QAA7B,EAAmC3C,YAC1Dm0B,qBACG,MAACxgB,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgBqC,eAAhB,EAA6BrG,aAC3B,MAAJqU,GAAA,SAAAA,EAAMrQ,WAAN,WAAgBqC,kBAAhB,IAA6BrG,YAAY,IAAImV,MAAOC,UAAY,IAElE0f,kBACG,MAACzgB,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,OAA9B,SAAC,EAAmCI,QAAnC,EAAyC8J,MAAK,SAACjL,GAAS,IAAD,MACjD0zB,EAAc,SAAG3hB,EAAKrQ,WAAR,SAAG,EAAeqC,cAAlB,SAAG,EAA4B4vB,qBAA/B,EAAG,EAA4CzgC,KACjE,SAAC0gC,GAAD,aAA0B,MAAVA,GAAA,SAAAA,EAAY5zB,UAAZ,IAAiBjN,MAAOiN,EAAIjN,MAExC8gC,GAAkB7zB,EAAIhB,iBAAmB,IAAK,IAAI6T,MAAOC,UAAY,IAC3E,OAAO4gB,GAAkBG,MAG7BpB,0BAA0B,MAAC1gB,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6B4vB,kBAA7B,EAA6C9lB,QACxEwkB,aAAa,MAACtgB,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,OAA9B,SAAC,EAAmCI,QAAnC,EAAyC0M,QACvD6kB,cAAe,WAAO,IAAD,EAGF,IAFX3uB,EAAW,MAAGgO,GAAH,SAAGA,EAAMrQ,eAAT,EAAG,EAAgBqC,YAEhCA,IACF4E,EAAS9B,GAAQF,MAAM5F,KAAKnE,QAAQmH,EAAYhD,OAChD,MAAIgD,GAAJ,SAAIA,EAAahD,OAAjB,SAAI,EAAmBI,OAAnB,EAAyB0M,QAC3BlF,EAAS9B,GAAQF,MAAM3G,IAAIpD,QAAQmH,EAAYhD,KAAKI,KAAK,KAG3DwH,EAAS9B,GAAQF,MAAMzE,WAAWtF,QAAQmH,EAAYhD,aChIrD,SAAS+yB,GAAT,GAAgF,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,eACxC1vB,GADsF,EAA9BpH,SAC9CkQ,MAEhB,OACE,gBAAC,GAAD,CAAMxY,MAAO,CAAEzC,MAAO,QACpB,gBAAC,GAAD,CAAMyC,MAAOqC,GAAOqS,OAApB,mBACA,gBAAC,GAAD,CAAM1U,MAAOqC,GAAOg9B,UAAWzV,WAAW,OAAOC,UAAU,0BAC3D,gBAAC,KAAK/I,KAAN,CACEpM,MAAM,kBACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOuM,EAAQ2I,QAASkI,KAAK,aAEtD,gBAAC,KAAKO,KAAN,CACEpM,MAAM,cACNpU,KAAM,kBACH6+B,EAGC,gBAAC,KAAKxZ,KAAN,CAAWxiB,MAAOuM,EAAQ2I,QAASkI,KAAK,UAFxC,gBAAC,KAAKoF,KAAN,CAAWxiB,MAAOuM,EAAQtI,MAAOmZ,KAAK,aAM5C,gBAAC,KAAKO,KAAN,CACEpM,MAAM,yBACNpU,KAAM,kBACH8+B,EAGC,gBAAC,KAAKzZ,KAAN,CAAWxiB,MAAOuM,EAAQ2I,QAASkI,KAAK,UAFxC,gBAAC,KAAKoF,KAAN,CAAWxiB,MAAOuM,EAAQtI,MAAOmZ,KAAK,cAUlD,IAAMle,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN5R,WAAY,SACZiB,eAAgB,UAElB+Q,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,S,UCzDI,SAAS+hC,KACtB,OACE,gBAAC,KAAD,CACE52B,IAAI,eACJtK,eAAgB,CACdZ,OAAQ,IACRD,MAAO,IACPomB,OAAQ,IAEVO,WAAS,EACTnkB,OAAQ,CAAC,CAAE2I,IAAK,SAAUnL,MAAO,OAAQC,OAAQ,OAAQyC,aAAc,MCS9D,SAASs/B,GAASjiC,GAAwB,IAAD,IACxCkiC,EAA2BliC,EAAjC6N,KAAqB8J,EAAY3X,EAAZ2X,QACvBlB,EAAWV,KACjB,EAA2BE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACT+vB,EAAkDlhC,WACtD,iBAAO,CACLyI,KAAM0I,EAAQI,OAAOH,KACrB+vB,U3D1BoB,U2D2BpBC,c3D1BsB,a2D4BxB,CAACjwB,EAAQI,OAAOH,OAElB,EAIIgjB,GAAa,CACfhW,UAAW,CACTxe,GAAIyN,OAAO4zB,EAAcrhC,KAE3B+kB,oBAAoB,EACpBH,aAAc,MARR5X,EADR,EACEgS,KACAvJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QASI+K,EAAqBC,GAAsB,CAC/C5R,UAAW,kBACTrI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,UAAD,MAAW4D,OAAX,EAAWA,EAAM2mB,YAAjB,WACPtb,QAAS,cAGfR,QAAS,SAACzO,GAAD,OACPwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,cAKXwc,EAAcz0B,eAClB,SAAO8K,GAAP,SAAA3K,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBmvB,QAAS1hB,OAAOvC,EAAMlL,OAN1B,8DASA,CAAC4vB,EAAD,MAAqB5iB,OAArB,EAAqBA,EAAMhN,KAGvB+0B,EAAc30B,eAClB,SAAO+K,GAAP,SAAA5K,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBqvB,QAAS5hB,OAAOtC,EAAMnL,OAN1B,8DASA,OAACgN,OAAD,EAACA,EAAMhN,GAAI4vB,IAGb,GAAIna,EACF,OAAO,gBAAC,GAAD,MAGT,IAAMgsB,GAAU,WACbr5B,EAAUgoB,KAAO,QADJ,MAEbhoB,EAAU+nB,aAAe,WAFZ,MAGb/nB,EAAUkpB,UAAY,aAHT,MAIblpB,EAAUmpB,SAAW,UAJR,MAKbnpB,EAAUmoB,OAAS,UALN,GAOhB,OACE,gBAAChG,GAAA,EAAD,CACEhP,OAAO,YACP1Z,MAAO,CACL2jB,OAAQ,GACR1jB,aAAc,EACdmE,QAAS,CAAC,YAAa,UAAUqb,UAAa,MAAJtU,OAAA,EAAAA,EAAMxD,QAAS,IAAM,GAAM,GAEvEghB,UAAW,EACX1T,QAASA,GAET,gBAAC2X,GAAA,EAAD,CACE5sB,MAAO,CACLyF,gBAAqB,MAAJ0F,KAAMxD,MAAQ83B,EAAiBt0B,EAAKxD,YAASzH,EAC9Dmb,WAAY,EACZuH,aAAc,EACdzf,MAAO,QACPD,SAAU,KAGP,MAAJiI,KAAMxD,MAAQi4B,EAAU,MAACz0B,OAAD,EAACA,EAAMxD,OAAS,IAE3C,gBAAC+gB,GAAA,EAAKf,MAAN,CACE3nB,MAAO,CAAE2D,eAAgB,iBACzB+Q,MAAK,gBAAWvJ,OAAX,EAAWA,EAAM2mB,YACtB9H,SAAQ,MAAE7e,OAAF,EAAEA,EAAMpF,KAChBic,MAAO,kBACL,MAAC7W,MAAMjC,YAAc22B,aAAS,IAAI5hB,KAAL,MAAa9S,OAAb,EAAaA,EAAMjC,YAAc,KAC5D,gBAAC,GAAD,CAAMlJ,MAAO,CAAE4iB,YAAa,KAC1B,gBAAC2N,GAAD,CAAWC,IAAK,IAAIvS,KAAwB,KAAf,MAAJ9S,OAAA,EAAAA,EAAMjC,mBAMvC,gBAACwf,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAACqC,GAAO23B,cAC3B,gBAAC,GAAD,CAAMh6B,MAAO,CAAEqD,cAAe,MAAOqgB,SAAU,OAAQje,gBAAiB,gBACtE,gBAAC6b,GAAD,CACEna,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbsW,OAAK,EACLzc,MAAOsM,EAAMX,OAAOkR,UACpBF,SAAU,SAAOxW,GAAP,eAAA5K,EAAAC,OAAA,uDACC,MAAJwM,OAAA,EAAAA,EAAM6oB,gBAAiB,IAAM1qB,EAAMC,UAAY,IAD5C,gBAEAmnB,IAAY,MAAJvlB,OAAA,EAAAA,EAAM6oB,gBAAiB,IAAM1qB,EAAMC,UAAY,GAE7DwK,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,oBAAqBmpB,EAAtB,4CACPla,QAAS,aAPP,wCAAA9X,EAAA,MAWAw0B,EAAY5pB,IAXZ,OAYN0Z,IAZM,+DAgBZ,gBAAC5B,GAAD,CACEje,MAAOsM,EAAMX,OAAOkR,UACpB7Y,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MACbyW,SAAUkT,EACVpT,OAAK,IAEP,gBAACU,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,YACLvgB,MAAO,CACLygB,iBAAkB,EAClBhb,gBAAiB,cACjBjI,OAAQ,GACRkF,WAAY,SACZe,YAAagM,EAAMX,OAAOkR,WAE5BU,UAAW,CAAEvd,MAAOsM,EAAMX,OAAOkR,UAAW9c,SAAU,MAEjD,MAAJiI,OAAA,EAAAA,EAAM6oB,gBAAiB,EAZ1B,YAYgC7oB,GAZhC,SAYgCA,EAAM7B,YAZtC,EAYgC,EAAaC,aAQvD,IAAMlH,GAASC,IAAWC,OAAO,CAC/By3B,YAAa,CACX5V,eAAgB,EAChBjkB,SAAU,SACVkD,cAAe,OAEjBy8B,UAAW,CACTtiC,OAAQ,GACRmmB,OAAQ,EACRjhB,WAAY,UAEdq9B,cAAe,CAAE78B,SAAU,M,uCCjLd,SAAS88B,GAAa1iC,GACnC,IAAQI,EAAoCJ,EAApCI,SAAUuiC,EAA0B3iC,EAA1B2iC,YAAanrB,EAAaxX,EAAbwX,SAEzBH,EAAMpW,WA8CZ,OACE,gBAAC2hC,GAAA,EAAD,CAGEvrB,IAAKA,EACLwrB,SAAUrrB,EACVsrB,mBAnDiB,SACnBC,EACAC,GAEA,IAAMC,EAAQD,EAAM56B,YAAY,CAC9BC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,EAAK,KAGf46B,EAAaF,EAAM56B,YAAY,CACnCC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,EAAG,MAGnB,OACE,gBAAC,IAAD,CACEqP,QAAS,WAAO,IAAD,EACF,MAAXgrB,KAAahrB,UACV,MAAHN,GAAA,SAAAA,EAAK/V,UAAL,EAAc8P,UAGhB,gBAAC,KAASpJ,KAAV,CACEtF,MAAO,CACL4rB,SAAU,EACVnmB,gBAAe,MAAEw6B,OAAF,EAAEA,EAAax6B,gBAC9B9B,eAAgB,SAChBnG,OAAQ,OACRD,MAAO,GACPgI,UAAW,CAAC,CAAEi7B,iBAGhB,gBAAC,KAASv6B,KAAV,CACEjG,MAAO,CACLmD,MAAO,QACPV,kBAAmB,GACnB0S,WAAY,MACZ5P,UAAW,CAAC,CAAEg7B,YALlB,MAQGN,OARH,EAQGA,EAAava,UAapB+a,qBAAmB,GAElB/iC,GClCQ,SAAS6hC,GAASjiC,GAAwB,IAAD,EAE9CkiC,EAMJliC,EANF6N,KACA4b,EAKEzpB,EALFypB,WACA2Z,EAIEpjC,EAJFojC,gBACAC,EAGErjC,EAHFqjC,gBACA3L,EAEE13B,EAFF03B,iBACAE,EACE53B,EADF43B,YAEIvtB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KACjB,EAAkC9U,YAAe,GAAjD,WAAOovB,EAAP,KAAmBC,EAAnB,KACA,EAA0CrvB,YAAe,GAAzD,WAAOqiC,EAAP,KAAuBC,EAAvB,KAEA,EAIIlO,GAAa,CACfhW,UAAW,CACTxe,GAAIyN,OAAO4zB,EAAcrhC,KAE3B+kB,oBAAoB,IAPd/X,EADR,EACEgS,KACAvJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QASM7T,EADgBwO,KAChBxO,YAEF4e,EAAqBC,GAAsB,CAC/C5R,UAAW,kBACTrI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,UAAD,MAAW4D,OAAX,EAAWA,EAAM2mB,YAAjB,WACPtb,QAAS,cAGfR,QAAS,SAACzO,GAAD,OACPwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,cAIXqc,EAAqBC,GAAsB,CAC/C1W,UAAW,SAACvU,GAAD,iBACTkM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UAAY,SAAAM,EAAQ8D,OAAR,WAAcL,eAAd,WAA4Ba,WAA5B,IAAkCpG,OAAQ,QAA/C,oCACLoF,OADK,EACLA,EAAM2mB,YAERtb,QAAS,cAGfR,QAAS,SAACzO,GAAD,OACPwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,cAKXuc,EAAex0B,eACnB,SAAOoN,GAAP,SAAAjN,EAAAC,OAAA,kEAAAD,EAAA,MACQm0B,EAAmBvW,OAAO,CAC9Bne,GAAIyN,OAAOD,EAAKxN,OAFpB,8DAKA,CAAC00B,IAGGG,EAAcz0B,eAClB,SAAO8K,GAAP,SAAA3K,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBmvB,QAAS1hB,OAAOvC,EAAMlL,OAN1B,8DASA,CAAC4vB,EAAD,MAAqB5iB,OAArB,EAAqBA,EAAMhN,KAGvB80B,EAAY10B,eAChB,SAAO0K,GAAP,SAAAvK,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBovB,MAAO3hB,OAAO3C,EAAI9K,OANtB,8DASA,CAAC4vB,EAAD,MAAqB5iB,OAArB,EAAqBA,EAAMhN,KAGvB+0B,EAAc30B,eAClB,SAAO+K,GAAP,SAAA5K,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBqvB,QAAS5hB,OAAOtC,EAAMnL,OAN1B,8DASA,OAACgN,OAAD,EAACA,EAAMhN,GAAI4vB,IAGPoF,EAAmB50B,eACvB,SAAO60B,GAAP,SAAA10B,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,mEAAAO,EAAA,MAIQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChBsvB,aAAc7hB,OAAOwnB,EAAGj1B,OAN5B,8DASA,OAACgN,OAAD,EAACA,EAAMhN,GAAI4vB,IAGPE,EAAa1vB,eACjB,SAAO2vB,GAAP,eAAAxvB,EAAAC,OAAA,yDACOwM,KAAMhN,GADb,wDAIQgwB,EAAgBD,EAAiBE,aAAW,IAAInQ,KAAQiQ,GAAShQ,UAAY,IAAnD,KAJlC,WAAAxf,EAAA,MAMQqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChB+K,WAAYilB,EAAehtB,KAAKktB,KAAKF,GAAgB,QARzD,8DAWA,OAAChjB,OAAD,EAACA,EAAMhN,GAAI4vB,IAGPU,EAAWlwB,eAAkB,oBAAAG,EAAAC,OAAA,yDAC5BwM,KAAMhN,GADsB,mEAAAO,EAAA,MAI3BqvB,EAAmBzR,OAAO,CAC9Bne,GAAIyN,OAAOT,EAAKhN,IAChB2iC,WAAW,KANoB,8DAQhC,OAAC31B,OAAD,EAACA,EAAMhN,GAAI4vB,IAER/S,EAAa4Y,2BACb7E,EAAgB3P,GAAe3Y,EAAW0Z,YAE1CkT,EAAcjU,GAAe3Y,EAAW6sB,YACxCC,EAAgBnU,GAAe3Y,EAAWsf,gBAE1CyN,EAAgBpU,GAAe3Y,EAAWgtB,YAC1CC,EAAkBtU,GAAe3Y,EAAWktB,gBAE5C3E,EAAkB5P,GAAe3Y,EAAWwoB,YAC5C3E,EAAmBlL,GAAe3Y,EAAWuf,gBAC7CuE,EAA+BnL,GAAe3Y,EAAW+jB,wBAEzD2E,EAAqBH,IAAe,MAAI7jB,OAAJ,EAAIA,EAAMhC,WAAU,MAACgC,KAAM+jB,QAErE3wB,aAAgB,WACN,MAAJ4M,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,GACrCqkB,GAAY,KAEb,OAACziB,OAAD,EAACA,EAAM5B,WAEV,IAAM6lB,EACJuR,IACCrW,GAAoBC,MACrB,MAACpf,KAAM21B,eACN,MAAC31B,KAAMjC,aAAciC,EAAKjC,YAAa,IAAI+U,MAAOC,UAAY,KAEjE,OAAItK,EACK,gBAAC0rB,GAAD,MAGP,gBAAC5W,GAAA,EAAD,CACEhP,OAAO,YACP1Z,MAAO,CAAE2jB,OAAQ,GAAIvf,QAAa,MAAJ+G,KAAM21B,UAAY,GAAM,GACtDnY,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACE3nB,MAAO,CAAE2D,eAAgB,iBACzB+Q,MACE,gBAAC,GAAD,CACE1U,MAAO,CACLzC,MAAO,OACP+W,KAAM,EACNjR,cAAe,MACfX,WAAY,SACZiB,eAAgB,gBAChB8B,gBAAiB,gBAGnB,gBAAC,KAAD,eAAmB,MAAJ0F,OAAA,EAAAA,EAAM2mB,aAAc,IACnC,gBAAC,GAAD,CAAM9xB,MAAO,CAAE4rB,SAAU,KACxBwD,GACC,gBAACsC,GAAA,EAAD,CACEnR,KAAK,gBACL7G,OAAO,wBACPzE,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1E,cAAcjI,SACrC2O,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQyD,KAEnDof,IAAiCD,GAAoBnb,IAEvD4E,EAAS9B,GAAQP,QAAQtE,SAASgB,YAAY,CAACe,KAC/C4E,EAAS9B,GAAQF,MAAM1E,cAAcrB,iBAAiB,CAACmD,MAGrDuxB,GACFA,QAOZ1W,SAAQ,MAAE7e,OAAF,EAAEA,EAAMpF,OAElB,gBAAC0hB,EAAA,EAAD,CACE9N,QAAS/F,GAAWma,EAAmBna,SAAWif,EAAmBjf,QACrEzQ,MAAOwE,EAAM8H,MAAMX,OAAOgB,SAE5B,gBAAC4Y,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CACLokB,eAAgB,EAChB5mB,OAAQmwB,IAAegT,OAAkBzgC,EAAY,IACrDC,SAAU,WAGZ,gBAAC,GAAD,CAAMH,MAAO,CAAEqD,cAAe,MAAOoC,gBAAiB,gBACpD,gBAAC0gB,GAAA,EAAD,CACEC,YAAU,EACVkO,gCAAgC,EAChC3J,sBAAuB,CAAEllB,gBAAiB,gBAE1C,gBAAC6b,GAAD,CACEna,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbwW,SAAU,SAAOxW,GAAP,mBAAA5K,EAAAC,OAAA,uDACC,MAAJwM,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,IAAM3P,EAAMC,UAAY,IAD5C,gBAEAmnB,IAAY,MAAJvlB,GAAA,SAAAA,EAAM8V,YAAN,IAAahI,SAAU,IAAM3P,EAAMC,UAAY,GAE7DwK,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,oBAAqBmpB,EAAtB,4CACPla,QAAS,aAPP,wCAAA9X,EAAA,MAWAw0B,EAAY5pB,IAXZ,OAYN0Z,IAZM,+DAgBZ,gBAACrD,GAAD,CAASxY,MAAK,MAAEgE,OAAF,EAAEA,EAAMlC,IAAK6W,SAAUmT,IACrC,gBAAC7R,GAAD,CAAWja,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MAAOyW,SAAUkT,IACzC,gBAAChS,GAAD,CACE7Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM/B,WACb6X,OAAW,MAAJ9V,OAAA,EAAAA,EAAM8V,QAAS,GACtBnB,SAAUqT,MAIhB,gBAAC4N,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,CAAkBv+B,MAAO,CAAEzC,MAAO,SAChC,gBAACwjC,GAAA,EAAUpZ,MAAX,aACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,aACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,aAJJ,MAMG71B,GANH,SAMGA,EAAM8V,YANT,EAMG,EAAa3iB,KAAI,SAACqN,GAAU,IAAD,gBACpBmpB,EAAS,MAAG3pB,GAAH,SAAGA,EAAM8V,YAAT,EAAG,EAAa0D,QAC7B,gBAAGoQ,EAAH,EAAGA,YAAH,OAAqBA,GAAeA,IAAgBppB,EAAKopB,eAErDkM,GAAoB,MAAJt1B,GAAA,SAAAA,EAAMQ,WAAN,IAAYhO,OAAZ,MAAmBgR,OAAnB,EAAmBA,EAAahR,IAEtD,OACE,gBAAC6hC,GAAD,CACElrB,SAAWmsB,IAAkBzN,IAAoByN,IAAkBvN,EACnEhrB,IAAG,QAAUiD,EAAKxN,GAClB8hC,YAAa,CACXva,MAAO,SACPjgB,gBAAiB,MACjBwP,QAAS,kBAAM8d,EAAapnB,MAG9B,gBAACo1B,GAAA,EAAUG,IAAX,CACExnB,OAAO,WACP5E,WAAW,MAAC3J,MAAM21B,WAClB7rB,QAAS,WAAO,IAAD,GACT,SAAAtJ,EAAKQ,WAAL,IAAWhO,OAAX,MAAkBgR,OAAlB,EAAkBA,EAAahR,IAC7Bk1B,IACF,MAAIyB,KAAW7b,OACb+b,EAAiBF,GAEjBI,EAAYvpB,IAGP4nB,IACT,MAAIuB,KAAW7b,OACb+b,EAAiBF,GAEjBI,EAAYvpB,KAIlBnL,cAAc,QAEd,gBAACugC,GAAA,EAAUI,KAAX,KACE,gBAACjX,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,UAAzB,MAAoCz1B,GAApC,SAAoCA,EAAML,eAA1C,SAAoC,EAAoBa,WAAxD,EAAoC,EAA0BpG,OAEhE,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC9W,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,UAAzB,MAAoCz1B,GAApC,SAAoCA,EAAMV,eAA1C,EAAoC,EAAgBlF,OAEtD,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC9W,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,YACjB,MAAJz1B,GAAA,SAAAA,EAAMN,iBAAN,IAAkBe,WAAY,MAAS,IAD3C,QAMC,MAAJT,GAAA,SAAAA,EAAMN,iBAAN,IAAkBiB,WACjB,gBAACy0B,GAAA,EAAUG,IAAX,CACExnB,OAAO,WACP5E,WAAW,MAAC3J,MAAM21B,WAClBtgC,cAAc,QAEd,gBAACugC,GAAA,EAAUI,KAAX,KACE,gBAACjX,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,UAAzB,MAAoCz1B,OAApC,EAAoCA,EAAMJ,gBAE5C,gBAACw1B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC9W,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,UAAzB,cAEF,gBAACL,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC9W,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,YACjB,MAAJz1B,GAAA,SAAAA,EAAMN,iBAAN,IAAkBe,WAAY,MAAS,IAD3C,WASXynB,MAAMC,KAAK,CAAE7a,QAAY,MAAJ9N,OAAA,EAAAA,EAAM4oB,iBAAkB,IAAK,SAACsN,EAAGt1B,GAAJ,OAAUA,KAAGzN,KAAI,SAACyN,GAAD,OAClE,gBAACg1B,GAAA,EAAUG,IAAX,CACEx4B,KAAG,MAAKyC,OAAL,EAAKA,EAAMhN,IAAX,eAA4B4N,EAC/B2N,OAAO,WACPzE,QAAS,kBAAM+F,EAAWia,SAAS,aAAc,CAAE9pB,WAEnD,gBAAC41B,GAAA,EAAUI,KAAX,KACE,gBAACjX,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO++B,UAAzB,kBAEF,gBAACL,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,KACA,gBAACD,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,aAKN,MAAC71B,MAAMjC,cAAkB,MAAJiC,OAAA,EAAAA,EAAMjC,aAAa,IAAI+U,MAAOC,UAAY,KAC/D,gBAAC,GAAD,CAAMle,MAAO,CAAEsU,KAAM,EAAG7O,gBAAiB,QAAS2V,QAAS,IACzD,gBAAC8O,GAAA,EAAD,CAAWlqB,MAAO,CAAEmD,MAAO,YAA3B,eACkBm+B,aACd,IAAIrjB,KAC2B,KAA/B,MAAC9S,OAAD,EAACA,EAAMjC,aAHX,SASFy3B,EACA,gBAACjY,GAAA,EAAKb,QAAN,KACO,MAAJ1c,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,EAAI,KACtC,gBAACsL,EAAA,EAAD,CACEI,QAAS,kBAAM2Y,GAAaD,IAC5BjU,OAAQiU,EAAa,YAAc,aAElCA,EAAa,YAAc,aAGhC,gBAAC,GAAD,CAAM3tB,MAAO,CAAE4rB,SAAU,MAEvBmD,GAAkB,MAAC5jB,KAAM21B,UAAY,KAAW,MAAJ31B,KAAMjC,WAClD,gBAAC2L,EAAA,EAAD,CAAQG,KAAK,WAAWC,QAAS,kBAAMgZ,EAAW,OAAOvU,OAAO,mBAAhE,UAIA,gBAAC0G,GAAA,EAAD,CACExG,UAAW,kBAAMinB,GAAgB,IACjClnB,QAASinB,EACTvgB,OACE,gBAACxL,EAAA,EAAD,CACEG,KAAK,WACLC,QAAS,kBAAM4rB,GAAgB,IAC/BnnB,OAAO,mBAHT,aASF,gBAAC0G,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP4rB,GAAgB,GAChB5S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP4rB,GAAgB,GAChB5S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP4rB,GAAgB,GAChB5S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACP4rB,GAAgB,GAChB5S,EAAW,IAEbvZ,MAAM,mBAMP,MAAJvJ,KAAM21B,UAAY,KAAW,MAAJ31B,KAAMjC,YAC9BiC,EAAKjC,YAAa,IAAI+U,MAAOC,UAAY,KACzC6Q,EACA,gBAACla,EAAA,EAAD,CACE7U,MAAO,CAAE+vB,WAAY,GACrB/a,KAAK,YACLC,QAAS,WAAO,IAAD,IACb,OAAI,MAAC9J,GAAD,SAACA,EAAM/B,aAAN,EAAkBjL,GASnB,MAACgN,GAAD,SAACA,EAAM9B,QAAN,EAAalL,GAQXswB,IAPE1a,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,4DACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,kEACTiP,QAAS,eARnB,kBA2BA,gBAAC3B,EAAA,EAAD,CACE7U,MAAO,CAAE+vB,WAAY,GACrB/a,KAAK,YACL0E,OAAO,kBACPzE,QAAS,kBAAM8R,KACfjS,UACGqa,GACDvK,SAAY,MAAJzZ,OAAA,EAAAA,EAAMjC,aAAciC,EAAKjC,YAAa,IAAI+U,MAAOC,UAAY,MAPzE,aA/Fc,MAkH1B,I,SAAM7b,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBygB,eAAgB,GAElB1P,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET6jC,SAAU,CACRl+B,SAAU,IAEZinB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,KC7eG0G,MAtDcyB,aAAH,w3BAsDwD,CAChFvB,WAAY,SAACkB,GAAD,OAAYA,EAAOqkB,YAC/B3lB,UAAW,CACTrS,SAAU,CACRgS,GAAW,2CACXI,GAAU,gCAEZ6R,QAAS,CAACjS,GAAW,oCACrBgS,MAAO,CAAChS,GAAW,uCAErBU,cAAe,CACbuR,QAAS,QACTD,MAAO,SCnEHtb,GAAYyG,GAAZzG,QCCKkP,GAAuB5D,aAAH,kcAyBlBsF,MAMb1B,GAAsB,CACtBnF,WAAY,SAAC8G,GAAD,mBAAWA,GAAX,SAAWA,EAAOhW,eAAlB,EAAW,EAAiB6T,iBClB3B,SAAS6gB,GAAuBlkC,GAAiC,IAAD,EACrEooB,EAA6EpoB,EAA7EooB,MAAO+b,EAAsEnkC,EAAtEmkC,oBAAqBlhB,EAAiDjjB,EAAjDijB,KAAMpZ,EAA2C7J,EAA3C6J,MAAOsd,EAAoCnnB,EAApCmnB,sBAAuB3E,EAAaxiB,EAAbwiB,SAChEzQ,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBACF0E,EAAWV,KAEjB,EAA0BquB,GAAsB,CAC9C/kB,UAAW,CACTiB,WAAYhS,OAAOyD,GACnBC,YAAamyB,GAEfzrB,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAN5D2G,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QASdrV,aAAgB,WACO,MAArBkmB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEb,IAAMjB,EAAmBjlB,eACvB,gBAAEwmB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,OACxC,CAACjF,IAEG6hB,EAAepjC,eAAkB,SAAC0N,GAAD,aAAYA,OAAZ,EAAYA,EAAQE,KAAKpG,OAAM,IAChEsd,EAAa9kB,eAAkB,SAACmM,GAAD,OAAUA,EAAKvM,MAAL,MAAYgJ,OAAZ,EAAYA,EAAOhJ,MAAI,OAACgJ,OAAD,EAACA,EAAOhJ,KACxEilB,EAAW7kB,WAAc,iBAAM,CAAC4I,GAAOwd,OAAOC,WAA4B,CAACzd,IAEjF,OAAOyM,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,KAAiBa,GACjB,gBAAC,GAAD,CACEjC,iBAAe,EACflD,KAAMA,GAAQ,UACd4C,MAAO2B,mBAAW,MAAJ3H,GAAA,SAAAA,EAAMyD,YAAN,IAAatiB,KAAI,SAACuiB,GAAD,aAAUA,OAAV,EAAUA,EAAME,UAAS,GAAI,MAC5DqC,SAAUA,EACVC,WAAYA,EACZE,gBAAiBoe,EACjBne,iBAAkBA,KCxC1B,IAAMnC,GAAe9D,aAAH,8PAeH,SAASqkB,GAAgBtkC,GACtC,IAAQ6J,EAA2C7J,EAA3C6J,MAAO2Y,EAAoCxiB,EAApCwiB,SAAU2E,EAA0BnnB,EAA1BmnB,sBACjBpV,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAER,EAA0ByO,aAAgBuD,GAAc,CACtD1E,UAAW,CACTiB,WAAYvO,KAFR8N,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAUd,OAJArV,aAAgB,WACO,MAArBkmB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,iBACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,MAAO2B,kBAAO,MAAS,MAAJ3H,OAAA,EAAAA,EAAMoE,SAAU,KAAM,qBAAGpjB,OAAgB,GAC5DilB,SAAU,CAACjc,GAAOwd,OAAOC,SACzBrB,gBAAiB,SAACja,GAAD,OAAuB,MAALA,OAAA,EAAAA,EAAOvD,OAAQ,IAClDud,WAAY,SAACha,GAAD,OAAW,GACvBka,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAkB,SChD5D,SAAS8c,KAAY,IAAD,IAC3Bl6B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5G,QAC5C4I,EAAWV,KAEjB,OACE,gCACE,gBAACyO,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BsjB,YAAY,WACZvjB,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,OAAQ8e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,mCAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOsC,SAASnC,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOsC,WAAf,SAAE,EAAuBpC,YAAzB,EAAE,EAA8Bsf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,WAAYkE,OAAO4a,SAG7D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOsC,SAASnC,MAAQ,QAAU,QACvDO,EAAMV,OAAOsC,SAASnC,OAAS,IAElC,gBAAC9B,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAACqkC,GAAD,CACEz6B,MAAOQ,EAAMV,OAAOqC,MAAMnC,MAC1B2Y,SAAU,SAAC3Y,GACT4M,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,QAASP,KAC/C4M,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,WAAYP,EAAMoC,eAG5D,gBAAC0c,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOqC,MAAMlC,MAAQ,QAAU,QACpDO,EAAMV,OAAOqC,MAAMlC,OAAS,IAG/B,gBAACo6B,GAAD,CACE9b,MAAM,MACN5F,SAAU,SAAC7T,GAAD,OAAY8H,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,MAAOuE,MACnE9E,MAAOQ,EAAMV,OAAOgC,IAAI9B,OAAS,KACjCs6B,oBAAqB,CAAC,cAExB,gBAACxb,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgC,IAAI7B,MAAQ,QAAU,QAClDO,EAAMV,OAAOgC,IAAI7B,OAAS,IAG7B,gBAACo6B,GAAD,CACE9b,MAAM,QACN5F,SAAU,SAAC7T,GAAD,OAAY8H,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,QAASuE,MACrE9E,MAAOQ,EAAMV,OAAOoC,MAAMlC,OAAS,KACnCs6B,oBAAqB,CAAC,gBAExB,gBAACxb,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOoC,MAAMjC,MAAQ,QAAU,QACpDO,EAAMV,OAAOoC,MAAMjC,OAAS,IAG/B,gBAACkf,GAAA,EAAD,CAAStmB,MAAO,CAAEokB,eAAgB,KAElC,gBAACyG,GAAA,EAAS/J,KAAV,CACE4E,MAAM,2BACN5mB,OAAQ6I,EAAMV,OAAOkC,OAAOhC,MAAQ,UAAY,YAChD8N,QAAS,kBACPlB,EAAS9B,GAAQF,MAAM5G,KAAKzD,SAAS,CAAC,UAAWC,EAAMV,OAAOkC,OAAOhC,cAQjF,IAAM9E,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,EACN/W,MAAO,QAETuK,MAAO,CACLqc,aAAc,EACd5mB,MAAO,UC3EI,SAASukC,GAAcxkC,GACpC,IAAQykC,EAA8DzkC,EAA9DykC,YAAaC,EAAiD1kC,EAAjD0kC,aAActtB,EAAmCpX,EAAnCoX,MAAOd,EAA4BtW,EAA5BsW,QAAS5M,EAAmB1J,EAAnB0J,KAAMtJ,EAAaJ,EAAbI,SACnDkpB,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAElD,OACE,gBAACoV,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,EAAMi7B,aAAa,EAAOjiC,MAAO,CAAEg3B,SAAU,IAAKtzB,UAAW,WAC9E,gBAAC+jB,EAAA,EAAD,CAAaC,eAAa,EAAC/N,QAAS/F,EAASzQ,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAC7E,gBAACyX,GAAA,EAAOI,MAAR,KAAejT,GACf,gBAAC6S,GAAA,EAAOsB,QAAR,CAAgBroB,cAAc,YAC5B,gBAAC+mB,GAAA,EAAOK,WAAR,KACE,gBAAC,IAAD,KAAalqB,KAGjB,gBAAC6pB,GAAA,EAAOM,QAAR,CAAgB7nB,MAAO,CAAE2D,eAAgB,aACvC,gBAACkR,EAAA,EAAD,CACEI,QAAS,WACP3X,EAAMwqB,YAFV,UAQA,gBAACjT,EAAA,EAAD,CAAQI,QAAS+sB,GAAeD,MCzB3B,SAASG,GAAW5kC,GAAqB,IAAD,MAC7C0J,EAA6B1J,EAA7B0J,KAAM8gB,EAAuBxqB,EAAvBwqB,QAAS1L,EAAc9e,EAAd8e,UACjBzU,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5G,QAC1CkE,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBAEF0E,EAAWV,KACXkuB,EAAaY,GAAsB,CACvC/lB,UAAU,SAAD,oGAAC,EAAC,SAACvU,GAAa,IAAD,EACtBkM,EACEquB,GAASrxB,aAAa,CACpBxJ,QAAQ,SAAD,MAAUM,GAAV,SAAUA,EAASsD,WAAnB,EAAU,EAAepF,MAAzB,WACPyQ,QAAS,aAIb,MAAI3O,KAASsD,MACXiR,EAAS,MAACvU,OAAD,EAACA,EAASsD,MAErB4I,EAAS9B,GAAQF,MAAM5G,KAAK/F,SAC5BkY,uBAAsB,kBAAMvJ,EAAS9B,GAAQF,MAAM5G,KAAKnD,SAAQ,UAElEgO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,YAClE2F,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM5G,KAAKpD,cAAc,CAACD,EAA2BP,QAGpE86B,EAAa9jC,WAAc,iBAAM,CAAC,MAAO,OAAM,IAE/C+jC,EAAS/jC,eAAkB,WAAO,IAAD,MAC/Boe,EAAY,CAChBxT,SAAUxB,EAAMV,OAAOkC,OAAOhC,MAC9BpB,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxByW,WAAYvO,EACZ9F,SAAU5B,EAAMV,OAAOsC,SAASpC,OAAS,KACzCqmB,QAAS5hB,OAAM,SAACjE,EAAMV,OAAOqC,MAAMnC,YAApB,EAAC,EAA0BhJ,KAAO,KACjDovB,MAAO3hB,OAAM,SAACjE,EAAMV,OAAOgC,IAAI9B,YAAlB,EAAC,EAAwBhJ,KAAO,KAC7CmvB,QAAS1hB,OAAM,SAACjE,EAAMV,OAAOoC,MAAMlC,YAApB,EAAC,EAA0BhJ,KAAO,MAEnDojC,EAAWjlB,OAAOK,KACjB,CACD4kB,EACAlyB,EAFC,SAGD1H,EAAMV,OAAOgC,IAAI9B,YAHhB,EAGD,EAAwBhJ,GACxBwJ,EAAMV,OAAOkC,OAAOhC,MACpBQ,EAAMV,OAAOsC,SAASpC,MACtBQ,EAAMV,OAAOlB,KAAKoB,MANjB,SAODQ,EAAMV,OAAOoC,MAAMlC,YAPlB,EAOD,EAA0BhJ,GAPzB,SAQDwJ,EAAMV,OAAOqC,MAAMnC,YARlB,EAQD,EAA0BhJ,KAG5B,OACE,gBAAC2jC,GAAD,CACE96B,KAAMA,EACN8gB,QAASA,EACTka,aAAcM,EACdP,YAAY,SACZM,WAAYA,EACZzuB,QAAS2tB,EAAW3tB,QACpBc,MAAM,YAEN,gBAACmtB,GAAD,O,2pBC5DS,SAASU,KAAgB,IAAD,YACrC,EAAsC5kB,KAA9B7Q,EAAR,EAAQA,SAAU8G,EAAlB,EAAkBA,QAAS6K,EAA3B,EAA2BA,OACrB1K,EAAWV,KACX2H,EAAa4Y,2BACbnkB,EAAQsQ,eAERyiB,EAAU,MAAG11B,OAAH,EAAGA,EAAU21B,kBAEvBC,EAAe,MAAR51B,GAAA,SAAAA,EAAU21B,oBAAV,EAA6BE,UACtC,IAAI1kB,KAA8C,KAAjC,MAARnR,GAAA,SAAAA,EAAU21B,wBAAV,IAA6BE,YACtC,IAAI1kB,KACFla,GAAkB,MAAR+I,GAAA,SAAAA,EAAU21B,wBAAV,IAA6B1+B,UAAW,EAClDyI,GAAsB,MAARM,GAAA,SAAAA,EAAU21B,wBAAV,IAA6Bj2B,cAAe,EAC1Do2B,EAAYxjB,GAAe3Y,EAAWo8B,yBAEtCC,GAAiC,MAAVN,OAAA,EAAAA,EAAYrkC,MAAZ,MAAkBqkC,GAAlB,SAAkBA,EAAY71B,YAA9B,EAAkB,EAAmBsM,UAArC,MAA+CupB,OAA/C,EAA+CA,EAAYz+B,SACxF,QAAQ6P,GAAW,MAAC9G,KAAU21B,oBAAuBhkB,EAOnD,gBAACiK,GAAA,EAAD,CACE1oB,MAAOqC,GAAOsqB,KACdhE,UAAW,EACX1T,QAAS,WACH2tB,GAAS,MAAI91B,KAAU21B,oBACzB1uB,EAAS9B,GAAQF,MAAMvE,QAAQxF,QAAtB,MAA8B8E,OAA9B,EAA8BA,EAAU21B,oBACjDznB,EAAWia,SAAS,iBAIxB,gBAAC8N,GAAA,EAAD,CACEnuB,OAAQnF,EAAMG,KAAOozB,KAAkBC,KACvCjjC,MAAK,MAAOsC,IAAW4S,oBACvBguB,WAAW,SAEX,gBAACxa,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CACL0C,WAAY,SACZiB,eAAgB,SAChBioB,SAAU,IAGVkX,EAKA,gCACE,gBAACx9B,EAAA,EAAD,CAAMtF,MAAOqC,GAAOjC,KAClB,gBAACkF,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACC,GAAA,EAAD,CACEr9B,KAAK,WACL5C,MAAM,UACN6C,KAAM,GACNhG,MAAO,CACL4iB,YAAa,KAGjB,gBAAC3c,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqgC,MAAOW,aAAOX,EAAM,gBAG1C,gBAACp9B,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO8gC,KAAM,CAAEx/B,eAAgB,WAAYD,UAAW,cAClE,gBAAC0/B,GAAA,EAAD,CACEr9B,KAAK,cACL5C,MAAM,UACN6C,KAAM,GACNhG,MAAO,CACL4iB,YAAa,KAGjB,gBAAC3c,EAAA,EAAD,CAAMjG,MAAOqC,GAAOmK,aAAcA,GAAe,KACjD,gBAAC6V,GAAA,EAAD,CAAwBtc,KAAK,sBAAsB5C,MAAM,UAAU6C,KAAM,OAG7E,gBAACV,EAAA,EAAD,CAAMtF,MAAOqC,GAAO+S,QAClB,gBAAC9P,EAAA,EAAD,CAAMtF,MAAOqC,GAAOihC,WAClB,gBAACh+B,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAACzjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACl9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOkhC,QAApB,aAEF,gBAACj+B,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACl9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOkhC,QAApB,SAEF,gBAACj+B,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACl9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOkhC,QAApB,eAGHC,oBACS,MAAR12B,GAAA,SAAAA,EAAU21B,wBAAV,IAA6B91B,QAAS,IACtC,SAACjC,GAAD,OAAUkB,OAAOlB,EAAK0B,YACtB,QACA9N,KAAI,gBAAUi8B,EAAV,EAAGzC,MAAaC,EAAhB,EAAgBA,UAAW3rB,EAA3B,EAA2BA,SAA3B,OACJ,gBAAC,WAAD,CAAgB1D,IAAG,WAAa0D,GAC9B,gBAACka,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,OAAQkI,gBAAiB,WAClD,gBAACH,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0mB,KAClB,gBAACzjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACl9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAO8E,OAAQiF,IAE9B,gBAAC9G,EAAA,EAAD,CAAMtF,MAAOqC,GAAO8gC,MAClB,gBAACl9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAO8E,OAAQozB,IAE9B,gBAACj1B,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO8gC,KAAM,CAAEx/B,eAAgB,YAC3C,gBAACsC,EAAA,EAAD,CAAMjG,MAAOqC,GAAO8E,OAAQ4wB,GAC5B,gBAACqL,GAAA,EAAD,CACEr9B,KAAK,kBACLC,KAAM,GACNhG,MACE+3B,GAAa,MAAM/a,KAAK+a,IAAcnsB,OAAOmsB,GAAa,IACtD,CACExyB,UAAW,CACT,CACEC,OAAWuyB,EAAL,QAGVhI,WAAY,GAEd,CAAEA,WAAY,YAQhC,gBAACzqB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO0B,QAASvD,cAAc,YACzC,gBAACyF,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOkhC,OAAQ,CAAEzgC,UAAW,YAA1C,YACYiB,EADZ,QAGA,gBAACkX,GAAA,EAAD,CACEjb,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,QAChCsX,UAAW8tB,EACX3tB,QAAS,WACK,MAARnI,KAAU21B,mBAAqBG,IACjC7uB,EAAS9B,GAAQF,MAAMvE,QAAQxF,QAAQ8E,EAAS21B,oBAChDznB,EAAWia,SAAS,oBAIxB,gBAAC,KAAD,CAAYlxB,QAASA,EAASxE,IAAG,MAAEuN,OAAF,EAAEA,EAAUvN,IAAKC,IAAG,MAAEsN,OAAF,EAAEA,EAAUtN,UA/FzE,gBAAC8F,EAAA,EAAD,CAAMtF,MAAOqC,GAAOohC,QAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqhC,aAApB,uBA9BV,gBAAC,KAAD,CACEtlC,eAAgBiE,GAAOsqB,KACvBzI,WAAS,EACTnkB,OAAQ,CAAC,CAAE2I,IAAK,OAAQlL,OAAQ,IAAKD,MAAO,WAqIlD,IAAM8E,GAASC,IAAWC,OAAO,CAC/BoqB,KAAM,CACJf,SAAU,EACV3rB,aAAc,GACdkkB,aAAc,GACd1D,iBAAkB,GAClBjjB,OAAQ,IACR2C,SAAU,UAEZuiC,KAAM,CACJpuB,KAAM,EACNpR,SAAU,GACVC,MAAO,QACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,EAClBD,gBAAiB,yBAEnByJ,YAAa,CACXtJ,SAAU,GACVi2B,WAAY,GACZh2B,MAAO,QACPQ,eAAgB,WAChBV,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,EAClBD,gBAAiB,yBAEnB2iB,MAAO,CACLviB,MAAO,QACPgS,WAAY,QAEdhO,MAAO,CACLhE,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,uBAEnBgmB,IAAK,CACHrmB,WAAY,SACZiB,eAAgB,eAChBnG,OAAQ,GACRD,MAAO,OACP8F,cAAe,OAEjB8/B,KAAM,CACJ7uB,KAAM,EACNnR,MAAO,QACPE,cAAe,OAEjBkgC,OAAQ,CACNpuB,WAAY,OACZhS,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,sBAEnB0gC,OAAQ,CACN/gC,WAAY,SACZiB,eAAgB,SAChBioB,SAAU,EACV9oB,UAAW,SACXY,UAAW,SACXlG,OAAQ,QAEVkmC,YAAa,CACXvgC,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,sBACjBG,SAAU,IAEZ9C,IAAK,CACHib,UAAW,GACX1X,eAAgB,gBAChBjB,WAAY,SACZW,cAAe,MACf9F,MAAO,QAET6X,OAAQ,CACN/R,cAAe,MACf9F,MAAO,OACPoG,eAAgB,gBAChBjB,WAAY,WACZkpB,SAAU,EACVpuB,OAAQ,IACR6d,UAAW,GACXsQ,cAAe,IAEjB2X,UAAW,CACT/lC,MAAO,IACPC,OAAQ,IACR6F,cAAe,UAEjBU,QAAS,CACPxG,MAAO,IACPC,OAAQ,IACR6F,cAAe,SACfX,WAAY,cCtRD,SAAS48B,KACtB,OACE,gBAAC,KAAD,CACElhC,eAAgB,CACdZ,OAAQ,IACRw5B,SAAU,IACVv0B,kBAAmB,IAErByhB,WAAS,EACTnkB,OAAQ,CAAC,CAAE2I,IAAK,SAAUnL,MAAO,OAAQC,OAAQ,OAAQyC,aAAc,MCQ9D,SAAS0jC,KAAkB,IAAD,cACjCh8B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtC6xB,EAAiBrwB,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQtE,YACvD2G,EAAWV,KACjB,EAAsD9U,YAAe,GAArE,WAAOslC,EAAP,KAA6BC,EAA7B,KACA,EAA+DnmB,KAAvD7Q,EAAR,EAAQA,SAAUqC,EAAlB,EAAkBA,YAAayE,EAA/B,EAA+BA,QAASoP,EAAxC,EAAwCA,QAAS+gB,EAAjD,EAAiDA,UAE3C/oB,EAAa4Y,2BACboQ,EAAYC,0BAElB1lC,aAAgB,WACVylC,GAAS,MAAIl3B,KAAU/G,MACzBiV,EAAWkpB,WAAW,CAAExvB,MAAO5H,EAAS/G,SAEzC,CAACi+B,EAAD,MAAYl3B,OAAZ,EAAYA,EAAU/G,KAAMiV,IAE/Bzc,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAEf,IAAMmc,IAAa,MAACryB,GAAD,SAACA,EAAUyU,UAAV,EAAkBtI,QAChCmmB,IAAkB,MAACtyB,GAAD,SAACA,EAAU9D,eAAV,EAAuBiQ,QAC1C3Q,IAAY,MAACwE,MAAUxE,UACvB67B,EAAkBhF,GAAaC,EAErC7gC,aAAgB,WAAO,IAAD,QACR,MAARuO,KAAU3E,eAAwB,MAAR2E,OAAA,EAAAA,EAAU3E,iBAAV,SAA2BR,EAAM8H,QAAjC,SAA2B,EAAaX,aAAxC,EAA2B,EAAqBC,UAC5EgF,EAAS9B,GAAQC,OAAO9B,gBAAgBtD,EAAS3E,eAGvC,MAAR2E,KAAU5E,iBAA0B,MAAR4E,OAAA,EAAAA,EAAU5E,mBAAV,SAA6BP,EAAM8H,QAAnC,SAA6B,EAAaX,aAA1C,EAA6B,EAAqBgB,SAChFiE,EAAS9B,GAAQC,OAAO9B,gBAAgBtD,EAAS5E,mBAElD,CACD6L,EADC,MAEDjH,OAFC,EAEDA,EAAU3E,aAFT,MAGD2E,OAHC,EAGDA,EAAU5E,eAHT,SAIDP,EAAM8H,QAJL,SAID,EAAaX,aAJZ,EAID,EAAqBgB,OAJpB,SAKDnI,EAAM8H,QALL,SAKD,EAAaX,aALZ,EAKD,EAAqBC,UAGvB,IAAMq1B,EAAgBhlB,GAAe3Y,EAAW49B,YAE1Ctd,EAAaxoB,eACjB,SAAC4M,GACC,OAAI,MAACgE,KAAawf,WASd,MAACxf,KAAayf,cASd,MAACzf,KAAam1B,iBASd,MAACn1B,KAAao1B,iBASd,MAACp1B,KAAa0f,cASd,MAAC1f,KAAa2f,YASlB/a,EAAS9B,GAAQF,MAAM3E,SAASpF,SAAQ,IACxC+L,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,eAAgByH,KAC1D4E,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,OAAQyD,KAC3C,MAXE4I,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,sCACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,6DACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,kCACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,oDACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,iCACTiP,QAAS,aAZNzC,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,oDACTiP,QAAS,eAuDjB,CAACrH,EAAa4E,IAGRxW,EAAU02B,eAAV12B,MAEJinC,EAA+D,IAAvB,UAA3BZ,EAAez1B,QAAsB,IAAM,KAC5Dq2B,EAAYA,EAAYjnC,EAAQA,EAAQ,GAAKinC,EAC7C,IAAMtQ,EAAa/yB,KAAKgzB,MAAM52B,EAAQinC,IAAc,EAC9CpQ,EAAeoQ,EAAYtQ,EAE3BuQ,GAAgB,MAAR33B,GAAA,SAAAA,EAAU23B,YAAV,IAAiB7jB,QAAS,GAClCyT,IAAiB,MAACoQ,KAAOxrB,SAAUrF,EAEnCnE,EAAQsQ,eACd,OACE,gBAAC,GAAD,CAAM/f,MAAO,CAAEsU,KAAM,EAAG7O,gBAAiBgK,EAAMX,OAAOoJ,aACpD,gBAACuP,EAAA,EAAD,CAAa9N,QAAS/F,EAAS8T,eAAa,EAACvkB,MAAOwE,EAAM8H,MAAMX,OAAOgB,SAEvE,gBAAC,GAAD,CAAM9P,MAAOqC,GAAOG,WAChB6xB,GAAmB8P,EAGnB,gBAAC,GAAD,CACEnkC,MAAO,CACLzC,MAAO,OACP+W,KAAM,EACN9W,OAAQ2E,KAAWC,IAAI,UAAU5E,SAGnC,gBAAC,IAAD,CACEknC,oBAAqB,kBAAM,gBAAC,GAAD,OAC3BC,mBAAoB,kBAClB,gBAAC5a,GAAD,CAAWrV,MAAM,wBAAwBsV,SAAS,wBAEpDhqB,MAAO,CACL2iB,WAAY,GACZrO,KAAM,EACN9W,OAAQ2E,KAAWC,IAAI,UAAU5E,OACjCiI,gBAAiBgK,EAAMX,OAAOoJ,YAEhCwB,OAAO,QACP8a,aAAc,WAAW7pB,GAAX,MAAGD,EAAH,EAAGA,KAAH,sBAAqC,MAAJA,GAAA,SAAAA,EAAMqW,WAAN,IAAY5iB,KAAMwM,IACjEjC,IAAG,iBAAmBwrB,EACtBvJ,sBAAuB,CACrBptB,MAAO62B,EACP1wB,UAAW,SACXioB,cAAe,IACflmB,gBAAiBgK,EAAMX,OAAOoJ,YAEhCgc,WAAYA,EACZ/W,KAAMkX,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAKoQ,EACzC9P,eACE,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW,kBAAMqP,EAAU,OAElElP,WAAY,YAA4B,IAAnBhU,EAAkB,EAAxBnW,KAAYD,EAAY,EAAZA,MAGzB,OAAa,IAAToW,EACgC,SAA3B+iB,EAAez1B,QACpB,gBAAC,GAAD,CAAkBzF,IAAG,gBAAkB+B,IAEvC,gBAAC60B,GAAD,CAAkB52B,IAAG,gBAAkB+B,IAGT,SAA3Bm5B,EAAez1B,QACpB,gBAAC,GAAD,CACEwyB,iBAAiB,EACjBj4B,IAAG,QAAUmY,EAAKE,KAAK5iB,GACvBgN,KAAM0V,EAAKE,KACXmU,YAAa,SAACvpB,GACZ,MAAIkV,KAAME,OACRhN,EAAS9B,GAAQF,MAAM3E,SAASpF,QAAQ2D,IACxCoI,EAAS9B,GAAQF,MAAM3E,SAAS1F,SAAS,CAAC,OAAQmZ,EAAKE,UAG3DiU,iBAAkB,SAAC/T,GACjBlN,EAAS9B,GAAQF,MAAM1E,cAAcjI,SACrC2O,EAAS9B,GAAQF,MAAM1E,cAAc3B,aAAauV,IAClDlN,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQmZ,EAAKE,QAC5D/F,EAAWia,SAAS,wBAEtBlO,WAAY,WACVA,EAAWlG,EAAKE,OAElB2f,gBAAiB,WACf3sB,EAAS9B,GAAQF,MAAM1E,cAAcjI,SACrC2O,EAAS9B,GAAQF,MAAM1E,cAAcrF,SAAQ,IAC7C+L,EAAS9B,GAAQF,MAAM1E,cAAc3F,SAAS,CAAC,OAAQmZ,EAAKE,WAIhE,gBAACwe,GAAD,CACE72B,IAAG,QAAUmY,EAAKE,KAAK5iB,GACvBgN,KAAM0V,EAAKE,KACX9L,QAAS,kBAAM+F,EAAWia,SAAS,aAAc,CAAE9pB,KAAM0V,EAAKE,cA1ExE,gBAACme,GAAD,CAAkBC,YAAWC,iBAAgB92B,aAiF9C87B,GAAiBD,GAChB,gBAACvU,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM5G,KAAKnD,SAAQ,KACnD0d,MAAM,cAIZ,gBAAC,GAAD,CAAM1lB,MAAOqC,GAAOkhC,QAClB,gBAACnjB,GAAA,EAAD,CACEC,OAAQ,gBAACqR,GAAA,EAAD,CAAYnR,KAAK,cAActL,QAAS,kBAAM6uB,GAAsB,MAC5EnqB,QAASkqB,EACTjqB,UAAW,kBAAMkqB,GAAsB,KAEvC,gBAAC1jB,GAAA,EAAKU,KAAN,CACEpM,MAAM,sBACNwd,WAAY,CACV/c,WAAuC,UAA3ByuB,EAAez1B,QAAsB,SAAW,QAE9D8G,QAAS,WACPlB,EAAS9B,GAAQP,QAAQtE,SAASiB,gBAAgB,SAClDy1B,GAAsB,MAG1B,gBAAC1jB,GAAA,EAAKU,KAAN,CACEpM,MAAM,qBACNwd,WAAY,CACV/c,WAAuC,SAA3ByuB,EAAez1B,QAAqB,SAAW,QAE7D8G,QAAS,WACPlB,EAAS9B,GAAQP,QAAQtE,SAASiB,gBAAgB,UAClDy1B,GAAsB,QAM9B,gBAAC5B,GAAD,CACE9lB,UAAW,WACTrI,EAAS9B,GAAQF,MAAM5G,KAAKnD,SAAQ,IACpCgb,KAEFhc,KAAM+K,EAAM5G,KAAKnE,KACjB8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM5G,KAAKnD,SAAQ,QAM3D,I,MAAM3F,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN5R,WAAY,SACZiB,eAAgB,UAElB+Q,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET4sB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVmuB,OAAQ,CACN7gC,WAAY,aACZiB,eAAgB,WAChBN,cAAe,MACf+X,QAAS,EACT7d,MAAO,OACPE,SAAU,WACV2C,IAAK,EACLqF,gBAAiB,iBCtSfulB,GAAwBzN,aAAH,0+CAyFZ,SAASqnB,GAAoBtnC,GAA8B,IAAD,sBAC/D8e,EAAc9e,EAAd8e,UACFrI,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1E,iBAC5CuZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAA4CmK,aAAsB2O,IAAlE,WAAOC,EAAP,KAA4BnE,EAA5B,KACM9L,EAAa4Y,2BAEb3W,EAAW1e,eAAkB,WAAO,IAAD,IACnCse,GAAY,EAkBhB,OAjBI,SAAClV,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BhJ,KAChC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,WAAY,wCAIvD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BhJ,KAClC0e,GAAY,EACZ9I,EACE9B,GAAQF,MAAM1E,cAActF,cAAc,CACxC,aACA,iDAKE8U,IACP,CAAC9I,EAAD,SAAWpM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BhJ,GAAxC,SAA4CwJ,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BhJ,KAExE4oB,EAAaxoB,eAAkB,4DAAAG,EAAAC,OAAA,mDAC9Bse,IAD8B,4EAAAve,EAAA,MAKZusB,EAAoB,CACvCtO,UAAW,CACTqK,WAAYpb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BhJ,IAChDgpB,aAAcvb,OAAM,SAACjE,EAAMV,OAAOoE,WAAWlE,YAAzB,EAAC,EAA+BhJ,IACpD8oB,SAAQ,SAAEtf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4B7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,MAC7D+oB,OAAQtb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBhJ,IACxCitB,UAAS,SAAEzjB,EAAMV,OAAOwE,MAAMtE,YAArB,EAAE,EAA0B7I,KAAI,SAAC+sB,GAAD,OACvCC,gBAAKD,EAAiB,CAAC,eAZI,UAK3BnO,EAL2B,OAiBjC,SAAAA,EAAOC,OAAP,WAAakK,aAAb,WAAyBjK,cAAzB,EAAsC9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QAClD,OAAQO,GACN,IAAK,YACH,OAAOiM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,WAAYR,KACzE,IAAK,OACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,OAAQR,KACrE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,SAAUR,KACvE,IAAK,cACH,OAAOwM,EAAS9B,GAAQF,MAAM1E,cAActF,cAAc,CAAC,aAAcR,KAC3E,QACE,OAAO,SA9BoB,MAiC7B2V,GAjC6B,SAiC7BA,EAAQC,OAjCqB,SAiC7B,EAAcoO,cAjCe,SAiC7B,EAA2BlO,UAA3B,EAAmCpE,OAjCN,wBAkC/BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcoO,kBAAhB,EAAE,EAA2BlO,OAAO,GAC3C7G,QAAS,WArCkB,2BA0C7B,SAAC0G,EAAOC,OAAR,SAAC,EAAaoO,cAAd,SAAC,EAA0BnO,cAA1B,EAAuCnE,SACjC,MAATmD,OACApB,EAAWia,SAAS,WAAY,CAAE4P,OAAQ,oBA5CX,kDA+CjC9wB,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WAlDoB,mEAsDlC,CACDzC,EACAkX,EACAjQ,EACAoB,EAJC,SAKDzU,EAAMV,OAAOiE,aALZ,EAKD,EAAqB/D,MALpB,SAMDQ,EAAMV,OAAOgE,SAAS9D,YANrB,EAMD,EAA6BhJ,GAN5B,SAODwJ,EAAMV,OAAOkE,KAAKhE,YAPjB,EAOD,EAAyBhJ,GAPxB,SAQDwJ,EAAMV,OAAOoE,WAAWlE,YARvB,EAQD,EAA+BhJ,GAC/BwJ,EAAMV,OAAOwE,MAAMtE,MACnB8V,IAGF,OACE,gBAACwa,GAAD,KACE,gBAAChQ,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASmN,EAAalT,QACtBzQ,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAElC,gBAAC4Y,GAAA,EAAKf,MAAN,CAEEjT,MAAK,mBAAc/M,GAAd,SAAcA,EAAOV,SAArB,SAAc,EAAewE,QAA7B,SAAc,EAAsBtE,YAApC,EAAc,EAA6B8R,QAA3C,+BAAsEtR,EAAMV,OAAOkE,OAAnF,SAAsE,EAAmBhE,YAAzF,EAAsE,EAA0B2qB,cAEvG,gBAAC,GAAD,MACA,gBAACjd,EAAA,EAAD,CACEG,KAAK,YACLhV,MAAO,CAAEzC,MAAO,OAAQ6mB,eAAgB,IACxCnP,QAAS,kBAAM8R,KACfnT,QAASkT,EAAalT,SAJxB,SCxMN,IAAMuN,GAAuB5D,aAAH,udA0BX,SAASunB,KAAiC,IAAD,YAChD5yB,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvC9E,EAAWmG,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQtE,YACjD2G,EAAWV,KAEjB,EAA0ByK,aAAgBqD,GAAsB,CAC9DxE,UAAW,CACTiB,WAAYhS,OAAOsG,EAAO7C,mBAC1Bgb,OAAQjd,EAASM,cAHbyP,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAORoH,EAAa4Y,2BAEboQ,EAAYC,0BAOlB,OANA1lC,aAAgB,WACV6O,EAASK,iBACXsG,EAAS9B,GAAQP,QAAQtE,SAASQ,kBAAiB,MAEpD,CAACmG,EAAUiwB,EAAW52B,EAASK,kBAGhC,gCACE,gBAACga,EAAA,EAAD,CAAaC,eAAa,EAACvkB,MAAO+O,EAAOzC,MAAMX,OAAOgB,OAAQ6J,QAAS/F,IACvE,gBAAC6jB,GAAD,CAAkB9M,sBAAuB,CAAEloB,kBAAmB,MAC3D,MAAC0a,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgB6T,gBAAjB,SAAC,EAA+BC,QAA/B,EAAsC3H,SACtC,gBAAC8Q,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,KAFzC,MAKG7M,GALH,SAKGA,EAAMrQ,WALT,SAKG,EAAgB6T,gBALnB,SAKG,EAA+BC,YALlC,EAKG,EAAsCtiB,KAAI,SAACuiB,GAAD,qBACzC,gCACE,gBAAC,KAAKC,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,QAChBmL,IAAG,eAAUmY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAY5iB,IACzBuW,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKpG,KACxB6kB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAYlY,WAAd,EAAE,EAAkB9C,KAC/BzF,KAAM,4BACJ,MAACugB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAY5U,OAAZ,EAAkBsC,MAGjB,gBAAC,KAAOma,MAAR,CACEhU,OAAQ,CAAEU,IAAG,MAAEuL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKsC,OAChCzO,MAAO,CAAE0D,UAAW,SAAU+c,iBAAkB,IAChDza,KAAM,KALR,gBAAC,KAAK2f,KAAN,CAAWpF,KAAK,aASpByB,MAAO,0BACL,gBAAC6I,GAAA,EAASka,QAAV,CACEjmC,OACE,SAAAsO,EAASc,gBAAT,EAAwB5P,KAAI,qBAAGH,MAAashB,UAAa,MAAJoB,GAAA,SAAAA,EAAME,WAAN,IAAY5iB,KAAM,IACnE,UACA,eAIV8W,QAAS,0BACPlB,EACE9B,GAAQP,QAAQtE,SAASgB,YACvB,SAAAhB,EAASc,gBAAT,EAAwBpC,MAAK,2BAAG3N,KAAW,UAAQ0iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAY5iB,OAA/D,SACIiP,EAASc,oBADb,EACI,EAAwByW,QAAO,2BAAGxmB,KAAW,UAAQ0iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAY5iB,OADrE,eAEQiP,EAASc,eAFjB,OAEgC2S,OAFhC,EAEgCA,EAAME,YAK9C,gBAACuF,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,QAAUmL,IAAG,kBAAamY,GAAb,SAAaA,EAAME,WAAnB,EAAa,EAAY5iB,WAIrE,gBAACyxB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLjG,QAASvM,EAASc,cAAc+K,OAAS,EACzCsH,KAAK,QACLtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1E,cAAcrB,iBAAiBoB,EAASc,gBAC/D8M,EAAWgqB,UAAU,CAAE9U,QAAQ,IAC/Bnc,EAAS9B,GAAQP,QAAQtE,SAASQ,kBAAiB,IACnDmG,EAAS9B,GAAQP,QAAQtE,SAASgB,YAAY,KAC9C4M,EAAWia,SAAS,wBAEtBvP,MAAM,UAMd,I,GAAMrjB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAER6V,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVV,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,S,gDCnII,SAAS0nC,GAAW3nC,GACjC,IAAQwX,EAAyCxX,EAAzCwX,SAAU4Q,EAA+BpoB,EAA/BooB,MAAOwf,EAAwB5nC,EAAxB4nC,UAAWlN,EAAa16B,EAAb06B,SACpC,EAAwBz5B,YAAe,GAAvC,WAAOyI,EAAP,KAAagB,EAAb,KAEA,OACE,gCACE,gBAACoY,GAAA,EAAD,CACExG,UAAW,kBAAM5R,GAAQ,IACzB2R,QAAS3S,EACTqZ,OACE,gBAAC,KAAKS,KAAN,CACE7L,QAAS,kBAAMjN,GAAQ,IACvB8M,WAAYA,EACZJ,MAAOgR,EACPkF,YAAasa,EAAY7B,aAAmB,IAAZ6B,EAAkB,cAAgB,mBAClE5kC,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,iBAIhC,gBAAC,KAAD,CACE4kB,aAAcD,EAAY,CAAC,IAAIjnB,KAAiB,IAAZinB,IAAqB,GACzDE,WAAY,SAAC1C,GACX1K,EAAS0K,EAAKxkB,UAAY,KAC1BlW,GAAQ,QCrBpB,I,GAAMq9B,GAAc9nB,aAAH,2LAYF,SAAS+nB,GAAWhoC,GAAqB,IAAD,QAC7CwiB,EAAwCxiB,EAAxCwiB,SAAUhL,EAA8BxX,EAA9BwX,SAAUyR,EAAoBjpB,EAApBipB,SAAUpf,EAAU7J,EAAV6J,MACtC,EAAkC5I,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACQ7Q,EAAsBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD7C,kBACA8N,EAASW,aAAgBunB,GAAa,CAC5C1oB,UAAW,CACTiB,WAAYhS,OAAOyD,MAFf8N,KAKR,OACE,gCACE,gBAAC,KAAK0H,UAAN,CAAgB7kB,MAAO,CAAE2C,YAAa,IAAtC,gBACA,gBAACyd,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,SAAU7E,GAAYmL,EACtBI,OACE,gBAAC,KAAKS,KAAN,CACExgB,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,UAC5BtL,QACEH,OACI5U,EACA,WACEggB,GAAY,IAGpBxL,OAAY,MAALvN,GAAA,SAAAA,EAAOpB,OAAP,WAAamV,QAAQ,IAAK,WAA1B,IAAgCqqB,gBAAiB,eACxD3a,YAAcrE,EAAwB,KAAb,cAd/B,MAkBGpJ,GAlBH,SAkBGA,EAAMrQ,WAlBT,SAkBG,EAAgB04B,YAlBnB,EAkBG,EAAuBlnC,KAAI,SAACuK,GAAD,aAC1B,gBAACuX,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZJ,EAASjX,IAEX6L,OAAO,SAAA7L,EAAK9C,WAAL,IAAWmV,QAAQ,IAAK,KAAKqqB,gBAAiB,WCpDlD,SAASE,KACtB,IAAM99B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzG,gBAC5CyI,EAAWV,KACXqyB,EAAgBtmB,GAAe3Y,EAAWk/B,iBAEhD,OACE,gCACE,gBAACL,GAAD,CACEn+B,MAAOQ,EAAMV,OAAO4B,KAAK1B,MACzB2Y,SAAU,SAAC8lB,GAAD,OAAa7xB,EAAS9B,GAAQF,MAAMzG,aAAa5D,SAAS,CAAC,OAAQk+B,MAC7E9wB,UAAW4wB,EACXnf,UAAQ,IAEV,gBAACN,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO4B,KAAKzB,MAAQ,QAAU,QACnDO,EAAMV,OAAO4B,KAAKzB,OAGrB,gBAAC,KAAKyd,UAAN,CAAgB7kB,MAAO,CAAE2C,YAAa,IAAtC,aACA,gBAACsiC,GAAD,CACEC,UAAWv9B,EAAMV,OAAO6B,UAAU3B,QAAS,IAAI8W,MAAOC,UAAY,IAClE8Z,SAAU,SAAC6N,GAAD,OAAU9xB,EAAS9B,GAAQF,MAAMzG,aAAa5D,SAAS,CAAC,YAAam+B,MAC/EngB,MAAM,uBAER,gBAACO,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO6B,UAAU1B,MAAQ,QAAU,QACxDO,EAAMV,OAAO6B,UAAU1B,Q,qkBCrBhC,IAAM0+B,GAA8BvoB,aAAH,ohBA4BlB,SAASwoB,GAAmBzoC,GAA6B,IAAD,MAC7D0J,EAAS1J,EAAT0J,KACF+M,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzG,gBAC5Csb,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAAiDmK,aAC/CypB,IADF,WAAOE,EAAP,KAAmCC,EAAnC,KAIMhpB,EAAW1e,eAAkB,WACjC,IAAIse,GAAY,EAgBhB,OAdKlV,EAAMV,OAAO4B,KAAK1B,QACrB0V,GAAY,EACZ9I,EACE9B,GAAQF,MAAMzG,aAAavD,cAAc,CAAC,OAAQ,qCAIjDJ,EAAMV,OAAO6B,UAAU3B,QAC1B0V,GAAY,EACZ9I,EACE9B,GAAQF,MAAMzG,aAAavD,cAAc,CAAC,YAAa,qCAInD8U,IACP,CAAC9I,EAAUpM,EAAMV,OAAO6B,UAAU3B,MAAOQ,EAAMV,OAAO4B,KAAK1B,QAExDm7B,EAAS/jC,eAAkB,4CAAAG,EAAAC,OAAA,mDAC1Bse,IAD0B,4EAAAve,EAAA,MAKNsnC,EAA2B,CAChDrpB,UAAU,SACJ,SAAAhV,EAAMZ,WAAN,EAAgB5I,GAAK,CAAEA,GAAE,SAAEwJ,EAAMZ,eAAR,EAAE,EAAgB5I,IAAO,IAD/C,IAEP+nC,WAAYt6B,OAAM,SAACjE,EAAMV,OAAO4B,KAAK1B,YAAnB,EAAC,EAAyBhJ,IAC5C2K,UAAWnB,EAAMV,OAAO6B,UAAU3B,MAClCigB,eAAgBxb,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,SAVd,UAKvBiY,EALuB,OAevB,OAFA8G,EAbuB,SAad9G,EAAS+G,WAbK,EAad,EAAegpB,qBAE9B,SAAAjpB,EAAQE,cAAR,EAAqB9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACjC,OAAQO,GACN,IAAK,YACH,OAAOiM,EAAS9B,GAAQF,MAAMzG,aAAavD,cAAc,CAAC,OAAQR,KACpE,IAAK,aACH,OAAOwM,EAAS9B,GAAQF,MAAMzG,aAAavD,cAAc,CAAC,YAAaR,KACzE,QACE,OAAO,SAtBgB,MAyBzB2V,GAzByB,SAyBzBA,EAAQG,UAAR,EAAgBpE,OAzBS,wBA0B3BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,OAAF,EAAEA,EAAQG,OAAO,GACxB7G,QAAS,WA7Bc,2BAkCzB,MAAC0G,GAAD,SAACA,EAAQE,cAAR,EAAqBnE,QAAtB,MAAgCiE,MAAQ5R,aAG1C7L,QAAQ2H,MAAR,MAAc8V,OAAd,EAAcA,EAAQE,aAFtB9f,EAAM8e,UAAUc,EAAO5R,cAnCI,kDAwC7ByI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WA3CgB,mEA+C9B,CACDzC,EACAiyB,EACA1oC,EACAqK,EAAMV,OAAO6B,UAAU3B,MAJtB,SAKDQ,EAAMV,OAAO4B,KAAK1B,YALjB,EAKD,EAAyBhJ,GALxB,SAMDwJ,EAAMZ,eANL,EAMD,EAAgB5I,GAChB8e,IAGF,OACE,gBAACqK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,GACjB,gBAACygB,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASssB,EAAWryB,QACpBzQ,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAElC,gBAACyX,GAAA,EAAOI,MAAR,MAAuB,MAALhgB,GAAA,SAAAA,EAAOZ,WAAP,EAAiB5I,GAAK,OAAS,OAAjD,kBACA,gBAACopB,GAAA,EAAOsB,QAAR,KACE,gBAAC4c,GAAD,OAEF,gBAACle,GAAA,EAAOM,QAAR,CAAgB7nB,MAAO,CAAE2D,eAAgB,aACvC,gBAACkR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAMzG,aAAalG,SACpC9H,EAAMwqB,YAHV,UASA,gBAACjT,EAAA,EAAD,CAAQI,QAASqtB,GAAjB,WC9IK,SAAS8D,KAAe,IAAD,QAC9Bz+B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMhF,WAC5CgH,EAAWV,KAEXgzB,GAAiB,SAAA1+B,EAAMZ,eAAN,IAAgBgG,UAAW,EAC5C7F,EAASS,EAAMV,OAAOC,OAAOC,OAAS,EAEtCm/B,EACJ3+B,EAAMV,OAAOI,gBAAgBF,QAAUP,EAAgBU,QACnDJ,EAASm/B,EACTn/B,EAASm/B,EACf,OACE,gCACE,gBAACvkB,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,UACNte,QAASO,EAAMV,OAAOM,QAAQH,MAC9BD,OAAO,SAAAQ,EAAMV,OAAOM,QAAQJ,YAArB,IAA4Bsf,aAAc,GACjD/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMhF,QAAQrF,SAAS,CAAC,UAAW8e,QAGxD,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOM,QAAQH,MAAQ,QAAU,QACtDO,EAAMV,OAAOM,QAAQH,OAAS,IAEO,YAAvCO,EAAMV,OAAOI,gBAAgBF,MAC5B,gBAAC7B,EAAA,EAAD,KACE,gBAACkc,GAAD,CACEkE,MAAM,aACNte,QAASO,EAAMV,OAAOC,OAAOE,MAC7BD,MAAOQ,EAAMV,OAAOC,OAAOC,MAC3Bua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMhF,QAAQrF,SAAS,CAAC,SAAU8e,QAGvD,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOC,OAAOE,MAAQ,QAAU,QACrDO,EAAMV,OAAOC,OAAOE,OAAS,IAEhC,gBAACkf,GAAA,EAAD,MAEA,gBAACya,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,wBACA,gBAACoZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA6B,SAAAr5B,EAAMZ,eAAN,IAAgBgG,UAAW,KAE1D,gBAACg0B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,gBACA,gBAACoZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA8Br5B,EAAMV,OAAOC,OAAOC,OAAS,KAE7D,gBAAC45B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,KACE,gBAAC1hB,EAAA,EAAD,CAAMjG,MAAO,CAAEmV,WAAY,SAA3B,cAEF,gBAAC4rB,GAAA,EAAUI,KAAX,CAAgBH,SAAO,IAAKsF,EAAW,EAAI,IAAM,IAAjD,KACEA,EAAW,GAAgB,EAAZA,EAAgBA,OAMvC,gBAAChhC,EAAA,EAAD,KACE,gBAACkc,GAAD,CACEkE,MAAM,kBACNte,QAASO,EAAMV,OAAOC,OAAOE,MAC7BD,MAAOQ,EAAMV,OAAOC,OAAOC,MAC3Bua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMhF,QAAQrF,SAAS,CAAC,SAAU8e,QAGvD,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOC,OAAOE,MAAQ,QAAU,QACrDO,EAAMV,OAAOC,OAAOE,OAAS,IAGhC,gBAACkf,GAAA,EAAD,MAEA,gBAACya,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,wBACA,gBAACoZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA6B,SAAAr5B,EAAMZ,eAAN,IAAgBgG,UAAW,KAE1D,gBAACg0B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,iBACA,gBAACoZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA8Br5B,EAAMV,OAAOC,OAAOC,OAAS,KAE7D,gBAAC45B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUpZ,MAAX,KACE,gBAAC1hB,EAAA,EAAD,CAAMjG,MAAO,CAAEmV,WAAY,SAA3B,cAEF,gBAAC4rB,GAAA,EAAUI,KAAX,CAAgBH,SAAO,IAAKsF,EAAW,EAAI,IAAM,IAAjD,KACEA,EAAW,GAAgB,EAAZA,EAAgBA,QAU/C,I,MAAMjkC,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,GAERxM,MAAO,CACLqc,aAAc,KCnGZoiB,GAA8BhpB,aAAH,q0BAgDlB,SAASwoB,GAAmBzoC,GAA6B,IAAD,EAC7D0J,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QACR/T,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMhF,WAC5C6Z,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAAgDmK,aAC9CkqB,IADF,WAAOC,EAAP,KAAkCP,EAAlC,KAIMhpB,EAAW1e,eAAkB,WACjC,IAAIse,GAAY,EAMhB,OALKlV,EAAMV,OAAOC,OAAOC,QACvB0V,GAAY,EACZ9I,EAAS9B,GAAQF,MAAMhF,QAAQhF,cAAc,CAAC,SAAU,kCAGlD8U,IACP,CAAC9I,EAAUpM,EAAMV,OAAOC,OAAOC,QAE5Bm7B,EAAS/jC,eAAkB,0CAAAG,EAAAC,OAAA,mDAC1Bse,IAD0B,4EAAAve,EAAA,MAKN8nC,EAA0B,CAC/C7pB,UAAW,CACTzV,OAAQS,EAAMV,OAAOC,OAAOC,MAC5BI,QAASI,EAAMV,OAAOM,QAAQJ,MAC9BrI,OAAQ6I,EAAMV,OAAOnI,OAAOqI,MAC5BigB,eAAgBxb,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,QAVd,UAKvBiY,EALuB,OAevB,OAFA8G,EAAS,SAAAvV,EAAMZ,WAAN,EAAgB5I,GAAhB,SAAqBiY,EAAS+G,WAA9B,EAAqB,EAAespB,UAApC,SAAgDrwB,EAAS+G,WAAzD,EAAgD,EAAeupB,YAE9E,SAAAxpB,EAAQE,cAAR,EAAqB9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACjC,OAAQO,GACN,IAAK,SACH,OAAOiM,EAAS9B,GAAQF,MAAMhF,QAAQhF,cAAc,CAAC,SAAUR,KACjE,IAAK,UACH,OAAOwM,EAAS9B,GAAQF,MAAMhF,QAAQhF,cAAc,CAAC,UAAWR,KAClE,IAAK,SACH,OAAOwM,EAAS9B,GAAQF,MAAMhF,QAAQhF,cAAc,CAAC,SAAUR,KACjE,QACE,OAAO,SAxBgB,MA2BzB2V,GA3ByB,SA2BzBA,EAAQG,UAAR,EAAgBpE,OA3BS,wBA4B3BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,OAAF,EAAEA,EAAQG,OAAO,GACxB7G,QAAS,WA/Bc,2BAoCzB,MAAC0G,GAAD,SAACA,EAAQE,cAAR,EAAqBnE,SACxBlF,EAAS9B,GAAQF,MAAMhF,QAAQ3H,SAC/B9H,EAAM8e,aAtCqB,kDAyC7BrI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WA5CgB,mEAgD9B,CACDzC,EACAyyB,EACAlpC,EACAqK,EAAMV,OAAOC,OAAOC,MACpBQ,EAAMV,OAAOM,QAAQJ,MACrBQ,EAAMV,OAAOnI,OAAOqI,MANnB,SAODQ,EAAMZ,eAPL,EAOD,EAAgB5I,GAChB8e,IAGF,OACE,gBAACqK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,GACjB,gBAACygB,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASssB,EAAWryB,QACpBzQ,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAElC,gBAACs2B,GAAD,MACA,gBAAC7e,GAAA,EAAOM,QAAR,CAAgB7nB,MAAO,CAAE2D,eAAgB,aACvC,gBAACkR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAMhF,QAAQ3H,SAC/B0iB,MAHJ,UASA,gBAACjT,EAAA,EAAD,CAAQI,QAASqtB,GAAjB,WC1JV,I,GA+DexmB,MA/DayB,aAAH,2nCA+DsD,CAC7EvB,WAAY,SAACkB,GAAD,OAAYA,EAAOwpB,WAC/BzqB,cAAe,GACfL,UAAW,CACT3R,KAAM,CAACsR,GAAW,6BAClBrR,MAAO,CAACqR,GAAW,sBACnBpR,OAAQ,CAACoR,GAAW,8BACpBlR,WAAY,CACVkR,GAAW,2BACXI,GAAU,uCAEZvR,gBAAiB,CAACmR,GAAW,iDCNlBO,MApEayB,aAAH,+uCAoEuE,CAC9FvB,WAAY,SAACkB,GAAD,OAAYA,EAAOupB,WAC/BxqB,cAAe,KC5DF,SAAS0qB,GAAQrpC,GAAkB,IAAD,IACvCspC,EAAmBtpC,EAAnBspC,eACFj/B,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAC5C2I,EAAWV,KAEXwzB,EAAgBznB,GAAe3Y,EAAWqgC,WAEhD,OACE,gBAACxhC,EAAA,EAAD,KACE,gBAACwc,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,OAAQ8e,QAE3E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,0CAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAOQ,EAAMV,OAAOgD,KAAK9C,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,OAAQ8e,QAE3E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgD,KAAK7C,MAAQ,QAAU,QACnDO,EAAMV,OAAOgD,KAAK7C,OAAS,uBAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOiD,MAAM9C,MAC5BD,MAAOQ,EAAMV,OAAOiD,MAAM/C,OAAS,GACnCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,QAAS8e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOiD,MAAM9C,MAAQ,QAAU,QACpDO,EAAMV,OAAOiD,MAAM9C,OAAS,YAG/B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,SACNte,QAASO,EAAMV,OAAOkD,OAAO/C,MAC7BD,MAAOQ,EAAMV,OAAOkD,OAAOhD,OAAS,GACpCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,SAAU8e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOkD,OAAO/C,MAAQ,QAAU,QACrDO,EAAMV,OAAOkD,OAAO/C,OAAS,IAGhC,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,sBACNte,QAASO,EAAMV,OAAOoD,WAAWjD,MACjCD,OAAO,SAAAQ,EAAMV,OAAOoD,WAAWlD,YAAxB,IAA+Bsf,aAAc,GACpD1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,aAAckE,OAAO4a,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOoD,WAAWjD,MAAQ,QAAU,QACzDO,EAAMV,OAAOoD,WAAWjD,OAAS,+BAGlCw/B,EACA,gBAAC,GAAD,CACEzjB,MAAO,CAAC,UAAW,QAAS,UAC5BI,gBAAiB,SAAC7Y,GAAD,OAAUA,GAC3B4Y,WAAY,SAAC5Y,GAAD,OAAYm8B,GAAyB,UAATn8B,GACxC0Y,SAAU,EAAC,SAAAzb,EAAMV,OAAOqD,cAAb,IAAsBnD,QAAS,SAC1Cqc,iBAAkB,gBAAElZ,EAAF,mBAChByJ,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,UAAW4C,QAPnC,KAWnB,gBAAC26B,GAAD,CACEC,UAAWv9B,EAAMV,OAAOmD,gBAAgBjD,QAAS,IAAI8W,MAAOC,UAAY,IACxE8Z,SAAU,SAAC6N,GAAD,OAAU9xB,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,kBAAmBm+B,MAC5EngB,MAAM,+BAER,gBAACO,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOmD,gBAAgBhD,MAAQ,QAAU,QAC9DO,EAAMV,OAAOmD,gBAAgBhD,OAAS,KAM/C,I,GAAM/E,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,GAERxM,MAAO,CACLqc,aAAc,KClGH,SAAS4iB,GAAUzpC,GAAoB,IAAD,IAC3C0J,EAAiD1J,EAAjD0J,KAAM4W,EAA2CtgB,EAA3CsgB,WAAYkK,EAA+BxqB,EAA/BwqB,QAAS1L,EAAsB9e,EAAtB8e,UAAWkC,EAAWhhB,EAAXghB,OACxCvK,EAAWV,KACX1L,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAE5Cq7B,EAAYO,GAAqB,CACrC5qB,UAAU,SAAD,oGAAC,EAAC,SAACvU,GAAD,OAAayV,uBAAsB,kBAAMlB,UAEpDD,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAACD,EAA0BP,MACtEyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAE9DkwB,EAAYO,GAAqB,CACrC7qB,UAAU,SAAD,oGAAC,EAAC,SAACvU,GAAD,OAAayV,uBAAsB,kBAAMlB,UACpDD,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAACD,EAA0BP,MACtEyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAG9D0N,EAAYuiB,EAAU7yB,SAAW8yB,EAAU9yB,QAE3C0uB,EAAS/jC,eAAkB,4BAAAG,EAAAC,OAAA,4DAC3BgJ,EAAMZ,YAAN,EAAgB5I,GADW,kCAAAO,EAAA,MAEvB+nC,EAAUnqB,OAAO,CACrBne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3B4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB8C,KAAMtC,EAAMV,OAAOgD,KAAK9C,MACxB+C,MAAOvC,EAAMV,OAAOiD,MAAM/C,MAC1BgD,OAAQxC,EAAMV,OAAOkD,OAAOhD,MAC5BkD,WAAY1C,EAAMV,OAAOoD,WAAWlD,MACpCmD,QAAS3C,EAAMV,OAAOqD,QAAQnD,MAC9BiD,gBAAiBzC,EAAMV,OAAOmD,gBAAgBjD,MAC9CmX,OAAQA,EAAS1S,OAAO0S,GAAU,KAClCV,WAAYA,EAAahS,OAAOgS,GAAc,QAZnB,+CAAAlf,EAAA,MAevBgoC,EAAUpqB,OAAO,CACrBvW,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB8C,KAAMtC,EAAMV,OAAOgD,KAAK9C,MACxB+C,MAAOvC,EAAMV,OAAOiD,MAAM/C,MAC1BgD,OAAQxC,EAAMV,OAAOkD,OAAOhD,MAC5BkD,WAAY1C,EAAMV,OAAOoD,WAAWlD,MACpCmD,QAAS3C,EAAMV,OAAOqD,QAAQnD,MAC9BiD,gBAAiBzC,EAAMV,OAAOmD,gBAAgBjD,MAC9CmX,OAAQA,EAAS1S,OAAO0S,GAAU,KAClCV,WAAYA,EAAahS,OAAOgS,GAAc,QAxBnB,8DA2B9B,CACD8oB,EACA9oB,EACAjW,EAAMV,OAAOoD,WAAWlD,MACxBQ,EAAMV,OAAOgD,KAAK9C,MAClBQ,EAAMV,OAAOiD,MAAM/C,MACnBQ,EAAMV,OAAOmD,gBAAgBjD,MAC7BQ,EAAMV,OAAOqD,QAAQnD,MACrBQ,EAAMV,OAAOlB,KAAKoB,MAClBQ,EAAMV,OAAOkD,OAAOhD,MATnB,SAUDQ,EAAMZ,eAVL,EAUD,EAAgB5I,GAChBsoC,EACAnoB,IAGI+jB,EAAa9jC,WAAc,iBAAM,CAAC,OAAM,IACxC2oC,EAAgB3oC,eAAkB,WACtC+e,uBAAsB,WACpBwK,IACA/T,EAAS9B,GAAQF,MAAM3G,IAAIhG,cAE5B,CAAC2O,EAAU+T,IAEd,OACE,gBAACga,GAAD,CACEptB,MAAO,SAAA/M,EAAMZ,WAAN,EAAgB5I,GAAK,WAAa,UACzC6I,KAAMA,EACNq7B,WAAYA,EACZva,QAASof,EACTlF,aAAcM,EACdP,YAAY,OACZnuB,QAASsQ,GAET,gBAACyiB,GAAD,CAASC,iBAAkBhpB,KCtFjC,I,GAAMupB,GAAiB5pB,aAAH,uMAcL,SAAS6pB,GAAkB9pC,GACxC,IAAQ+pC,EAAkC/pC,EAAlC+pC,aAAcvnB,EAAoBxiB,EAApBwiB,SAAU3Y,EAAU7J,EAAV6J,MACxBgW,EAASW,aAAgBqpB,GAAgB,CAC/CxqB,UAAW,CACT0qB,kBAFIlqB,KAKR,OACE,gCACE,gBAAC,KAAK0H,UAAN,gBACA,gBAAC,GAAD,CACEpB,iBAAe,EACflD,KAAK,iBACL4C,OAAW,MAAJhG,OAAA,EAAAA,EAAMmqB,WAAY,GACzBlkB,SAAU,CAACjc,GAAOwd,OAAOC,SACzBvB,WAAY,SAAC3Y,GAAD,OAAUA,EAAKvM,MAAL,MAAYgJ,OAAZ,EAAYA,EAAOhJ,KACzColB,gBAAiB,SAAC5Z,GAAD,aAAaA,OAAb,EAAaA,EAAS5D,MACvCud,WAAY,kBAAM,GAClBE,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SCjClE,IAAMwiB,GAAoBhqB,aAAH,mGASR,SAASiqB,GAAiBlqC,GAA2B,IAAD,EACzD6J,EAAoB7J,EAApB6J,MAAO2Y,EAAaxiB,EAAbwiB,SACf,EAAkCvhB,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KAEQ/C,EAASW,aAAgBypB,IAAzBpqB,KAQR,OANA5e,aAAgB,WAAO,IAAD,EACc,KAA1B,MAAJ4e,GAAA,SAAAA,EAAMsqB,kBAAN,IAAmBxuB,SAAiB9R,GACtC2Y,EAAS3C,EAAKsqB,YAAY,MAE3B,OAACtqB,OAAD,EAACA,EAAMsqB,YAAa3nB,EAAU3Y,IAG/B,gCACE,gBAAC,KAAK0d,UAAN,mBACA,gBAACzE,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAAC,IAAD,CACEpL,QAAS,WACPiL,GAAY,KAGd,gBAAC4B,GAAA,EAAD,CACE9M,KAAK,WACLF,UAAQ,EACR9U,MAAO,CAAEw4B,SAAU,KACnBrxB,OAAY,MAALA,OAAA,EAAAA,EAAOpB,OAAQ,+BAb9B,MAkBGoX,GAlBH,SAkBGA,EAAMsqB,kBAlBT,EAkBG,EAAmBnpC,KAAI,SAAC2J,GAAD,OACtB,gBAACmY,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZJ,EAAS7X,IAEXyM,MAAOzM,EAAWlC,MAAQ,IAC1B2C,IAAG,qBAAuBT,EAAW9J,UCrDlC,SAASgrB,KAAY,IAAD,gDAC3BxhB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5F,QAC5C4H,EAAWV,KAoBjB,OAlBA9U,aAAgB,WACO,IAAD,EAAhBoJ,EAAMZ,WACHY,EAAMV,OAAOuC,WAAWrC,OAC3B4M,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,aAAcC,EAAMZ,SAASyC,YAAc,SAG9E7B,EAAMV,OAAOsF,KAAKpF,OAAnB,SAA4BQ,EAAMZ,WAAN,EAAgB5I,IAC9C4V,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,OAAQC,EAAMZ,SAASwF,WAGhE,CACDwH,EACApM,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOsF,KAAKpF,MAClBQ,EAAMZ,SAJL,SAKDY,EAAMZ,eALL,EAKD,EAAgB5I,KAIhB,gCACE,gBAAC2jB,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,OAAO,SAAAQ,EAAMV,OAAOlB,OAAb,WAAmBoB,YAAnB,IAA0Bsf,aAAc,GAC/C/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,OAAQ8e,QAG5E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,KAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOwC,QAAb,WAAoBtC,YAApB,IAA2Bsf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,QAAS8e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOwC,MAAMrC,MAAQ,QAAU,QACpDO,EAAMV,OAAOwC,MAAMrC,OAAS,KAG/B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOyC,MAAMtC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOyC,QAAb,WAAoBvC,YAApB,IAA2Bsf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,QAAS8e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOyC,MAAMtC,MAAQ,QAAU,QACpDO,EAAMV,OAAOyC,MAAMtC,OAAS,IAG/B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,cACNte,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,OAAO,SAAAQ,EAAMV,OAAOuC,aAAb,WAAyBrC,YAAzB,IAAgCsf,aAAc,GACrD1E,aAAa,0BACbC,MAAO,kBAAM,gBAACF,GAAA,EAAUG,MAAX,CAAiBhK,KAAK,QACnCyJ,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,aAAc8e,QAGlF,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAACkf,GAAA,EAAD,MAEA,gBAAChhB,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAACiqC,GAAD,CACErgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrE2Y,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM5F,KAAKvC,cAAczC,OAGjE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,MAGtB,MAALO,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,MAAiDwJ,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BhJ,MAC3E,gCACE,gBAACipC,GAAD,CACEjgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BkgC,aAAcz7B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,SAAiDwJ,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBhJ,KAE5E2hB,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,UAAWP,QAExE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,OAS7C,I,GAAM/E,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,EACN/W,MAAO,OACPolB,WAAY,IAEd7a,MAAO,CACLqc,aAAc,EACd5mB,MAAO,QAET8oB,aAAc,CACZlC,aAAc,K,qkBC1HX,IAAMujB,GAAsBnqB,aAAH,iwHAqLjB,SAASoqB,GAAgBxpC,GAAc,IAAD,oBAC7Cyf,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAClDD,EAAkBuO,KAElBrS,EAAewS,aAAkC4pB,GAAqB,CAC1E/qB,UAAW,CACTiB,aACAwJ,eAAgBjpB,GAAMyN,OAAM,MAACwD,GAAD,SAACA,EAAiB+N,OAAlB,SAAC,EAAuBrQ,WAAxB,SAAC,EAAiCqC,kBAAlC,EAAC,EAA8ChR,KAE7EggB,YAAa,sBAGf,OAAO,SACF7S,GADL,IAEEA,aACGnN,GAAMA,IAAOyN,OAAM,MAACwD,GAAD,SAACA,EAAiB+N,OAAlB,SAAC,EAAuBrQ,WAAxB,SAAC,EAAiCqC,kBAAlC,EAAC,EAA8ChR,IAAnE,MAEImN,GAFJ,SAEIA,EAAc6R,OAFlB,SAEI,EAAoBrQ,eAFxB,EAEI,EAA8BxB,aAFlC,MACI8D,GADJ,SACIA,EAAiB+N,OADrB,SACI,EAAuBrQ,eAD3B,EACI,EAAiCqC,cC3L5B,SAASy4B,GAAiBtqC,GAA2B,IAAD,MACzD0J,EAA6C1J,EAA7C0J,KAAMoV,EAAuC9e,EAAvC8e,UAAW0L,EAA4BxqB,EAA5BwqB,QAASV,EAAmB9pB,EAAnB8pB,eAC5B/X,EAAoBkE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBACzD1H,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5F,QAC5C4H,EAAWV,KAEX+K,EAAqBC,GAAsB,CAC/CjC,UAAU,SAAD,oGAAC,EAAC,SAACvU,GACVkM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,2BACRiP,QAAS,aAGbzC,EAAS9B,GAAQF,MAAM5F,KAAKnE,SAAQ,IACpCoU,OAEFD,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM5F,KAAKpE,cAAc,CAACD,EAA2BX,MACxE6O,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzEuF,SAAU,CACR8rB,eAAgB,CACd,CACE/kB,MAAOpF,GACPf,UAAW,CACTiB,WAAYvO,EACZ0O,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE4E,MAAO4kB,GACP/qB,UAAW,CACTiB,WAAYvO,EACZ+X,uBAOJkb,EAAS/jC,eAAkB,gCAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACzB0f,EAAmB9B,OAAO,CAC9Bne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3B4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxBsW,UAAW,SAAC9V,EAAMV,OAAO0C,QAAQxC,QAArB,EAA4BhJ,GAAYyN,OAAM,SAACjE,EAAMV,OAAO0C,QAAQxC,YAAtB,EAAC,EAA4BhJ,IAA1C,KAC7CuL,MAAO/B,EAAMV,OAAOyC,MAAMvC,MAC1BqC,WAAYs+B,YAAW,SAAAngC,EAAMV,OAAOuC,iBAAb,IAAyBrC,QAAS,MACzDsC,MAAO9B,EAAMV,OAAOwC,MAAMtC,SAPG,8DAS9B,CACDiX,EACAzW,EAAMV,OAAOwC,MAAMtC,MAFlB,SAGDQ,EAAMV,OAAOuC,iBAHZ,EAGD,EAAyBrC,MAHxB,SAIDQ,EAAMV,OAAO0C,QAAQxC,YAJpB,EAID,EAA4BhJ,GAC5BwJ,EAAMV,OAAOlB,KAAKoB,MAClBQ,EAAMV,OAAOyC,MAAMvC,MANlB,SAODQ,EAAMZ,eAPL,EAOD,EAAgB5I,KAGZkkC,EAAa9jC,WAAc,iBAAM,CAAC,OAAM,IAE9C,OACE,gBAACujC,GAAD,CACEptB,MAAM,qBACN1N,KAAMA,EACNq7B,WAAYA,EACZzuB,QAASwK,EAAmBxK,QAC5BkU,QAASA,EACTka,aAAcM,EACdP,YAAY,QAEZ,gBAAC,GAAD,O,aC9DS,SAASzQ,GAAWh0B,GAAqB,IAAD,YAC7CgO,EAAoEhO,EAApEgO,aAAckL,EAAsDlZ,EAAtDkZ,QAAS+a,EAA6Cj0B,EAA7Ci0B,OAAQC,EAAqCl0B,EAArCk0B,QAAS9zB,EAA4BJ,EAA5BI,SAAUqqC,EAAkBzqC,EAAlByqC,cAC1D,EAA2Bx0B,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,EAAwCnR,YAAwB,GAAhE,WAAOypC,EAAP,KAAsBC,EAAtB,KACMC,EAAgB9oB,GAAe3Y,EAAW0hC,YAC1Cp0B,EAAWV,KAEX+0B,EAAwB,UAAZ5xB,EAAsB/G,EAAMX,OAAOsT,QAAU3S,EAAMX,OAAOkR,UACtEqoB,EAAcllC,KAAMsM,EAAMX,OAAOC,SAASsB,OAAO,IAAKC,MAE5D,OACE,gBAAChL,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOG,UAAW,CAAEiD,gBAAiBgK,EAAMX,OAAOsT,WAC9D,gBAAC9c,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4P,SAChBuf,EACA,gBAACE,GAAA,EAAD,CACEnR,KAAK,SACLva,KAAM,GACN7C,MAAOsM,EAAMX,OAAOkR,UACpB/K,QAAS,kBAAOsc,EAASA,IAAW,QAL5B,MASd,gBAACjsB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOsvB,iBAClB,gBAACrsB,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,EAAI,IACvB,gBAACg0B,GAAA,EAAD,CAAiBrzB,QAAS8yB,GACvB,MAACz8B,GAAD,SAACA,EAAca,OAAd,EAAoBsC,MAGpB,gBAAC,KAAOma,MAAR,CACE5iB,KAAM,GACN4O,OAAQ,CAAEU,IAAG,MAAEhK,OAAF,EAAEA,EAAca,KAAKsC,OAClCzO,MAAO,CAAEyF,gBAAiBiK,EAAQX,QAAQc,SAL5C,gBAAC,KAAO8V,KAAR,CAAa3f,KAAM,GAAIua,KAAK,cAUlC,gBAACjb,EAAA,EAAD,CAAMtF,MAAOqC,GAAOwvB,gBAClB,gBAACzR,GAAA,EAAD,CACExG,UAAW,kBAAMquB,GAAe,IAChCtuB,QAASquB,EACT3nB,OACE,gBAACioB,GAAA,EAAD,CAAiBrzB,QAAS,kBAAMgzB,GAAe,KAC7C,gBAACtgB,GAAA,EAAD,CAAO3nB,MAAO,CAACqC,GAAOqS,MAAO,CAAEvR,MAAOklC,EAAanlC,SAAU,MAA7D,MACGoI,GADH,SACGA,EAAca,WADjB,EACG,EAAoBpG,QAK3B,gBAACqa,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPgzB,GAAe,GAEf,MAAI38B,KAAca,KAAK1C,OACrB8+B,aAAQ,SAAD,MAASj9B,OAAT,EAASA,EAAca,KAAK1C,SAGvC8W,KAAK,QACL7L,MAAK,MAAEpJ,GAAF,SAAEA,EAAca,WAAhB,EAAE,EAAoB1C,QAE7B,gBAAC2W,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPgzB,GAAe,GACf,MAAI38B,KAAca,KAAK1C,OACrB8+B,aAAQ,QAAD,MAAQj9B,OAAR,EAAQA,EAAca,KAAKzC,SAGtC6W,KAAK,QACL7L,MAAK,MAAEpJ,GAAF,SAAEA,EAAca,WAAhB,EAAE,EAAoBzC,QAE7B,gBAAC0W,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPgzB,GAAe,GACXC,GAAiB58B,GACnByI,EAAS9B,GAAQF,MAAMzG,aAAatD,QAAQsD,KAGhDiV,KAAK,oCACL7L,MACE,MAACpJ,KAAcxC,UAEXu6B,aAAwC,MAApB,MAAZ/3B,OAAA,EAAAA,EAAcxC,YAAa,GAAW,cAD9C,kBAKV,gBAACwd,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,UACzB,gBAAC2sB,GAAA,EAAD,CACElqB,MAAO,CACLqC,GAAO0vB,UACP,CAAE5c,WAAY,OAAQjS,SAAU,GAAIP,YAAa,EAAGQ,MAAOilC,KAH/D,MAMG98B,GANH,SAMGA,EAAczC,OANjB,SAMG,EAAoB9C,WANvB,EAMG,EAA0BmV,QAAQ,IAAK,KAAKqqB,iBAKlD7nC,GAKP,IAAM2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,MAAO,OACPolB,WAAY,IAEd1Q,QAAS,CACPxU,SAAU,WACV2C,IAAK,EACL4hB,MAAO,EACP3e,cAAe,MACfM,eAAgB,YAElBguB,gBAAiB,CACftuB,cAAe,MACfX,WAAY,SACZiB,eAAgB,SAChBlB,kBAAmB,GACnBkgB,WAAY,GACZwB,aAAc,IAEhB0N,eAAgB,CACdlvB,YAAa,GACbggB,WAAY,GACZrO,KAAM,EAAI,EACV5R,WAAY,aACZiB,eAAgB,UAElB+Q,MAAO,CACLvR,MAAO,SAET4uB,UAAW,CACT5uB,MAAO,WCtJI,SAAS6uB,GAAS10B,GAC/B,IAAQ6lB,EAAiB7lB,EAAjB6lB,MAAOnjB,EAAU1C,EAAV0C,MACTsU,EAAO,EAAI6O,EAAMlK,OACjBxJ,EAAQsQ,eAEd,OACE,gCACE,gBAACuG,GAAA,EAAD,CAAStmB,MAAO,CAACqC,GAAO4vB,WACxB,gBAAC3sB,EAAA,EAAD,CAAMtF,MAAOsC,IAAWoqB,QAAQ,CAACrqB,GAAOG,UAAWxC,KAChDmjB,EAAM7kB,KAAI,SAACoM,EAAMqB,GAAP,OACT,gCAEE,gBAACzG,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,QAAQ5L,IAAG,aAAeqD,GACvC,gBAAC,KAAK+U,KAAN,CACEoR,WAAY,CACV7vB,GAAOqS,MACP,CACEhR,UAAW,SACXC,eAAgB,SAChBR,MAAOsM,EAAMX,OAAOmJ,KACpB9C,YAA0B,IAAdzK,EAAKynB,KAAiB,YAASjyB,IAG/CF,MAAO,CACL2iB,WAAY,IAEdjO,MAAOhK,EAAKvD,MACZirB,iBAAkB,CAAC/vB,GAAOuoB,YAAa,CAAEznB,MAAOsM,EAAMX,OAAOmJ,OAC7D2S,YAAalgB,EAAKgK,MAClBO,QAASvK,EAAKuK,WAGjBlJ,IAAMoX,EAAMlK,OAAS,EAAI,KAExB,gBAACqN,GAAA,EAAD,CAAS5d,IAAG,qBAAuBqD,EAAK/L,MAAO,CAACqC,GAAOgwB,yBASrE,I,GAAMhwB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CAAEjF,MAAO,OAAQ8F,cAAe,OAC3C4uB,QAAS,CACPz0B,OAAQ8E,IAAWmgB,cACnBllB,MAAO,QAET80B,gBAAiB,CACf90B,MAAO+E,IAAWmgB,cAClBjlB,OAAQ,QAEVkX,MAAO,CACL5R,UAAW,SACXK,MAAO,SAETynB,YAAa,CACX9nB,UAAW,SACXK,MAAO,W,qkBC9DJ,IAAMqlC,GAA8BjrB,aAAH,s0CC0DxC,I,MAAMlb,GAASC,IAAWC,OAAO,CAC/B2qB,KAAM,CACJ1vB,OAAQ,GACRuyB,WAAY,EACZrtB,WAAY,SACZiB,eAAgB,SAChB8B,gBAAiB,cACjBhC,YAAa,QACblG,MAAO,QAETkrC,UAAW,CACTplC,cAAe,MACfX,WAAY,SACZlF,OAAQ,MAGGovB,GA5Df,SAAetvB,GACb,IAAQ4oB,EAAsC5oB,EAAtC4oB,KAAM9C,EAAgC9lB,EAAhC8lB,SAAUtO,EAAsBxX,EAAtBwX,SAAUG,EAAY3X,EAAZ2X,QAC1BvF,EAAY6D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAA1CxC,QACFg5B,EAAW,CACfC,UAAW,eACXC,SAAU,iBACVC,gBAAiB,iBACjBC,WAAY,kBACZC,kBAAmB,iBACnB7iB,GAEIR,EAAQ,CACZijB,UAAW,OACXC,SAAU,MACVC,gBAAiB,cACjBC,WAAY,QACZC,kBAAmB,iBACnB7iB,GAEF,OACE,gBAAC5F,GAAA,EAAD,CACEtL,KAAMoO,EAAW,WAAa,OAC9BpjB,MAAO,CACLqC,GAAO6qB,KACP,CAAEzpB,YAAaiM,EAAQX,QAAQa,MAC/BwT,OAAWljB,EAAY,CAAEkE,QAAS,KAClCugB,OAAOC,SACT9P,SAAUA,EACVG,QAAO,8GAAE,wBAAMA,OAAN,EAAMA,QAEf,gBAAC3P,EAAA,EAAD,CAAMtF,MAAOqC,GAAOomC,WAClB,gBAACnjC,EAAA,EAAD,CAAMtF,MAAO,CAAE4iB,YAAa,IAC1B,gBAACP,GAAA,EAAD,CACEtc,KAAMqd,EAAW,QAAUslB,EAC3BvlC,MAAOuM,EAAQX,QAAQa,KACvB5J,KAAM,MAGV,gBAACC,EAAA,EAAD,CAAMjG,MAAO,CAAEmD,MAAOuM,EAAQX,QAAQa,OAAS8V,MC7BxC5J,MAxB2ByB,aAAH,0cA8BT,CAC5BvB,WAAY,SAACkB,GAAD,OAAYA,EAAO8rB,kBAC/BptB,UAAW,CACTqtB,eAAgB,CAAC1tB,GAAW,mCCTjBO,MAxB0ByB,aAAH,wcA8BT,CAC3BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOgsB,iBAC/BttB,UAAW,CACTqtB,eAAgB,CAAC1tB,GAAW,mC,qkBCdjB,SAAS4tB,GAAiB7rC,GACvC,IAAQgS,EAA8BhS,EAA9BgS,YAAahE,EAAiBhO,EAAjBgO,aACf3D,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KACXof,EAAQC,sBAER0W,EAAqBhqB,GAAe3Y,EAAWk/B,iBAE/CqD,EAAmBK,GAA4B,CACnDjtB,UAAW,SAACvU,GACVkM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAAS,yBAEzDyO,QAAS,SAAC5O,GACR2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YAEzEuF,SAAU,CACR8rB,eAAgB,CACd,CACE/kB,MAAOpF,GACPf,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClB0O,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE4E,MAAO0lB,GACP7rB,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClB+X,eAAgBxb,OAAO6mB,EAAMxY,OAAOqE,cAMxC4qB,EAAkBI,GAA2B,CACjDltB,UAAW,SAACvU,GACVkM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAAS,yBAEzDyO,QAAS,SAAC5O,GACR2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YAEzEuF,SAAU,CACR8rB,eAAgB,CACd,CACE/kB,MAAOpF,GACPf,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClB0O,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE4E,MAAO0lB,GACP7rB,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClB+X,eAAgBxb,OAAO6mB,EAAMxY,OAAOqE,cAOxCirB,GAAoB,MAAXj6B,OAAA,EAAAA,EAAaqV,QAAO,SAAC5e,GAAD,MAAU,SAASiX,KAAKjX,QAAU,GAKrE,OACE,gBAAC,IAAD,CACEqgB,YAAU,EACVpmB,MAAO,CAAEzC,MAAO,QAChB+2B,gCAAgC,EAChC3J,sBAAuBtoB,GAAOe,SAE7B,CACCqD,EAAW+iC,WACX/iC,EAAWgjC,UACXhjC,EAAWijC,SACXjjC,EAAWkjC,kBACXljC,EAAWmjC,iBACXtrC,KAAI,SAAC+gB,GAAD,OAhBc,SAACA,GAAD,OACtB+pB,GAAsBG,EAAO9pB,SAASJ,GAgBjCwqB,CAAgBxqB,GACf,gBAAC,GAAD,CACE6G,KAAM7G,EACN+D,SAAUmmB,EAAO9pB,SAASJ,GAC1BpK,QAAS,kBAENm0B,EAEGG,EAAO9pB,SAASJ,GAChB2pB,EAAiB1sB,OACf,CACE2sB,eAAgB5pB,EAChB+H,eAAgBxb,OAAM,MAACN,OAAD,EAACA,EAAcnN,KAEvC,CACE0pC,eAAgB,CACd,CACE/kB,MAAO3B,GACPxE,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClBC,YAAa,CAAC+P,MAIpByqB,OAAQ,SAAOxyB,EAAP,wBAAA5Y,EAAAC,OAAA,yDAAiBwe,KACjB4sB,EAAIzyB,EAAO0yB,UAAiB,CAChClnB,MAAOpD,GACP/C,UAAW,CACTrN,YAAa,CAAC+P,GACdzB,WAAYhS,OAAOjE,EAAM0H,sBAIvB46B,IAAgB,MAADF,GAAA,SAAAA,EAAGj9B,WAAH,WAAa6T,oBAAb,IAA4BC,QAAS,IAAI+D,QAC5D,SAAC9D,GAAD,aAAc,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAY5iB,OAAZ,MAAmBmN,OAAnB,EAAmBA,EAAcnN,OAG7CmZ,EAAO4yB,WAAW,CAChBpnB,MAAOpD,GACP/C,UAAW,CACTrN,YAAa,CAAC+P,GACdzB,WAAYhS,OAAOjE,EAAM0H,oBAE3B8N,KAAK,SACA4sB,GADD,IAEFj9B,SAAS,SAAD,MACHi9B,OADG,EACHA,EAAGj9B,UADA,IAEN6T,cAAe,CACbC,MAAOqpB,SAxBT,kBA8BC,CACL9sB,KAAK,SACA4sB,GADD,IAEFj9B,SAAS,SAAD,MACHi9B,OADG,EACHA,EAAGj9B,UADA,IAEN6T,cAAe,CACbC,MAAOqpB,SApCT,+DA4CZf,EAAgB5sB,OACd,CACE2sB,eAAgB5pB,EAChB+H,eAAgBxb,OAAM,MAACN,OAAD,EAACA,EAAcnN,KAEvC,CACE0pC,eAAgB,CACd,CACE/kB,MAAO3B,GACPxE,UAAW,CACTiB,WAAYjW,EAAM0H,kBAClBC,YAAa,CAAC+P,MAIpByqB,OAAQ,SAAOxyB,EAAP,0CAAA5Y,EAAAC,OAAA,uDAAiBwe,EAAjB,EAAiBA,KACjB4sB,EAAIzyB,EAAO0yB,UAAiB,CAChClnB,MAAOpD,GACP/C,UAAW,CACTrN,YAAa,CAAC+P,GACdzB,WAAYhS,OAAOjE,EAAM0H,sBAIvBzQ,GAAW,MAADmrC,GAAA,SAAAA,EAAGj9B,WAAH,WAAa6T,oBAAb,IAA4BC,QAAS,GAC/CupB,IAAiBvrC,EAAQkN,MAC7B,SAAC+U,GAAD,aAAc,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAY5iB,OAAZ,MAAmBmN,OAAnB,EAAmBA,EAAcnN,OAGvCisC,EAAiBD,EAAY,OAExB,MAADJ,GAAA,SAAAA,EAAGj9B,WAAH,WAAa6T,oBAAb,IAA4BC,QAAS,IAAItiB,KAAI,SAACuiB,GAAD,eAC3C,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAY5iB,OAAZ,MAAmBmN,OAAnB,EAAmBA,EAAcnN,IAC7B0iB,EADJ,SAGSA,GAHT,IAIME,KAAK,SAAD,MACCF,OADD,EACCA,EAAME,MADP,MAEC5D,GAFD,SAECA,EAAM+rB,sBAFP,EAEC,EAAuB59B,oBATP,gBAexB,MAADy+B,GAAA,SAAAA,EAAGj9B,WAAH,WAAa6T,oBAAb,IAA4BC,QAAS,IAfZ,CAgB7B,CACEG,KAAI,MAAE5D,GAAF,SAAEA,EAAM+rB,sBAAR,EAAE,EAAuB59B,gBAG/B++B,EAlCA,SAmCDN,GAnCC,IAoCJj9B,SAAS,SAAD,MACHi9B,OADG,EACHA,EAAGj9B,UADA,IAEN6T,cAAe,CACbC,MAAOwpB,OAIb9yB,EAAO4yB,WAAW,CAChBpnB,MAAOpD,GACP/C,UAAW,CACTiB,WAAYhS,OAAOjE,EAAM0H,mBACzBC,YAAa,CAAC+P,IAEhBlC,KAAMktB,IAjDF,kBAoDC,CACLltB,KAAMktB,IArDF,+DA5EZ,QAPqB,SAqJvC,IAAMhoC,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACPwoB,SAAU,EACVtQ,gBAAiB,GACjB3X,eAAgB,kB,UCpPL,SAAS4oB,GAASjvB,GAAe,IAAD,IACrCqO,EAAkBrO,EAAlBqO,KAAMsJ,EAAY3X,EAAZ2X,QACRxF,EAAQsQ,eACd,OACE,gBAAC9E,GAAA,EAAD,CAAkBhG,QAASA,EAASjV,MAAO,CAAEzC,MAAO,SAClD,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOioC,aAClB,gBAAC5hB,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAOkoC,oBAC1B,gBAACC,GAAA,EAAD,CACExqC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACL4hB,MAAO,IAGRqhB,aAAoD,MAAxC,MAAJ13B,GAAA,SAAAA,EAAMR,WAAN,IAAYjC,aAAcyC,EAAKg3B,WAAmB,qBAE7D,gBAAC,KAAK7hB,KAAN,CACEpM,MAAK,SAAW/I,EAAKR,KAAK2mB,WAC1BlH,YAAW,SAAEjf,EAAKN,iBAAP,EAAE,EAAiBtF,KAC9B/F,MAAO,CAAEzC,MAAO,QAChB20B,WAAY7vB,GAAOooC,iBACnBrY,iBAAkB/vB,GAAOqoC,uBACzB1oB,MAAO,wBACL,gBAAC1c,EAAA,EAAD,CACEtF,MAAO,CACLzC,MAAO,IACPmF,WAAY,SACZiB,eAAgB,WAChBN,cAAe,QAGjB,gBAAC4C,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO4I,SAAU,CAAE9H,MAAOsM,EAAMX,OAAOkR,aAArD,SACGrU,EAAKV,eADR,EACG,EAAelF,QAItBzF,KAAM,kBACJ,gBAACgF,EAAA,EAAD,CACEtF,MAAO,CACLsU,KAAM,EACN5R,WAAY,SACZW,cAAe,MACfM,eAAgB,WAGlB,gBAAC0e,GAAA,EAAD,CACElf,MAAOsM,EAAMX,OAAOmJ,KACpBlS,KAAK,oBACLC,KAAM,YAWxB,I,GAAM3D,GAASC,IAAWC,OAAO,CAC/BooC,WAAY,GACZF,iBAAkB,CAChB9nC,YAAa,EACbO,SAAU,GACViS,WAAY,MACZgP,aAAc,GAEhBlZ,SAAU,CAAE/H,SAAU,GAAI6sB,WAAY,EAAG5a,WAAY,MAAOrS,UAAW,UACvE4nC,uBAAwB,CACtB/nC,YAAa,GAEf4nC,mBAAoB,CAAE5nC,YAAa,EAAGC,aAAc,EAAG+f,WAAY,EAAGgJ,cAAe,GACrF2e,YAAa,CAAE3mB,OAAQ,EAAGQ,aAAc,EAAGC,eAAgB,EAAGnkB,aAAc,EAAG1C,MAAO,UCxDlFqtC,GAAwBrtB,aAAH,ulBAoCZ,SAAShD,KAAiB,IAAD,gBAChC5S,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACX2H,EAAa4Y,2BACXzkB,EAAgBwO,KAAhBxO,YACFsjB,EAAQC,sBACRmY,GAAoB,MAAX17B,OAAA,EAAAA,EAAahR,MAAOs0B,EAAMxY,OAAOqE,OAEhD,ENQa,SAAyBngB,GAAa,IAAD,IAC5Cyf,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAElD/D,EAAewS,aAAkC0qB,GAA6B,CAClF7rB,UAAW,CACTiB,aACAwJ,eAAgBjpB,GAElBggB,YAAa,sBAGf,OAAO,SACF7S,GADL,IAEEA,aAAY,MAAEA,GAAF,SAAEA,EAAc6R,OAAhB,SAAE,EAAoBrQ,eAAtB,EAAE,EAA8BxB,eMrBHw/B,CACzCl/B,OAAO6mB,EAAMxY,OAAOqE,SAAW1S,OAAM,MAACuD,OAAD,EAACA,EAAahR,KAD7CmN,EAAR,EAAQA,aAAcsI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBghB,EAAYC,0BAElB1lC,aAAgB,kBAAMyc,EAAWkpB,WAAW,CAAExvB,MAAO,cAAc,CAACsG,IACpEzc,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAEf,MAA6B3G,aAAsBuuB,IAA5CxsB,EAAP,YAEA7f,aAAgB,YACd,WAAC,QAAAG,EAAAC,OAAA,mDACqB,QAAhBwS,IAASC,GADd,kCAAA1S,EAAA,MAE4BqsC,QAF5B,gBAGkB,YAHlB,EAEWjsC,QAENW,QAAQ2H,MAAM,6DAJnB,4DAAD,KAQC,IAEH,IAAM4jC,EAAczsC,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZqsC,KAAoC,CACxDE,WAAYF,KAA6BG,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,GACTC,QAAQ,KAPwB,cAE5BpuB,EAF4B,kBAAAxe,EAAA,MAW5B0f,EAAmB,CACvBzB,UAAW,CACTxe,GAAIyN,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBhO,IAC/BsQ,MAAM,0BAA2ByO,EAAOouB,WAdV,uDAkBlC7rC,QAAQC,IAAR,MAlBkC,kEAoBnC,OAAC4L,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBhO,GAAIigB,IAEtBmrB,GAAqB,MAAZj+B,GAAA,SAAAA,EAAcgE,kBAAd,IAA2BqV,QAAO,SAAC5e,GAAD,MAAU,SAASiX,KAAKjX,QAAU,GAE7EwlC,EAAoBnsB,GAAe3Y,EAAW+kC,uBAC9CC,EAA4BrsB,GAAe3Y,EAAWilC,sBACtDC,EAAiBvsB,GAAe3Y,EAAW0hC,YAC3C14B,EAAQsQ,eAEd,OACE,gBAAC0R,GAAA,eAAD,CACExsB,MAAO,CAAE1E,EAAG,EAAKF,EAAG,KACpBmwB,IAAK,CAAEjwB,EAAG,GAAKF,EAAG,KAClBL,MAAOsC,IAAWgE,aAClBwI,OAAQ,CAACW,EAAMX,OAAOsT,QAAS3S,EAAMX,OAAOsT,UAE3CxO,GAAW,gBAAC6T,EAAA,EAAD,CAAatkB,MAAOwE,EAAM8H,MAAMX,OAAOgB,OAAQ4X,eAAa,EAAC/N,QAAS/F,IAClF,gBAAC6jB,GAAD,CACEz3B,MAAO,CAAEyF,gBAAiBkC,EAAM8H,MAAMX,OAAOoJ,YAC7CyS,sBAAuB,CAACtoB,GAAOe,QAAS,CAAEqC,gBAAiB,gBAC3DkvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW,kBAAM1R,QAEpE1X,EACA,gBAAC,GAAD,CACEA,aAAcA,EACdkmB,QAASqZ,EACTtZ,OAAQ,WACN,MAAIjmB,KAAca,MAChB4H,EAAS9B,GAAQF,MAAM5F,KAAKnE,QAAnB,MAA2BsD,OAA3B,EAA2BA,EAAca,QAGtD47B,cAAeiD,GAEf,gBAAC7B,GAAD,CAAwB79B,eAAcgE,YAAai6B,IACnD,gBAAC,GAAD,CACEvpC,MAAO,CAAExC,OAAQ,IACjB2lB,MAAO,CACL,CACEzO,MAAO,QACPvN,MAAM,MAAiB,MAAZmE,OAAA,EAAAA,EAAcyB,UAAW,GACpCkI,QAAS,WACH3J,GAAgBigC,GAClBx3B,EAAS9B,GAAQF,MAAMhF,QAAQ/E,QAAQsD,MAI7C,CACEoJ,MAAO,UACPvN,MAAM,KAAgB,MAAZmE,GAAA,SAAAA,EAAca,OAAd,WAAoBxC,cAApB,IAA6B5D,OAAQ,MAEjD,CACE2O,MAAO,cACPvN,MAAOhG,KAAK+E,MAAM0F,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoB3C,aAAaid,YAAc,QAI9E,gBAACH,GAAA,EAAD,CAAStmB,MAAOqC,GAAO4vB,WAlCV,KAqCjB,gBAAC3sB,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAKsnB,UAAN,eACA,gBAAC6D,GAAA,EAAD,CAAM1oB,MAAO,CAAE2jB,OAAQ,EAAGf,YAAa,GAAK+F,UAAW,GACpDgjB,EACC,gCACE,gBAAC,KAAK7qB,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,OAAQ6d,QAAS,GACjC1G,MAAM,wBACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,UAC5BtL,QAAS,kBACP3J,EAAeyI,EAAS9B,GAAQF,MAAMzG,aAAatD,QAAQsD,IAAiB,QAGhF,gBAACgb,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,WAEzB,KACHstC,GAAUY,EACT,gCACE,gBAAC,KAAK3qB,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,OAAQ6d,QAAS,GACjC1G,MAAM,eACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,UAC5ByB,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,kBACP+F,EAAWia,SAAS,qBAAsB,CAAE3W,OAAM,MAAEhT,OAAF,EAAEA,EAAcnN,QAGtE,gBAACmoB,GAAA,EAAD,CAAStmB,MAAO,CAAEzC,MAAO,WAEzB,KACJ,gBAAC,KAAKujB,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,OAAQ6d,QAAS,GACjC1G,MAAM,YACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWpF,KAAK,eAC5ByB,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,kBAAM+F,EAAWia,SAAS,kBAAmB,CAAE3W,OAAM,MAAEhT,OAAF,EAAEA,EAAcnN,UAKpF,gBAACmH,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAKsnB,UAAN,gBACA,gBAAC6D,GAAA,EAAD,CAAM1oB,MAAO,CAAE2jB,OAAQ,EAAGlD,iBAAkB,GAAKkI,UAAW,GAA5D,MACGrd,GADH,SACGA,EAAc2V,QADjB,SACG,EAAqBL,YADxB,EACG,EAA4BtiB,KAAI,SAACuiB,GAAD,OAC3B,MAAJA,KAAME,KACJ,gBAAC,GAAD,CACEpV,KAAMkV,EAAKE,KACX9L,QAAS,WACP+F,EAAWia,SAAS,aAAc,CAAE9pB,KAAM0V,EAAKE,UAGjD,WAMZ,gBAACgmB,GAAD,CACEjf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,KAClDoU,UAAW,kBAAMkB,uBAAsB,kBAAMvJ,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,QAChFhB,KAAM+K,EAAM3G,IAAIpE,KAChBsX,OAAQ1S,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBhO,MAGrC,gBAAC4nC,GAAD,CACEje,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMzG,aAAatD,SAAQ,KAC3DoU,UAAW,SAACjQ,GACV4H,EAAS9B,GAAQF,MAAMzG,aAAatD,SAAQ,KAC7B,MAAXmH,OAAA,EAAAA,EAAahR,OAAb,MAAoBmN,OAApB,EAAoBA,EAAcnN,MACpC4V,EAAS9B,GAAQC,OAAOjC,QAAQ9D,EAAKA,OACrC6W,MAGJhc,KAAM+K,EAAMzG,aAAatE,OAG3B,gBAAC,GAAD,CACE8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACtDoU,UAAW,kBAAMrI,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACxDhB,KAAM+K,EAAMhF,QAAQ/F,KACpBsE,aAAcA,QAAgBpL,IAGhC,gBAAC,GAAD,CACEknB,eAAgBxb,OAAM,MAACN,OAAD,EAACA,EAAcnN,IACrC2pB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM5F,KAAKnE,SAAQ,KACnDoU,UAAW,WACTrI,EAAS9B,GAAQF,MAAM5F,KAAKnE,SAAQ,KAEtChB,KAAM+K,EAAM5F,KAAKnF,QAMzB,I,GAAM3E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAERlR,QAAS,CACPwoB,SAAU,EACVD,cAAe,GACflpB,kBAAmB,GAErBwvB,QAAS,CACPz0B,OAAQ,EACRD,MAAO,QAET2vB,KAAM,CACJvJ,OAAQ,EACRle,gBAAiB,cACjBiyB,UAAW,GACXn0B,YAAa,EACbI,eAAgB,SAChBjB,WAAY,SACZyL,QAAS,QAEXy9B,UAAW,CACTzoC,MAAO,QACPgL,QAAS,OACTxK,eAAgB,SAChBjB,WAAY,SACZQ,SAAU,GACVi2B,WAAY,GACZD,kBAAmB,Y,qkBCzSvB,IAAM2S,GAAoCtuB,aAAH,+3D,cCSxB,SAASuuB,GAAiBxuC,GACvC,IAAQoX,EAAiDpX,EAAjDoX,MAAOkW,EAA0CttB,EAA1CstB,YAAarK,EAA6BjjB,EAA7BijB,KAAM2kB,EAAuB5nC,EAAvB4nC,UAAWjwB,EAAY3X,EAAZ2X,QAC7C,EAA2B1B,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,OACE,gBAACuL,GAAA,EAAD,CAAkBhG,QAASA,GACzB,gBAACyT,GAAA,EAAD,CAAM1oB,MAAOqC,GAAO2W,aAAc2P,UAAW,GAC3C,gBAACD,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAO0pC,qBAC1B,gBAAC,KAAKjrB,KAAN,CACQpM,QAAOkW,cACb5qB,MAAO,CAAEzC,MAAO,QAChB20B,WAAY7vB,GAAO2pC,kBACnB5Z,iBAAkB/vB,GAAO4pC,wBACzB3rC,KAAM,kBACJ,gBAAC,KAAOqlB,KAAR,CACE3f,KAAM,GACAua,OACNpd,MAAOsM,EAAMG,KAAOH,EAAMX,OAAOmJ,KAAOvI,EAAQI,OAAOD,MACvD7P,MAAOqC,GAAOsoC,gBAIpB,gBAACH,GAAA,EAAD,CAASxqC,MAAOqC,GAAO6iC,WACpBgH,aAAgC,IAAZhH,EAAkB,CAAEiH,WAAW,QAQhE,IAAM9pC,GAASC,IAAWC,OAAO,CAC/BooC,WAAY,CACVllC,gBAAiB,cACjB/B,UAAW,SACX+c,iBAAkB,IAEpBurB,kBAAmB,CACjBrpC,YAAa,EACbO,SAAU,GACViS,WAAY,MACZgP,aAAc,GAEhB8nB,wBAAyB,CACvBtpC,YAAa,GAEfopC,oBAAqB,CAAEppC,YAAa,EAAGggB,WAAY,EAAG/f,aAAc,EAAG+oB,cAAe,GACtF3S,aAAc,CACZ2K,OAAQ,EACRrI,gBAAiB,EACjB8I,eAAgB,EAChBnkB,aAAc,EACd1C,MAAO,QAET2nC,UAAW,CACTznC,SAAU,WACV2C,IAAK,EACL4hB,MAAO,KC7DI,SAASoqB,GAAuB9uC,GAC7C,IAAQ0b,EAAiB1b,EAAjB0b,aACFgC,EAAa4Y,2BACnB,OACE,gBAACkY,GAAD,CACEp3B,MAAM,WACNkW,YAAa5R,EAAazR,QAC1B29B,UAAWlsB,EAAa2pB,UACxBpiB,KAAK,WACLtL,QAAS,kBACP+F,EAAWia,SAAS,WAAY,CAC9B4P,OAAQ,aACRwH,SAAS,EACTpyB,OAAQ,CAAE9O,KAAO6N,EAAaszB,SAAkBnhC,WCZ3C,SAASohC,GAAyBjvC,GAC/C,IAAQ0b,EAAiB1b,EAAjB0b,aACFgC,EAAa4Y,2BACnB,OACE,gBAACkY,GAAD,CACEp3B,MAAK,SAAYsE,EAAaszB,SAAkBxa,WAA3C,iBACLlH,YAAa5R,EAAazR,QAC1B29B,UAAWlsB,EAAa2pB,UACxBpiB,KAAK,mBACLtL,QAAS,kBACP+F,EAAWia,SAAS,WAAY,CAC9B4P,OAAQ,aACRwH,SAAS,EACTpyB,OAAQ,CAAE9O,KAAM6N,EAAaszB,eCdvC,SAASE,GAAQ1tC,GACf,OAAQA,GACN,IAAK,OACH,MAAO,OACT,IAAK,WACH,MAAO,cACT,IAAK,UACH,MAAO,mBACT,IAAK,aACH,MAAO,oBACT,QACE,MAAO,QAIE,SAAS2tC,GAAkBnvC,GAAuB,IAAD,EACtD0b,EAAiB1b,EAAjB0b,aAER,OACE,gBAAC8yB,GAAD,CACEp3B,MAAOg4B,sBAAY1zB,EAAaszB,SAAyBxtC,QAAU,IACnE8rB,YAAa5R,EAAazR,QAC1B29B,UAAWlsB,EAAa2pB,UACxBpiB,KAAMisB,GAAO,OAAE,EAAAxzB,EAAaszB,eAAf,EAAC,EAAwCxtC,QACtDmW,QAAS,kBAAM,QCxBN,SAAS03B,GAA0BrvC,GAChD,IAAQ0b,EAAiB1b,EAAjB0b,aACFgC,EAAa4Y,2BACnB,OACE,gBAACkY,GAAD,CACEp3B,MACoC,6BAAlCsE,EAAa4zB,iBACT,0BACA,2BAENhiB,YAAa5R,EAAazR,QAC1B29B,UAAWlsB,EAAa2pB,UACxBpiB,KAAwC,6BAAlCvH,EAAa4zB,iBAAkD,MAAQ,YAC7E33B,QAAS,uBAC2B,6BAAlC+D,EAAa4zB,iBACT5xB,EAAWia,SAAS,sBAAuB,CACzC7pB,IAAM4N,EAAaszB,SAAiBnuC,GACpCipB,eAAc,SAAGpO,EAAaszB,SAAiBngC,WAAjC,EAAE,EAAqChO,KAEvD6c,EAAWia,SAAS,WAAY,CAC9B4P,OAAQ,UACR5qB,OAAQ,CACN4qB,OAAQ,sBCvBT,SAASgI,GAAuBvvC,GAC7C,IAAQ0b,EAAiB1b,EAAjB0b,aAER,OACE,gBAAC8yB,GAAD,CACEp3B,MACoC,uBAAlCsE,EAAa4zB,iBACT,qBACA,qBAENhiB,YAAa5R,EAAazR,QAC1B29B,UAAWlsB,EAAa2pB,UACxBpiB,KAAwC,uBAAlCvH,EAAa4zB,iBAA4C,YAAc,aAC7E33B,QAAS,kBAAM,Q,qkBCsBN,SAASsF,KAAiB,IAAD,EAChC5S,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C,EP+Ca,WAA6B,IAAD,IACnC0L,EAAarK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO7C,qBAElDyT,EAAQhF,aAAkC+tB,GAAmC,CACjFlvB,UAAW,CACTiB,cAEFmF,aAAc,MAGhB,OAAO,SACFD,GADL,IAEE1Q,cAAa,MAAE0Q,GAAF,SAAEA,EAAO3F,OAAT,SAAE,EAAarQ,eAAf,EAAE,EAAuBqC,YAAYiD,gBO3DR06B,GAApC16B,EAAR,EAAQA,cAAewB,EAAvB,EAAuBA,QAASoP,EAAhC,EAAgCA,QAC1BghB,EAAYC,0BAUlB,OARA1lC,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAKb,gCACGpP,GAAW,gBAAC6T,EAAA,EAAD,CAAatkB,MAAOwE,EAAM8H,MAAMX,OAAOgB,OAAQ4X,eAAa,EAAC/N,QAAS/F,IACpE,MAAbxB,GAAA,SAAAA,EAAewO,QAAf,EAAsB3H,OAAS,KAC9B,gBAAC3T,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4nB,OAClB,gBAACF,GAAD,CAAWrV,MAAM,mBAAmBsV,SAAS,qCAGjD,gBAAC,IAAD,CACE7M,KAAI,MAAE/K,OAAF,EAAEA,EAAewO,MACrBsT,WAAY,EACZl0B,MAAO,CACLsU,KAAM,GAERugB,WAAY,YAAqB,IAAD,EAAXhU,EAAW,EAAjBnW,KACb,aAAQmW,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAY6rB,kBAClB,IAAK,gBACH,OAAO,gBAACL,GAAD,CAA0B7jC,IAAKmY,EAAKE,KAAK5iB,GAAI6a,aAAc6H,EAAKE,OACzE,IAAK,kBACH,OAAO,gBAAC,GAAD,CAAgBrY,IAAKmY,EAAKE,KAAK5iB,GAAI6a,aAAc6H,EAAKE,OAC/D,IAAK,kBACH,OAAO,gBAAC0rB,GAAD,CAAmB/jC,IAAKmY,EAAKE,KAAK5iB,GAAI6a,aAAc6H,EAAKE,OAClE,IAAK,2BACL,IAAK,2BACH,OAAO,gBAAC4rB,GAAD,CAA2BjkC,IAAKmY,EAAKE,KAAK5iB,GAAI6a,aAAc6H,EAAKE,OAC1E,IAAK,qBACL,IAAK,qBACH,OAAO,gBAAC8rB,GAAD,CAAwBnkC,IAAKmY,EAAKE,KAAK5iB,GAAI6a,aAAc6H,EAAKE,OACvE,QACE,OAAO,UAQrB,IAAM1e,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACPwoB,SAAU,EACVD,cAAe,GACfjpB,WAAY,SACZD,kBAAmB,GAErBwvB,QAAS,CACPz0B,OAAQ,EACRD,MAAO,QAET0sB,MAAM,SACD3nB,IAAW4S,oBADX,IAEH0W,SAAU,EACVtX,KAAM,EACN5Q,UAAW,SACXhB,WAAY,SACZiB,eAAgB,a,kDClGL,SAASopC,GAAWzvC,GACjC,IAAQyI,EAAoCzI,EAApCyI,KAAM0I,EAA8BnR,EAA9BmR,MAAqBkT,GAASrkB,EAAvBsX,OAArB,KAA4CtX,EAA5C,KACM0vC,EAAO,MAAGjnC,OAAH,EAAGA,EACZknC,MAAM,OACP3uC,KAAI,SAAC4uC,GAAD,OAAOnoB,KAAMmoB,MACjBlP,KAAK,IAER,OAAQvvB,EAGN,gBAAC,KAAOma,MAAR,MACEhU,OAAQ,CAAEU,IAAK7G,GACfzO,MAAO,CAAE0D,UAAW,SAAU+c,iBAAkB,IAChDza,KAAM,IACF2b,IANN,gBAAC,KAAO1b,KAAR,MAAayf,MAAOsnB,GAAarrB,ICHtB,SAASwrB,GAAU7vC,GAAgB,IAAD,IACvC8vC,EAA6C9vC,EAA7C8vC,MAAO9hC,EAAsChO,EAAtCgO,aAAc+hC,EAAwB/vC,EAAxB+vC,WAAYp4B,EAAY3X,EAAZ2X,QACnCxF,EAAQsQ,eACRQ,GAGJ,SAA6B,kBAA5B,SAAA6sB,EAAME,YAAN,IAAaC,aAAkCH,EAAME,YAAtD,IAA+EnvC,OAA/E,MACAmN,OADA,EACAA,EAAcnN,IACV,aACA,YAEN,OACE,gBAAC8c,GAAA,EAAD,CAAkBhG,QAASA,GACzB,gBAACyT,GAAA,EAAD,CAAM1oB,MAAOqC,GAAO+qC,OAClB,gBAAC1kB,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAOmrC,cAC1B,gBAAChD,GAAA,EAAD,CACExqC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACL4hB,MAAO,IAGRqhB,aAA0B,KAAd,MAAL+J,OAAA,EAAAA,EAAOzK,WAAkB,qBAEnC,gBAAC,KAAK7hB,KAAN,CACEpM,MAAK,IAAM04B,EAAMjvC,GAAZ,IAAkBivC,EAAM14B,MAC7B1U,MAAO,CAAEzC,MAAO,QAChB20B,WAAY7vB,GAAOorC,WACnBrb,iBAAkB/vB,GAAOqrC,iBACzBptC,KAAM,8BACJ,gBAACgF,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,IAAKmF,WAAY,SAAUW,cAAe,QAC7DgqC,EACC,gBAACN,GAAD,CACE/sC,MAAO,CAAE0D,UAAW,SAAU+c,iBAAkB,IAChDza,KAAM,GACND,MACE,MAACqnC,GAAD,SAACA,EAAOE,QAAR,WAAgCnhC,WAAhC,IAAsCpG,QACtC,MAACqnC,OAAD,EAACA,EAAOE,OAAmBvnC,MAC3B,GAEF0I,OACE,gBAAC2+B,OAAD,EAACA,EAAOE,OAAuBnhC,WAA/B,IAAqCsC,SACrC,MAAC2+B,OAAD,EAACA,EAAOE,OAAmBllC,aAC3BlI,IAIJ,gBAACmiB,GAAA,EAAD,CACElf,MAEE,eAAgBiqC,EAAME,OAGK,iBAA3BF,EAAME,MAAMC,aACZ,SAACH,EAAME,YAAP,IAA+BnvC,OAA/B,MAAsCmN,OAAtC,EAAsCA,EAAcnN,IAChD,U5GtEE,U4GyER4H,KAAMwa,EACNva,KAAM,GACNhG,MAAO,CAAEygB,iBAAkB,MAG/B,gBAACxa,EAAA,EAAD,CACEjG,MAAO,CACLkD,SAAU,GACViS,WAAY,MACZrS,UAAW,SACXK,MAAOsM,EAAMX,OAAOkR,YALxB,IAQIotB,EAAMlmC,eAW1B,IAAM7E,GAASC,IAAWC,OAAO,CAC/BooC,WAAY,GACZ8C,WAAY,CACV9qC,YAAa,EACbO,SAAU,GACViS,WAAY,MACZgP,aAAc,GAEhBupB,iBAAkB,CAChB/qC,YAAa,GAEf6qC,aAAc,CAAE7qC,YAAa,EAAGC,aAAc,EAAG+f,WAAY,EAAGgJ,cAAe,GAC/EyhB,MAAO,CACL3sB,iBAAkB,EAClB2D,eAAgB9hB,IAAWmgB,cAC3BxiB,aAAc,EACd1C,MAAO,UCtGI,SAASowC,KAAsB,IAAD,MACrChmC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACTlE,EAAgBwO,KAAhBxO,YACFsjB,EAAQC,sBACd,EAA2CiV,GACzC/7B,OAAM,MAAC6mB,GAAD,SAACA,EAAOxY,aAAR,EAAC,EAAeqE,SAAW1S,OAAM,MAACuD,OAAD,EAACA,EAAahR,KAD/CmN,EAAR,EAAQA,aAAcsI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBghB,EAAYC,0BACZjpB,EAAa4Y,2BAgBnB,OAfAr1B,aAAgB,WAAO,IAAD,EACpB,GAAgB,MAAZ+M,GAAA,SAAAA,EAAca,OAAd,EAAoBpG,OAAoB,MAAZuF,OAAA,EAAAA,EAAcnN,OAAd,MAAqBgR,OAArB,EAAqBA,EAAahR,IAAI,CAAC,IAAD,EACpE,WAAoBmN,EAAaa,WAAjC,EAAoB,EAAmBpG,KAAKknC,MAAM,MAA3CW,EAAP,YACA5yB,EAAWkpB,WAAW,CAAExvB,MAAUk5B,EAAL,yBAE7B5yB,EAAWkpB,WAAW,CAAExvB,MAAO,wBAEhC,OAACvF,OAAD,EAACA,EAAahR,GAAd,MAAkBmN,OAAlB,EAAkBA,EAAcnN,GAAhC,MAAoCmN,GAApC,SAAoCA,EAAca,WAAlD,EAAoC,EAAoBpG,KAAMiV,IAEjEzc,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAGb,gCACGpP,GAAW,gBAAC6T,EAAA,EAAD,CAAatkB,MAAOwE,EAAM8H,MAAMX,OAAOgB,OAAQ4X,eAAa,EAAC/N,QAAS/F,IAElF,gBAAC,IAAD,CACE5T,MAAOqC,GAAOwrC,SACd1wB,MAAkB,MAAZ7R,GAAA,SAAAA,EAAcwiC,aAAd,IAAsBltB,QAAS,GACrC6T,YAAY,EACZC,UAAW1R,EACX6R,WAAY,gBAAGnqB,EAAH,EAAGA,KAAH,OACV,gBAACyiC,GAAD,CACEl4B,QAAS,kBAAM+F,EAAWia,SAAS,cAAe,CAAEmY,MAAO1iC,EAAKqW,QAChEqsB,MAAK,MAAE1iC,OAAF,EAAEA,EAAMqW,KACPzV,oBAKZ,gBAAC,GAAD,CACEwc,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACtDoU,UAAW,kBAAMrI,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACxDhB,KAAM+K,EAAMhF,QAAQ/F,KACpBsE,aAAcA,QAAgBpL,KAMtC,IAAMmC,GAASC,IAAWC,OAAO,CAC/BsrC,SAAU,CAAEv5B,KAAM,EAAGqO,WAAY,KC9CpB,SAASorB,GAAQzwC,GAAuB,IAAD,cAC5C8N,EAAuE9N,EAAvE8N,IAAK8B,EAAkE5P,EAAlE4P,cAAe5B,EAAmDhO,EAAnDgO,aAAc0iC,EAAqC1wC,EAArC0wC,wBAAyB/4B,EAAY3X,EAAZ2X,QACnE,EAAoC1W,YAAe,GAAnD,WAAO0vC,EAAP,KAAoBC,EAApB,KACQp+B,EAAWyD,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAOzC,MAAMX,UAAtDgB,OACFiE,EAAWV,KACTlE,EAAgBwO,KAAhBxO,YAEFs3B,EAAYO,GAAqB,CACrC5qB,UAAW,WACT8xB,GAAa,GACU,MAAvBF,OACAj6B,EACE9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAAS,iBAAkBiP,QAAS,cAG7ER,QAAS,SAAChL,GACRvL,QAAQC,IAAIsL,GACZkjC,GAAa,GACbn6B,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAAS,gBAAiBiP,QAAS,cAGrF,EAAwDjY,YAAwB,GAAhF,WAAO4vC,EAAP,KAA8BC,EAA9B,KACA7vC,aAAgB,YACd,WAAC,QAAAG,EAAAC,OAAA,mDACqB,QAAhBwS,IAASC,GADd,kCAAA1S,EAAA,MAE4BqsC,QAF5B,gBAGkB,YAHlB,EAEWjsC,QAENW,QAAQ2H,MAAM,6DAJnB,4DAAD,KAQC,IAEH,IAAM4jC,EAAczsC,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZqsC,KAAoC,CACxDE,WAAYF,KAA6BG,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,GACTC,QAAQ,KAPwB,cAE5BpuB,EAF4B,OAUlCgxB,GAAa,GAVqB,WAAAxvC,EAAA,MAY5B+nC,EAAUnqB,OAAO,CACrBne,GAAIyN,OAAM,MAACR,OAAD,EAACA,EAAKjN,IAChBkwC,YAAY,0BAA2BnxB,EAAOouB,UAdd,uDAiBlC7rC,QAAQC,IAAR,MAjBkC,kEAmBnC,OAAC0L,OAAD,EAACA,EAAKjN,GAAIsoC,IAEP6H,EAAwBlvB,GAAe3Y,EAAW8nC,mBAClDvzB,EAAa4Y,2BACb4a,GACO,MAAXr/B,GAAA,SAAAA,EAAahD,WAAb,IAAmBhO,OAAnB,SAA0BiN,EAAIe,WAA9B,EAA0B,EAAUhO,MAAU,MAAHiN,GAAA,SAAAA,EAAK0B,eAAL,IAAe3O,KAAMmwC,EAE5D7+B,EAAQsQ,eACd,OACE,gBAAC2I,GAAA,EAAD,CAAMzT,QAASA,EAASjV,MAAO,CAAEokB,eAAgB,KAC/C,gBAACqD,EAAA,EAAD,CAAa9N,QAASs0B,EAAavmB,eAAa,EAACvkB,MAAO2M,IACxD,gBAAC4Y,GAAA,EAAKf,MAAN,CAAYjT,MAAOtJ,EAAIrF,MAAWqF,EAAInB,KAAnB,IAA2BmB,EAAIlB,QAClD,gBAACwe,GAAA,EAAKG,QAAN,KACE,gBAACvjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACkC,EAAA,EAAD,CAAMtF,MAAOqC,GAAO/B,MAClB,gBAAC,KAAOqlB,KAAR,CACEpF,KAAK,YACLva,KAAM,GACNhG,MAAO,CAAEyF,gBAAiBgK,EAAMG,KAAOH,EAAMX,OAAOsT,QAAU3S,EAAMX,OAAOC,YAG/E,gBAACzJ,EAAA,EAAD,CAAMtF,MAAOqC,GAAO2f,OAClB,gBAAC1c,EAAA,EAAD,CAAMtF,MAAOqC,GAAOosC,SAClB,gBAACxoC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOqjB,MAAO,CAAEviB,MAAOsM,EAAMX,OAAOkR,aAAlD,aACA,gBAAC/Z,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOuoB,YAAa,CAAEznB,MAAOsM,EAAMX,OAAOkR,aACrD5U,EAAInB,KADP,IACcmB,EAAIlB,QAGpB,gBAAC5E,EAAA,EAAD,CAAMtF,MAAOqC,GAAOosC,SAClB,gBAACxoC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOqjB,MAAO,CAAEviB,MAAOsM,EAAMX,OAAOkR,aAAlD,oBAGA,gBAAC/Z,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOuoB,YAAa,CAAEznB,MAAOsM,EAAMX,OAAOkR,aACrD5U,EAAIf,aAGT,gBAAC/E,EAAA,EAAD,CAAMtF,MAAOqC,GAAOosC,SAClB,gBAACxoC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOqjB,MAAO,CAAEviB,MAAOsM,EAAMX,OAAOkR,aAAlD,sBAGA,gBAAC/Z,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOuoB,YAAa,CAAEznB,MAAOsM,EAAMX,OAAOkR,aACrD5U,EAAIhB,gBAAkBi5B,aAA6B,IAAtBj4B,EAAIhB,gBAAwB,cAAgB,UAKlF,gBAAC9E,EAAA,EAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAOgY,UAAW,MAElD,gBAACqN,GAAA,EAAKb,QAAN,CAAc7nB,MAAO,CAAE2D,eAAgB,YAAcnD,cAAc,YACjE,gBAAC4f,GAAA,EAAD,CACExG,UAAW,kBAAMw0B,GAAuB,IACxCz0B,QAASw0B,EACTnuC,MAAO,CAAEqb,UAAW,IACpBgF,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,SACLvgB,MAAO,CAAExC,OAAQ,GAAIkF,WAAY,UACjCuS,QAAS,WACHu5B,EACFJ,GAAuB,GAClB,MAAIhjC,KAAKijC,aACdt6B,EAAS9B,GAAQK,YAAYtK,QAAQoD,EAAIijC,gBAI3CjjC,EAAIijC,YAAkC,eAApB,oBAIxB,gBAACjuB,GAAA,EAAKU,KAAN,CACEpM,MAAM,aACN6L,KAAK,SACLvgB,MAAO,CAAEsb,gBAAiB,GAC1BrG,QAAS,WACP+1B,IACAoD,GAAuB,MAIzBhjC,EAAIijC,YACJ,gCACE,gBAAC/nB,GAAA,EAAD,MACA,gBAAClG,GAAA,EAAKU,KAAN,CACEpM,MAAM,OACN6L,KAAK,MACLvgB,MAAO,CAAEsb,gBAAiB,GAC1BrG,QAAS,WACPm5B,GAAuB,GACnBhjC,EAAIijC,aACNt6B,EAAS9B,GAAQK,YAAYtK,QAAQoD,EAAIijC,kBAV/B,MAkBtB,gBAAC/tB,GAAA,EAAD,CACEtL,KAAK,WACLhV,MAAO,CACLqC,GAAO6qB,KACP,CACEznB,gBAA8B,MAAbyH,GAAA,SAAAA,EAAewhC,cAAf,WAA4BviC,OAA5B,EAAkCpG,K9GhLrC,UACF,Y8GkLhBkP,QAAS,WACP+F,EAAWia,SAAS,sBAAuB,CACzC7pB,MACAgc,eAAgBxb,OAAM,MAACN,OAAD,EAACA,EAAcnN,QAIzC,gBAACmH,EAAA,EAAD,CAAMtF,MAAOqC,GAAOomC,WAClB,gBAACnjC,EAAA,EAAD,CAAMtF,MAAO,CAAE4iB,YAAa,IAC1B,gBAACP,GAAA,EAAD,CAAwBtc,KAAK,oBAAoB5C,MAAM,UAAU6C,KAAM,MAEzE,gBAACC,EAAA,EAAD,CAAMjG,MAAO,CAAEmD,MAAO,WACN,MAAb+J,GAAA,SAAAA,EAAewhC,cAAf,WAA4BviC,WAA5B,IAAkCpG,OAAQ,qBASzD,IAAM1D,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACPC,cAAe,MACfX,WAAY,UAEdwqB,KAAM,CACJ1vB,OAAQ,GACRuyB,WAAY,EACZrtB,WAAY,SACZiB,eAAgB,UAElB8kC,UAAW,CACTplC,cAAe,MACfX,WAAY,SACZlF,OAAQ,GACRmG,eAAgB,gBAChB2Q,KAAM,GAERhU,KAAM,CACJgU,KAAM,KAER0N,MAAO,CACL1N,KAAM,KAERm6B,QAAS,CACPprC,cAAe,MACfX,WAAY,UAEdgjB,MAAO,CACLvQ,WAAY,MACZ5X,MAAO,IACPuF,UAAW,OACX8f,YAAa,GACbwB,eAAgB,GAElBwG,YAAa,CACXzV,WAAY,SACZyW,SAAU,KChOC,SAASrR,KAAiB,IAAD,QAChCxI,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACTlE,EAAgBwO,KAAhBxO,YACF6L,EAAa4Y,2BAEbnB,EAAQC,sBAEd,EAA2CiV,GACzC/7B,OAAM,MAAC6mB,GAAD,SAACA,EAAOxY,aAAR,EAAC,EAAeqE,SAAW1S,OAAM,MAACuD,OAAD,EAACA,EAAahR,KAD/CmN,EAAR,EAAQA,aAAcsI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBghB,EAAYC,0BAElB1lC,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAEfzkB,aAAgB,WAAO,IAAD,EACpB,GAAgB,MAAZ+M,GAAA,SAAAA,EAAca,OAAd,EAAoBpG,OAAoB,MAAZuF,OAAA,EAAAA,EAAcnN,OAAd,MAAqBgR,OAArB,EAAqBA,EAAahR,IAAI,CAAC,IAAD,EACpE,WAAoBmN,EAAaa,WAAjC,EAAoB,EAAmBpG,KAAKknC,MAAM,MAA3CW,EAAP,YACA5yB,EAAWkpB,WAAW,CAAExvB,MAAUk5B,EAAL,sBAE7B5yB,EAAWkpB,WAAW,CAAExvB,MAAO,qBAEhC,OAACvF,OAAD,EAACA,EAAahR,GAAd,MAAkBmN,OAAlB,EAAkBA,EAAcnN,GAAhC,MAAoCmN,GAApC,SAAoCA,EAAca,WAAlD,EAAoC,EAAoBpG,KAAMiV,IACjE,IAAMktB,EAAgB9oB,GAAe3Y,EAAW0hC,YAChD,OACE,gCACE,gBAAC,IAAD,CACEhrB,MAAkB,MAAZ7R,GAAA,SAAAA,EAAca,WAAd,IAAoBI,OAAQ,GAClC2nB,WAAY,EACZl0B,MAAO,CAAEsU,KAAM,GACfmgB,WAAY7gB,EACZ+W,sBAAuB,CAAEvP,QAAS,IAClCyZ,WAAY,kBAAGnqB,EAAH,EAAGA,KAAH,OACV,gBAACqjC,GAAD,CACQziC,eACN0iC,wBAAyBhrB,EACzB5X,IAAKV,EACLwC,cAAa,MAAE5B,GAAF,SAAEA,EAAcyzB,qBAAhB,EAAE,EAA8BjzB,MAC3C,SAAC6iC,GAAD,aAAU,SAAAA,EAAKvjC,UAAL,IAAUjN,MAAOuM,EAAKvM,IAAMwwC,EAAKC,QAE7C35B,QAAS,WACPlB,EAAS9B,GAAQF,MAAM3G,IAAIpD,QAAQ0C,UAM3C,gBAACklB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdxQ,QAASuuB,EACTtoB,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,KAClD0d,MAAM,YAGR,gBAACqhB,GAAD,CACEjf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,KAClDoU,UAAW,kBAAMkB,uBAAsB,kBAAMvJ,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,QAChFhB,KAAM+K,EAAM3G,IAAIpE,KAChBsX,OAAQ1S,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBhO,OAM3C,IAAMkE,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAERlR,QAAS,CACPwoB,SAAU,EACVD,cAAe,GACflpB,kBAAmB,GAErB0nB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6c,QAAS,CACPz0B,OAAQ,EACRD,MAAO,QAET2vB,KAAM,CACJvJ,OAAQ,EACRle,gBAAiB,cACjBiyB,UAAW,GACXn0B,YAAa,EACbI,eAAgB,SAChBjB,WAAY,SACZyL,QAAS,QAEXy9B,UAAW,CACTzoC,MAAO,QACPgL,QAAS,OACTxK,eAAgB,SAChBjB,WAAY,SACZQ,SAAU,GACVi2B,WAAY,GACZD,kBAAmB,YCjHR,SAAS2V,KACtB,IAAM7zB,EAAa4Y,2BACbjsB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCzC,EAAQsQ,eAER+uB,EAAoB1vB,GAAe3Y,EAAWsoC,gBAC9CC,EAAiC5vB,GAAe3Y,EAAWwoC,oBAEjE,OACE,gBAACxX,GAAD,KACE,gBAAC,KAAKyX,QAAN,CAAcx6B,MAAM,WAAW1U,MAAO,CAAEzC,MAAO,SAC3CuxC,EACA,gBAAC,KAAKhuB,KAAN,CACEpM,MAAM,gBACNO,QAAS,kBACP+F,EAAWia,SAAS,uBAAwB,CAC1CnoB,SAAUnF,EAAMyH,mBAGpB9O,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,yBACtDqK,YAAY,6CATM,KAYtB,gBAAC,KAAK9J,KAAN,CACEpM,MAAM,cACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,UACtDtL,QAAS,kBAAM+F,EAAWia,SAAS,+BAErC,gBAAC,KAAKnU,KAAN,CACEpM,MAAM,YACNO,QAAS,kBAAM+F,EAAWia,SAAS,iBACnC30B,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,gBAExD,gBAAC,KAAKO,KAAN,CACEpM,MAAM,OACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,eACtDqK,YAAY,8CACZ3V,QAAS,kBAAM+F,EAAWia,SAAS,yBAErC,gBAAC,KAAKnU,KAAN,CACEhM,UAAWk6B,EACXt6B,MAAM,0BACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,WACtDtL,QAAS,kBAAM+F,EAAWia,SAAS,kCAErC,gBAAC,KAAKnU,KAAN,CACEpM,MAAM,aACNpU,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,eACtDqK,YAAY,0CACZ3V,QAAS,kBAAM+F,EAAWia,SAAS,+BAIvC,gBAAC,KAAKia,QAAN,CAAcx6B,MAAM,UAAU1U,MAAO,CAAEzC,MAAO,SAC5C,gBAAC,KAAKujB,KAAN,CACEpM,MAAM,eACNO,QAAS,kBAAM+F,EAAWia,SAAS,sBACnC30B,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,YACtDqK,YAAY,2CAEd,gBAAC,KAAK9J,KAAN,CACEpM,MAAM,iBACNO,QAAS,kBAAM+F,EAAWia,SAAS,iBACnC30B,KAAM,kBAAM,gBAAC,KAAKqlB,KAAN,CAAWxiB,MAAOsM,EAAMX,OAAOmJ,KAAMsI,KAAK,UACtDqK,YAAY,4D,uBCPP9O,MA7DqByB,aAAH,ylCAgEF,CAC7BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOiyB,kBAC/BlzB,cAAe,CACbgL,SAAU,UAEZrL,UAAW,CACT7V,KAAM,CAACwV,GAAW,4BAClBxS,KAAM,CAACwS,GAAW,8BAClBnP,SAAU,CAACmP,GAAW,8BAA+BI,GAAU,iCCXpDG,MA7DqByB,aAAH,gkCAgEF,CAC7BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOkyB,kBAC/BnzB,cAAe,CACb9d,GAAI,WACJ8oB,SAAU,YC/DRooB,GAAe9xB,aAAH,gNAeZ+xB,GAAgD,CACpD,KAAS,SACT,IAAQ,aAGK,SAASC,KAAkB,IAAD,UACjC5nC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1G,cAC5C0I,EAAWV,KACXjE,EAAkBuO,KAExB,EAAgDpf,YAAe,GAA/D,WAAO05B,EAAP,KAAyBC,EAAzB,KACQ/a,EAASW,aAAgBuxB,GAAc,CAC7C1yB,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,OAF1Cgf,KAMR,OACE,gCACE,gBAAC2E,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,OAAQ8e,QAElF,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,qCAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAO8B,KAAK3B,MAC3BD,MAAK,SAAEQ,EAAMV,OAAO8B,OAAf,SAAE,EAAmB5B,YAArB,EAAE,EAA0Bsf,WACjC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,OAAQkE,OAAO4a,SAG/D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO8B,KAAK3B,MAAQ,QAAU,QACnDO,EAAMV,OAAO8B,KAAK3B,OAAS,yCAE9B,gBAAC9B,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC6iB,GAAA,EAAD,CACExG,UAAW,kBAAMse,GAAoB,IACrCve,QAASse,EACTj4B,MAAO,CAAEvC,SAAU,WAAYukB,MAAO,MAAO1hB,KAAM,MAAOgU,KAAM,GAChE+L,OACE,gBAAC,KAAKS,KAAN,CACE7L,QAAS,WACPijB,GAAoB,IAEtBxjB,MACE/M,EAAMV,OAAOmF,SAASjF,OACtBQ,EAAMV,OAAOmF,SAASjF,MAAMsf,aAAc6oB,GACtCA,GAAmB3nC,EAAMV,OAAOmF,SAASjF,MAAMsf,YAC/C,SAENzmB,MAAO,CAAEzC,MAAO,OAAQ+W,KAAM,GAC9B0N,MAAO,kBACL,gBAAC,KAAK2D,KAAN,CACEpF,KACE5Y,EAAMV,OAAOmF,SAASjF,OACtBQ,EAAMV,OAAOmF,SAASjF,MAAMsf,aAAc6oB,GACtCA,GAAmB3nC,EAAMV,OAAOmF,SAASjF,MAAMsf,YAC/C,oBAOd,gBAAC,KAAK3F,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,OACxDwwB,GAAoB,IAEtBxjB,MAAM,YACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,iBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,QACxDwwB,GAAoB,IAEtBxjB,MAAM,SACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,wBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,OACxDwwB,GAAoB,IAEtBxjB,MAAM,QACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,oBAI9B5Y,EAAMV,OAAOmF,SAASjF,QAAU,CAAC,IAAM,MAAOsY,SAAS9X,EAAMV,OAAOmF,SAASjF,SAC9E,gBAAC2a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,kBACNte,QAASO,EAAMV,OAAOmF,SAAShF,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOmF,WAAf,SAAE,EAAuBjF,YAAzB,EAAE,EAA8Bsf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAYkE,OAAO4a,SAKrE,gBAACqE,GAAA,EAAS/J,KAAV,CACE4E,MAAM,SACN1lB,MAAO,CAAEzC,MAAO,QAChBuB,OAAQ6I,EAAMV,OAAOqF,SAASnF,MAAQ,UAAY,YAClD8N,QAAS,kBACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,YAAaC,EAAMV,OAAOqF,SAASnF,YAGnF,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOqF,SAASlF,MAAQ,QAAU,QACvDO,EAAMV,OAAOqF,SAASlF,OACrB,kEAGJ,gBAACyjB,GAAA,EAAS/J,KAAV,CACE4E,MAAM,qBACN1lB,MAAO,CAAEzC,MAAO,QAChBuB,OAAQ6I,EAAMV,OAAOoF,qBAAqBlF,MAAQ,UAAY,YAC9D8N,QAAS,kBACPlB,EACE9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAChC,wBACCC,EAAMV,OAAOoF,qBAAqBlF,YAM3C,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOoF,qBAAqBjF,MAAQ,QAAU,QACnEO,EAAMV,OAAOoF,qBAAqBjF,OACjC,uDAGJ,gBAACkf,GAAA,EAAD,MACA,gBAAC,KAAKzB,UAAN,+BAtGF,MAuGG1H,OAvGH,EAuGGA,EAAMjS,OAAO5M,KAAI,SAAC0O,GAAD,aAChB,gBAAC6d,GAAA,EAAS/J,KAAV,CACEpY,IAAG,SAAWsE,EAAM7O,GACpBunB,MAAO1Y,EAAMjH,MAAQ,GACrBjH,OACE,SAAA6I,EAAMV,OAAOiE,OAAO/D,QAApB,EAA2B7I,KAAI,qBAAGH,MAAashB,SAASzS,EAAM7O,IAC1D,UACA,YAEN8W,QAAS,4BACPlB,EACE9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAChC,SACA,SAAAC,EAAMV,OAAOiE,OAAO/D,QAApB,EAA2B7I,KAAI,qBAAGH,MAAashB,SAASzS,EAAM7O,IAA9D,SACIwJ,EAAMV,OAAOiE,OAAO/D,YADxB,EACI,EAA2Bwd,QAAO,qBAAGxmB,KAAgB6O,EAAM7O,MAD/D,wBAESwJ,EAAMV,OAAOiE,aAFtB,EAES,EAAqB/D,OAF9B,CAE2D6F,eAW7E,I,SAAM3K,GAASC,IAAWC,OAAO,CAC/BuF,MAAO,CACLqc,aAAc,EACd5mB,MAAO,UCzLI,SAASiyC,GAAiBlyC,GAA2B,IAAD,QACzD0J,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QACRngB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1G,cAC5C0I,EAAWV,KACXjE,EAAkBuO,KAElBwxB,EAAmBM,GAA4B,CACnDrzB,UAAW,SAACvU,GACVkM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,QACRiP,QAAS,aAGbzC,EAAS9B,GAAQF,MAAM1G,WAAWjG,SAClC0iB,KAGF3L,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAACD,EAAiCP,MACpFyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAE9D44B,EAAmBM,GAA4B,CACnDtzB,UAAW,SAACvU,GAAD,OACTyV,uBAAsB,WACpBvJ,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,QACRiP,QAAS,aAGbzC,EAAS9B,GAAQF,MAAM1G,WAAWjG,SAClC0iB,QAGJ3L,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAACD,EAAiCP,MACpFyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAG9DwtB,EAAYC,0BAClB1lC,aAAgB,WACVylC,GACFjwB,EAAS9B,GAAQF,MAAM1G,WAAWjG,WAEnC,CAAC2O,EAAUiwB,IAEd,IAAM1B,EAAS/jC,eAAkB,sCAAAG,EAAAC,OAAA,4DAC3BgJ,EAAMZ,YAAN,EAAgB5I,GADW,kCAAAO,EAAA,MAEvB0wC,EAAiB9yB,OAAO,CAC5Bne,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3B4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBiF,SAAUzE,EAAMV,OAAOmF,SAASjF,MAChCkF,qBAAsB1E,EAAMV,OAAOoF,qBAAqBlF,MACxD8f,SAAQ,SAAEtf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4B7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,MAC7DmO,WAAY3E,EAAMV,OAAOqF,SAASnF,SATP,+CAAAzI,EAAA,MAYvBywC,EAAiB7yB,OAAO,CAC5BsB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBiF,SAAUzE,EAAMV,OAAOmF,SAASjF,MAChCkF,qBAAsB1E,EAAMV,OAAOoF,qBAAqBlF,MACxD8f,SAAQ,SAAEtf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4B7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,MAC7DmO,WAAY3E,EAAMV,OAAOqF,SAASnF,SAnBP,8DAsB9B,CACDgoC,EADC,MAED//B,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2B3O,GAC3BwJ,EAAMV,OAAOoF,qBAAqBlF,MAClCQ,EAAMV,OAAOmF,SAASjF,MACtBQ,EAAMV,OAAO8B,KAAK5B,MALjB,SAMDQ,EAAMV,OAAOiE,aANZ,EAMD,EAAqB/D,MACrBQ,EAAMV,OAAOqF,SAASnF,MACtBQ,EAAMV,OAAOlB,KAAKoB,MARjB,SASDQ,EAAMZ,eATL,EASD,EAAgB5I,GAChBixC,IAGI/M,EAAa9jC,WAAc,iBAAM,CAAC,IAAK,OAAM,IACnD,OACE,gBAACujC,GAAD,CACEptB,MAAO,SAAA/M,EAAMZ,WAAN,EAAgB5I,GAAK,cAAgB,aAC5C6I,KAAMA,EACNq7B,WAAYA,EACZva,QAAO,8GAAE,WACPA,OAEFlU,QAASu7B,EAAiBv7B,SAAWw7B,EAAiBx7B,QACtDouB,aAAcM,EACdP,YAAY,QAEZ,gBAACwN,GAAD,OClGN,IAAMI,GAAoBpyB,aAAH,iUAqBjBqyB,GAA8BryB,aAAH,wgBA2B3BsyB,GAA8BtyB,aAAH,kdA2BlB,SAASuyB,KAAqB,IAAD,IACpCnoC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC69B,EAAOx8B,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1G,cAC3C0I,EAAWV,KACjB,EAAmCyK,aAAgB6xB,GAAmB,CACpEhzB,UAAW,CACTiB,WAAYhS,OAAOjE,EAAM0H,sBAFrB8N,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjByP,EAAQC,sBACRsR,EAAYC,0BAElB1lC,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IACf,MAAmC3G,aAAsBuzB,IAAlDI,EAAP,YACA,EAAmC3zB,aAAsBwzB,IAAlDI,EAAP,YAEA1xC,aAAgB,WACK,sBAAfk0B,EAAM1sB,MACRid,MAED,CAACA,EAASyP,EAAM1sB,OAEnB,IAAMmqC,EAAuB9wB,GAAe3Y,EAAW0pC,kBACvD,OACE,gBAAC1Y,GAAD,CACEz3B,MAAOqC,GAAOG,UACdmoB,sBAAuB,CAACtoB,GAAOe,QAAS,CAAEqC,gBAAiB,UAC3DkvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW1R,KAEhE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,EAASzQ,MAAOwE,EAAM8H,MAAMX,OAAOgB,SACzD,gBAACixB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUpZ,MAAX,aACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,QACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,YACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,WALJ,MAQG7jB,GARH,SAQGA,EAAMrQ,WART,SAQG,EAAgB9D,kBARnB,EAQG,EAA6B1K,KAAI,SAAC+M,GAAD,OAChC,gBAAC20B,GAAD,CACEC,YAAa,CACXva,MAAO,SACPjgB,gBAAiB,MACjBwP,QAAS,kCAAAvW,EAAAC,OAAA,kEAAAD,EAAA,MACwBuxC,EAAyB,CACtDtzB,UAAW,CAAExe,GAAIyN,OAAOP,EAAWlN,QAF9B,gBAKP,OAJc+e,EADP,EACCC,OAIR,SAAID,EAAQkzB,mBAAZ,SAAI,EAA0B/yB,SAA1B,EAAkCpE,QACpClF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,GAAF,SAAEA,EAAQkzB,uBAAV,EAAE,EAA0B/yB,OAAO,GAC1C7G,QAAS,WATR,+DAgBX,gBAACuqB,GAAA,EAAUG,IAAX,CACEjsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAWrD,QAAQqD,KAE5C7K,cAAc,QAEd,gBAACugC,GAAA,EAAUI,KAAX,KAAiB91B,EAAWtF,MAC5B,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,IAA0B31B,EAAWtC,MACrC,gBAACg4B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAE31B,EAAWe,UACpC,gBAAC20B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAACqP,GAAA,EAAD,CACEC,cAAe,WACbN,EAAyB,CACvBrzB,UAAW,CACTxe,GAAIyN,OAAOP,EAAWlN,IACtBkO,sBAAuBhB,EAAWgB,yBAIxClF,QAASkE,EAAWgB,8BAQhC,gBAACujB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLjG,QAASu2B,EACT3vB,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM1G,WAAWrD,SAAQ,KACzD0d,MAAM,oBAER,gBAAC,GAAD,CACE1e,KAAM+oC,EAAK/oC,KACX8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM1G,WAAWrD,SAAQ,QAMjE,IAAM3F,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACNnG,QAAS,QAEX/K,QAAS,CACPwoB,SAAU,GAEZzB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,4DC3MG,SAAS+yC,GAAkBjzC,GACxC,IAAQ6J,EAAmC7J,EAAnC6J,MAAO6wB,EAA4B16B,EAA5B06B,SAAUhxB,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QAEzBnT,EAAMpW,WACZ,OACE,gBAAC+oB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW3S,EAAM4S,UAAW,kBAAMkO,MACxC,gBAACP,GAAA,EAAOI,MAAR,qBACA,gBAACJ,GAAA,EAAOsB,QAAR,CAAgB7oB,MAAO,CAAEob,QAAS,GAAI5d,OAAQ,MAC5C,gBAAC,KAAD,CACEwC,MAAO,CAAEsU,KAAM,GAGfk8B,gBAAiBC,KACjBC,aAAcvpC,EACdwpC,aAAW,EAGXh8B,IAAKA,KAGT,gBAAC4S,GAAA,EAAOM,QAAR,KACE,gBAAChT,EAAA,EAAD,CAAQI,QAAS,kBAAM6S,MAAvB,UACA,gBAACjT,EAAA,EAAD,CACEI,QAAS,WACW,IAAD,EAAbN,EAAI/V,SACNo5B,EAAQ,SAACrjB,EAAI/V,cAAL,EAAC,EAAagyC,cAH5B,WC3BV,IAAMC,GAAgB,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAkFF,IAAMxuC,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdoF,MAAO,CACLqc,aAAc,GAEhB/gB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,GAAI5mB,OAAQ,KAChDkX,MAAO,CACLvR,MAAO,QACPD,SAAU,GACViS,WAAY,OACZgP,aAAc,GACdrhB,UAAW,UAGbguC,SAAU,CACRtzC,OAAQ,GACRD,MAAO,GACPomB,OAAQ,EACRjhB,WAAY,SACZiB,eAAgB,YC9HLotC,GD4Bf,SAAqBzzC,GACnB,IAAQ6J,EAA8C7J,EAA9C6J,MAAOuN,EAAuCpX,EAAvCoX,MAAOs8B,EAAgC1zC,EAAhC0zC,WAAYhZ,EAAoB16B,EAApB06B,SAAU5wB,EAAU9J,EAAV8J,MAEtC6pC,GAAiBJ,GAAcpxB,SAAStY,GAC9C,EAAsC5I,YAAe,GAArD,WAAO2yC,EAAP,KAAqBC,EAArB,KACA,OACE,gCACE,gBAACZ,GAAD,CACEvpC,KAAMkqC,EACN/pC,MAAOA,EACP6wB,SAAQ,+GAAE,SAAC70B,GACT60B,EAAS70B,GACTguC,GAAc,MAEhBrpB,QAAS,kBAAMqpB,GAAc,MAE/B,gBAACzoB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,KAAiBnQ,GAEjB,gBAACgU,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAAEqD,cAAe,MAAOqgB,SAAU,SACpDmtB,GAAcvyC,KAAI,SAAC6E,GAAD,OACjB,gBAACmlC,GAAA,EAAD,CAAiBrzB,QAAS,kBAAM+iB,EAAS70B,KACvC,gBAACiuC,GAAA,EAAD,CACEpxC,MAAO,CACLqC,GAAOyuC,SACP,CAAEztC,cAAe,OACjBF,IAAUgE,EAAQ,CAAE5D,YAAa,EAAGE,YAAa,SAAY,KAG/D,gBAAC6B,EAAA,EAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiB4rC,KAAWluC,GAAOoN,QAAQ,IAAKD,SAGpD,gBAAChL,EAAA,EAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiBtC,KAGrB,gBAACmC,EAAA,EAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiB4rC,KAAWluC,GAAOkN,OAAO,IAAKC,cAMzD,gBAACg4B,GAAA,EAAD,CAAiBrzB,QAAS,kBAAMk8B,GAAc,KAC5C,gBAACC,GAAA,EAAD,CACEpxC,MAAO,CACLqC,GAAOyuC,SACP,CAAErrC,gBAAiBwrC,EAAgB9pC,EAAQ,WAC3C8pC,EAAgB,CAAE1tC,YAAa,EAAGE,YAAa,SAAY,KAG7D,gBAAC6tC,GAAA,EAAD,CAAevrC,KAAK,MAAMC,KAAM,OAItC,gBAACigB,GAAA,EAAD,CAAYC,KAAM9e,EAAQ,QAAU,QAASA,GAAS4pC,ME9D9D,IAAM3uC,GAASC,IAAWC,OAAO,CAC/BmjB,MAAO,CACLvQ,WAAY,OACZrS,UAAW,SACXK,MAAO,QACPD,SAAU,GACVmY,UAAW,GAEbk2B,iBAAkB,CAChB/zC,OAAQ,IACRD,MAAO,IACP0C,aAAc,EACdsD,YAAajB,IAAWmgB,cACxBhf,YAAa,UACbgC,gBAAiB,UACjB/B,UAAW,UAEb8tC,iBAAkB,CAChBj0C,MAAO,GACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAERmxC,kBAAmB,CACjBl0C,MAAO,EACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAERoxC,kBAAmB,CACjBn0C,MAAO,EACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAGRqxC,cAAe,CACbp0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,EACL8rB,qBAAsB,EACtBD,oBAAqB,GAEvB2lB,cAAe,CACbr0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2X,OAAQ,EACRikB,wBAAyB,EACzBD,uBAAwB,GAE1ByY,gBAAiB,CACft0C,MAAO,MACP0C,aAAc,EACdzC,OAAQ,MACR4mB,eAAgB,KAChB3D,iBAAkB,KAClBhb,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,OAEP0xC,iBAAkB,CAChBv0C,MAAO,MACPC,OAAQ,MACRyC,aAAc,EACdwF,gBAAiB,UACjB2e,eAAgB,KAChB3D,iBAAkB,KAClBhjB,SAAU,WACV2C,IAAK,OAEP2xC,iBAAkB,CAChBx0C,MAAO,MACPC,OAAQ,MACRyC,aAAc,EACdmkB,eAAgB,KAChB3e,gBAAiB,UACjBgb,iBAAkB,KAClBhjB,SAAU,WACV2C,IAAK,OAEP4xC,cAAe,CACbz0C,MAAO,MACPC,OAAQ,KACRC,SAAU,WACV2X,OAAQ,GACR4M,MAAO,EACP/hB,aAAc,EACdwF,gBAAiB,WAEnBqrC,SAAU,CACRtzC,OAAQ,GACRD,MAAO,GACPomB,OAAQ,KAIGsuB,GAnIf,SAAsB30C,GACpB,IAAQ6K,EAAiC7K,EAAjC6K,aAAcD,EAAmB5K,EAAnB4K,eACduH,EAAU8D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCzC,MACFyiC,EAAe/uC,KAAMgF,GAAcoI,QAAQ,IAAKD,MACtD,OACE,gBAAChL,EAAA,EAAD,KACE,gBAAC8rC,GAAA,EAAD,CAASpxC,MAAOqC,GAAOkvC,kBACrB,gBAACjsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOsvC,cAAe,CAAElsC,gBAAiBgK,EAAMX,OAAOsT,YACpE,gBAAC9c,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOwvC,mBACrB,gBAACvsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOyvC,oBACrB,gBAACxsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO0vC,oBACrB,gBAACzsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO2vC,cAAe,CAAEvsC,gBAAiByC,MACvD,gBAAC5C,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOuvC,cAAe,CAAEnsC,gBAAiBgK,EAAMX,OAAOsT,YACpE,gBAAC9c,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOmvC,iBAAkB,CAAE/rC,gBAAiBysC,MAC1D,gBAAC5sC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOovC,kBAAmB,CAAEhsC,gBAAiBysC,MAC3D,gBAAC5sC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOqvC,kBAAmB,CAAEjsC,gBAAiBysC,OAE7D,gBAACjsC,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqjB,OAApB,WCGN,IAAMrjB,GAASC,IAAWC,OAAO,CAC/BmjB,MAAO,CACLvQ,WAAY,OACZrS,UAAW,SACXK,MAAO,QACPD,SAAU,GACVmY,UAAW,GAEbk2B,iBAAkB,CAChB/zC,OAAQ,IACRD,MAAO,IACP0C,aAAc,EACdsD,YAAajB,IAAWmgB,cACxBhf,YAAa,UACbC,UAAW,UAGbiuC,cAAe,CACbp0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,EACL8rB,qBAAsB,EACtBD,oBAAqB,GAEvBulB,iBAAkB,CAChBj0C,MAAO,GACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAERmxC,kBAAmB,CACjBl0C,MAAO,EACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAERoxC,kBAAmB,CACjBn0C,MAAO,EACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACV2X,OAAQ,EACR9U,KAAM,IAERsxC,cAAe,CACbr0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2X,OAAQ,EACRikB,wBAAyB,EACzBD,uBAAwB,GAE1ByY,gBAAiB,CACft0C,MAAO,MACPC,OAAQ,MACR4mB,eAAgB,KAChB3e,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,MACLE,KAAM,MAERwxC,iBAAkB,CAChBv0C,MAAO,MACPC,OAAQ,MACRiI,gBAAiB,UACjB2e,eAAgB,KAChB3mB,SAAU,WACV2C,IAAK,MACLE,KAAM,OAERyxC,iBAAkB,CAChBx0C,MAAO,MACPC,OAAQ,MACR4mB,eAAgB,KAChB3e,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,MACLE,KAAM,OAER0xC,cAAe,CACbz0C,MAAO,MACPC,OAAQ,KACRC,SAAU,WACV2X,OAAQ,GACR4M,MAAO,EACP/hB,aAAc,EACdwF,gBAAiB,WAEnBqrC,SAAU,CACRtzC,OAAQ,GACRD,MAAO,GACPomB,OAAQ,KAIGwuB,GA9Hf,SAAoB70C,GAClB,IAAQ6K,EAAiC7K,EAAjC6K,aAAcD,EAAmB5K,EAAnB4K,eAChBgqC,EAAe/uC,KAAMgF,GAAcoI,QAAQ,IAAKD,MACtD,OACE,gBAAChL,EAAA,EAAD,KACE,gBAAC8rC,GAAA,EAAD,CAASpxC,MAAO,CAACqC,GAAOkvC,iBAAkB,CAAE9rC,gBAAiB,aAC3D,gBAACH,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOsvC,cAAe,CAAElsC,gBAAiB,cACvD,gBAACH,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOwvC,mBACrB,gBAACvsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOyvC,oBACrB,gBAACxsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO0vC,oBACrB,gBAACzsC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAO2vC,cAAe,CAAEvsC,gBAAiByC,MACvD,gBAAC5C,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOuvC,cAAe,CAAEnsC,gBAAiB,cACvD,gBAACH,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOmvC,iBAAkB,CAAE/rC,gBAAiBysC,MAC1D,gBAAC5sC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOovC,kBAAmB,CAAEhsC,gBAAiBysC,MAC3D,gBAAC5sC,EAAA,EAAD,CAAMtF,MAAO,CAACqC,GAAOqvC,kBAAmB,CAAEjsC,gBAAiBysC,OAE7D,gBAACjsC,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqjB,OAApB,S,qkBCyIN,I,GAAMrjB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnBiP,MAAO,CACLjX,SAAU,WACVyF,SAAU,GACV9C,IAAK,IACL+U,WAAY,OACZhS,MAAO,QACP7C,KAAM,EACNqC,YAAa,GACbpF,MAAO,OACPouB,cAAe,GACf7oB,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZ40C,YAAY,SACP9vC,IAAW4S,oBADL,IAETvR,eAAgB,SAChBjB,WAAY,SACZW,cAAe,WAEjBD,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CACJvR,QAAS,EACTE,gBAAiB,GACjB8I,eAAgB,GAChB7mB,MAAO,QAET80C,WAAY,CACV50C,SAAU,WACV2X,OAAQ,GACR4M,MAAO,GACPvc,gBAAiB,QACjBxF,aAAc,GACdmb,QAAS,KAIEk3B,GArMR,SAA4Bh1C,GACjC,IAAQi1C,EAAiCj1C,EAAjCi1C,WAAYC,EAAqBl1C,EAArBk1C,UAAWrrC,EAAU7J,EAAV6J,MAC/B,EAA4B5I,aAA5B,WAAOZ,EAAP,KAAe80C,EAAf,KACM9V,EAAmBp+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjC49B,EANiC,OAOvCh9B,QAAQC,IAAI,gBAAiB+8B,EAAS7+B,QACtC60C,EAAU,CACRlzC,IAAKk9B,EAAS7+B,OAAO0D,SACrB9B,IAAKi9B,EAAS7+B,OAAOg+B,YAVgB,kDAavCn8B,QAAQC,IAAR,MAbuC,mEAexC,IAGHnB,aAAgB,WACI,OAAd4I,EAAM3H,KAA6B,MAAb2H,EAAM3H,KAC9Bm9B,MAED,CAACA,EAAkBx1B,EAAM3H,MAE5B,IAAM4E,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAE1CouC,EACJvrC,EAAM3H,KAAO2H,EAAM3H,IACf,CACED,IAAK4H,EAAM5H,IACXC,IAAK2H,EAAM3H,UAEbU,EAEN,EAAoC3B,YAAwB,GAA5D,WAAOo0C,EAAP,KAAoBC,EAApB,KACMC,EAAUt0C,SACd8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGfiuC,EAASv0C,SACb8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAIfkuC,EAAoBx0C,eAAkB,SAACob,GAC3Ci5B,GAAa,IACZj5B,EAAUm5B,EAASD,GAASj0C,QAAQqG,OAAM,kBAAM2tC,GAAa,QAC7D,IAEH,EAAkCr0C,YAAwB,GAA1D,WAAOs9B,EAAP,KAAmBC,EAAnB,KAEA,OACE,gBAAC,KAAD,CACEkX,YAAa,EACbv1C,SAAU,CACR8C,EAAG,EACHF,EAAG,GAEL9C,MAAM,OACNC,OAAO,OACPa,SAAQ,SACHiE,IAAW4S,oBADR,IAENmG,WAAY,KAEdzd,OAAQ80C,EACR/0C,OAAQA,GAAU+0C,EAClBO,YAAa,WACNN,IACHI,GAAkB,GAClBjX,GAAY,KAGhB/9B,UAAW,SAACm1C,GAAO,IAAD,IAChB,SAAAL,EAAQj0C,UAAR,EAAiBuG,OACjB,SAAA2tC,EAAOl0C,UAAP,EAAgBuG,OAChBytC,GAAa,GACbG,GAAkB,GAClBA,GAAkB,GAClBjX,GAAY,GACZx+B,EAAM06B,SAAS,CACb4D,UAAWsX,EAAE1zC,IACb8B,SAAU4xC,EAAE3zC,OAGhBzB,aAAW,GAET40C,EACA,gBAACptC,EAAA,EAAD,CAAMtF,MAAOqC,GAAO+vC,YAAa5xC,cAAc,QAC7C,gBAAC6hB,GAAA,EAAD,CACE7hB,cAAc,OACdwF,KAAMusC,GAAc,GACpBvyC,MAAO,CACLmD,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBs5B,OAAQ,IAEVv2B,KAAM81B,EAAa,aAAe,6BAEpC,gBAAC,KAAS51B,KAAV,CACEjG,MAAO,CACLkD,SAAUsvC,GAAa,GACvB/0C,SAAU,WACV2X,OAAQ,MACR7X,MAAO,OACP6G,QAASA,EAAQxF,QACjBkE,UAAW,SACXK,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,KAGnB0vC,EAAOnzC,IAAIupB,QAAQ,GAjBtB,IAiB2B4pB,EAAOlzC,IAAIspB,QAAQ,KAlCvC,KAuCX,gBAAC7N,GAAA,EAAD,CACEjb,MAAOqC,GAAOgwC,WACdp9B,QAAS,WACP0nB,MAGF,gBAAC2U,GAAA,EAAD,CAAevrC,KAAK,cAAcC,KAAM,QChJ1CuhC,GAAoBhqB,aAAH,wGAYR,SAAS41B,GAAa71C,GAAuB,IAAD,EACxC81C,EAAmB91C,EAA5BsW,QACFjM,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5CiH,EAAWV,KACjB,EAA0ByK,aAAgBypB,IAAlCpqB,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAEdrV,aAAgB,WAAO,IAAD,IACZ,MAAJ4e,GAAA,SAAAA,EAAMsqB,eAAN,EAAmBxuB,QAAU,SAACtR,EAAMV,OAAOgB,aAAb,EAAyBd,OACzD4M,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,aAAcyV,EAAKsqB,YAAY,QAE1E,OAACtqB,OAAD,EAACA,EAAMsqB,YAAa1zB,EAApB,SAA8BpM,EAAMV,OAAOgB,iBAA3C,EAA8B,EAAyBd,QAE1D,IAAM6jC,EAAczsC,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZ20C,aAAiB,CACrCC,UAAU,EACVptB,KAAM,WAJ0B,OAE5BhJ,EAF4B,OAOlCnJ,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,SAAUwV,EAAO5H,OAPzB,gDASlC7V,QAAQC,IAAR,MATkC,kEAWnC,CAACqU,IAIJ,OAFAtU,QAAQC,IAAIiI,EAAMV,QAGhB,gCACE,gBAAC,KAAD,CACEid,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOkxC,aACvBxzC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAACjE,GAAA,EAAKf,MAAN,CAAYjT,MAAM,WAClB,gBAACgU,GAAA,EAAK8qB,MAAN,CACE5+B,OAAQ,CACNU,IAAK3N,EAAMV,OAAOmB,OAAOjB,OAAS,6BAEpC+7B,WAAW,QACXljC,MAAO,CAAEzC,MAAO,UAElB,gBAACmrB,GAAA,EAAKb,QAAN,CAAc7nB,MAAO,CAAE2D,eAAgB,aACrC,gBAACkR,EAAA,EAAD,CAAQI,QAAS+1B,GAAjB,aAIN,gBAAC,KAAD,CACE9mB,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOkxC,aACvBxzC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACE9M,KAAK,WACL5N,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,OAAQ8e,QAGtD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOlB,KAAKqB,OAAS,IACrD,gBAACogC,GAAD,CACErgC,MAAOQ,EAAMV,OAAOgB,WAAWd,MAC/B2Y,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,aAAcP,QAE/E,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgB,WAAWb,MAAQ,QAAU,QACzDO,EAAMV,OAAOgB,WAAWb,OAAS,MAKxC,gBAAC,KAAD,CACE8c,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOkxC,aACvBxzC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAO,CAACqC,GAAOsqB,KAAM,CAAEnvB,OAAQ,IAAKiF,kBAAmB,KAC3D,gBAAC,KAAKoiB,UAAN,iBACA,gBAAC6D,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CACLqb,UAAW,GACXsQ,cAAe,GACfhpB,YAAa,EACbC,aAAc,EACdgpB,SAAU,IAGZ,gBAAC,GAAD,CACEzkB,MACEQ,EAAMV,OAAO1H,IAAI4H,OAASQ,EAAMV,OAAOzH,IAAI2H,MACvC,CAAE5H,IAAKoI,EAAMV,OAAO1H,IAAI4H,MAAO3H,IAAKmI,EAAMV,OAAOzH,IAAI2H,YACrDjH,EAEN83B,SAAU,SAAC0a,GACT3+B,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAOgrC,EAAOpxC,YACxDyS,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAOgrC,EAAO9W,mBAOlE,gBAAC,KAAD,CACE1X,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOkxC,aACvBxzC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAACjE,GAAA,EAAKf,MAAN,CAAYjT,MAAM,aAClB,gBAACgU,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CACLqD,cAAe,MACfM,eAAgB,eAChBjB,WAAY,WACZnF,MAAO,SAGT,gBAACk2C,GAAD,CACEtrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,YAGvD,gBAACusC,GAAD,CACEvrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,eAM7D,gBAAC,KAAD,CACE+c,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOsxC,wBACvB5zC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAAC,GAAD,CACEmX,MAAM,gBACNs8B,WAAW,wEACX5pC,MAAOO,EAAMV,OAAOkB,aAAaf,OAAS,KAC1C4wB,SAAU,SAAC70B,GACT4Q,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,eAAgBvE,KAC1D4Q,EAAS9B,GAAQC,OAAO9B,gBAAgBjN,KAE1CgE,MAAOQ,EAAMV,OAAOkB,aAAahB,OAAS,aAG9C,gBAAC,KAAD,CACE+c,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOsxC,wBACvB5zC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAAC,GAAD,CACEmX,MAAM,eACNs8B,WAAW,qEACX5pC,MAAOO,EAAMV,OAAOiB,eAAed,MACnC4wB,SAAU,SAAC70B,GACT4Q,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,iBAAkBvE,KAC5D4Q,EAAS9B,GAAQC,OAAO1B,eAAerN,KAEzCgE,MAAOQ,EAAMV,OAAOiB,eAAef,OAAS,aAGhD,gBAAC,KAAD,CACE+c,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOuxC,qBACvB7zC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK7L,KAAN,CACEpM,MAAM,oBAENkW,YAAY,4GACZ3V,QAAS,kBACPlB,EACE9B,GAAQF,MAAMjF,SAASpF,SAAS,CAC9B,yBACCC,EAAMV,OAAOoB,sBAAsBlB,UAI1C7G,KAAM,kBACJ,gBAACuqB,GAAA,EAAD,CACE5V,QAAS,kBACPlB,EACE9B,GAAQF,MAAMjF,SAASpF,SAAS,CAC9B,yBACCC,EAAMV,OAAOoB,sBAAsBlB,UAI1CrI,OAAQ6I,EAAMV,OAAOoB,sBAAsBlB,MAAQ,UAAY,mBAMzE,gBAAC,KAAD,CACE+c,UAAWtQ,GAAWw/B,EACtBh1C,eAAgBiE,GAAOuxC,qBACvB7zC,OAAQ,CAAC,CAAE2I,IAAK,MAAOlL,OAAQ,IAAKD,MAAO,UAE3C,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK7L,KAAN,CACEpM,MAAM,SACNkW,YAAY,qEACZ3V,QAAS,kBACPlB,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,YAAaC,EAAMV,OAAOqB,SAASnB,UAE/E7G,KAAM,kBACJ,gBAACuqB,GAAA,EAAD,CACE5V,QAAS,kBACPlB,EACE9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,YAAaC,EAAMV,OAAOqB,SAASnB,UAGxErI,OAAQ6I,EAAMV,OAAOqB,SAASnB,MAAQ,UAAY,oBAUlE,I,MAAM9E,GAASC,IAAWC,OAAO,CAC/BgxC,aAAc,CACZnvB,eAAgB,GAChB7mB,MAAO,QAETo2C,wBAAyB,CACvBvvB,eAAgB,GAChBsT,UAAW,IACXn6B,MAAO,QAETq2C,qBAAsB,CACpBlc,UAAW,IACXtT,eAAgB,GAChB7mB,MAAO,QAETovB,KAAM,CACJvR,QAAS,GACT7d,MAAO,QAET0J,OAAQ,CACN2kB,SAAU,EACVzd,QAAS,OACT5Q,MAAO,QAETuK,MAAO,CACLqc,aAAc,EACd5mB,MAAO,QAETs2C,UAAW,CACTlxC,YAAa,K,qkBC9QjB,IAAMmxC,GAAyBv2B,aAAH,8UAsBtBw2B,GAA2Bx2B,aAAH,++BAqDf,SAASy2B,KAAwB,IAAD,EACvCrsC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5C8Z,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KAGTvG,EADM4lB,sBACazY,OAAnBnN,SACFkO,EAAa4Y,2BAEnB,EAA0B9V,aAAgBg2B,GAAwB,CAChEn3B,UAAW,CAAEiB,WAAYhS,OAAOkB,EAAS3O,OADnCgf,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAIdrV,aAAgB,WAAO,IAAD,EACpB,MAAI4e,GAAJ,SAAIA,EAAMrQ,WAAN,EAAgB3O,KAClBsB,QAAQC,IAAI,KAAMyd,EAAKrQ,UACvBiH,EAAS9B,GAAQF,MAAMjF,SAAS9E,QAAQmV,EAAKrQ,cAE9C,OAACqQ,OAAD,EAACA,EAAMrQ,SAAP,MAAiBqQ,GAAjB,SAAiBA,EAAMrQ,eAAvB,EAAiB,EAAgB3O,GAAI4V,IAExC,MAA2CsI,aAAsB03B,IAAjE,WAAOE,EAAP,KAA+Bl4B,EAA/B,KAEMumB,EAAS/jC,eAAkB,oFAAAG,EAAAC,OAAA,mDAC3Bu1C,GAAW,EADgB,EAY3BvsC,EAAMV,OATRlB,EAH6B,EAG7BA,KACAqC,EAJ6B,EAI7BA,OACAH,EAL6B,EAK7BA,WACA1I,EAN6B,EAM7BA,IACAC,EAP6B,EAO7BA,IACA2I,EAR6B,EAQ7BA,aACAD,EAT6B,EAS7BA,eACAG,EAV6B,EAU7BA,sBACAC,EAX6B,EAW7BA,UAGE,SAACvC,EAAKoB,SAAL,EAAY8R,SAAU,SAAAlT,EAAKoB,YAAL,IAAY8R,QAAS,KAC9Ci7B,GAAW,EACXngC,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,OAAQ,wBAGpDmsC,EAnB0B,4CAAAx1C,EAAA,MAqBNu1C,EAAuB,CAC1Ct3B,UAAW,CACTxe,GAAIyN,OAAM,MAACkB,OAAD,EAACA,EAAU3O,IACrB4H,KAAMA,EAAKoB,MACX5H,IAAKA,EAAI4H,MACT3H,IAAKA,EAAI2H,MACTiB,OAAQA,EAAOjB,OAAS,KACxBgB,aAAcA,EAAahB,MAC3Be,eAAgBA,EAAef,MAC/BkgC,aAAcz7B,OAAM,MAAC3D,GAAD,SAACA,EAAYd,YAAb,EAAC,EAAmBhJ,IACxCkK,wBAAyBA,EACzBC,WAAYA,MAhCW,UAoCrB,OAfA4U,EArBqB,SAoC3B,SAAAA,EAAQC,OAAR,WAAcg3B,iBAAd,WAA8B/2B,cAA9B,EAA2C9e,KAAI,YAAyB,IAAtBwJ,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACvD,OAAQO,GACN,IAAK,aACL,IAAK,gBACH,OAAOiM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,aAAcR,KACtE,IAAK,SACH,OAAOwM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,SAAUR,KAClE,IAAK,gBACH,OAAOwM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,eAAgBR,KACxE,IAAK,kBACH,OAAOwM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,iBAAkBR,KAC1E,IAAK,2BACH,OAAOwM,EACL9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,wBAAyBR,KAEnE,IAAK,OACH,OAAOwM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,OAAQR,KAChE,IAAK,YACH,OAAOwM,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,WAAYR,KACpE,QACE,OAAO,SAxDc,MA2DvB2V,GA3DuB,SA2DvBA,EAAQC,OA3De,SA2DvB,EAAcg3B,iBA3DS,SA2DvB,EAA8B92B,UAA9B,EAAsCpE,OA3Df,0CA4DlBlF,EACL9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcg3B,qBAAhB,EAAE,EAA8B92B,OAAO,GAC9C7G,QAAS,YA/DY,eAmEvB,MAAC0G,GAAD,SAACA,EAAQC,OAAT,SAAC,EAAcg3B,iBAAf,SAAC,EAA8B/2B,cAA9B,EAA2CnE,QAE9C,SAAIiE,EAAOC,OAAX,SAAI,EAAag3B,iBAAb,EAA6BrnC,WAC/BiH,EACE9B,GAAQC,OAAOzB,YAAf,SACMmW,EAAYxX,iBAAmB,IADrC,MAEK8N,GAFL,SAEKA,EAAQC,OAFb,SAEK,EAAcg3B,qBAFnB,EAEK,EAA8BrnC,YAGrCiH,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,QACRiP,QAAS,aAGbwE,EAAWkiB,UAlFY,kBAqFpB,MArFoB,kCAuF3BnpB,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WA1Fc,iCA+FxB,MA/FwB,mEAgG9B,CACD7O,EAAMV,OACN8M,EACAkgC,EAHC,MAIDnnC,OAJC,EAIDA,EAAU3O,GACVyoB,EAAYxX,gBACZ4L,IAGF,OACE,gCACE,gBAACyM,EAAA,EAAD,CAAaC,eAAa,EAACvkB,MAAOyjB,EAAYnX,MAAMX,OAAOgB,OAAQ6J,QAAS/F,IAC5E,gBAAC6jB,GAAD,CACEz3B,MAAO,CAAEyF,gBAAiB,WAC1BklB,sBAAuBtoB,GAAOe,SAE9B,gBAAC+vC,GAAD,CAAcv/B,QAASA,IACvB,gBAAC,GAAD,CAAM5T,MAAOqC,GAAO4E,QAClB,gBAAC4N,EAAA,EAAD,CACEG,KAAK,YACLF,SAAUiH,EAASnI,QACnBqB,QAASqtB,EACT1uB,QAASmI,EAASnI,SAJpB,WAcV,IAAMvR,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN7O,gBAAiB,QACjB0I,QAAS,QAEX/K,QAAS,CACP+K,QAAS,OACTyd,SAAU,EACVloB,UAAW,SACXhB,WAAY,SACZnF,MAAO,OACPy5B,SAAU,IACV5b,QAAS,IAEX1G,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET0J,OAAQ,CACN1J,MAAO,OACP4mB,aAAc,IAEhBrc,MAAO,CACLqc,aAAc,KCrQH,SAASgvB,KAAgB,IAAD,QAC/BxrC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzI,SAC5CyK,EAAWV,KAEjB,OACE,gCACE,gBAACyO,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,MACzBua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,OAAQ8e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,IAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,eACNte,QAASO,EAAMV,OAAO4C,aAAazC,MACnCD,MAAOQ,EAAMV,OAAO4C,aAAa1C,MACjCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,eAAgB8e,QAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO4C,aAAazC,MAAQ,QAAU,QAC3DO,EAAMV,OAAO4C,aAAazC,OAAS,IAGtC,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAO8C,MAAM3C,MAC5BD,MAAK,SAAEQ,EAAMV,OAAO8C,QAAf,SAAE,EAAoB5C,YAAtB,EAAE,EAA2Bsf,WAClCiE,YAAY,WACZhJ,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,QAASkE,OAAO4a,SAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO8C,MAAM3C,MAAQ,QAAU,QACpDO,EAAMV,OAAO8C,MAAM3C,OAAS,IAG/B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,YACNte,QAASO,EAAMV,OAAO6C,SAAS1C,MAC/BD,MAAK,SAAEQ,EAAMV,OAAO6C,SAAS3C,YAAxB,EAAE,EAA6Bsf,WACpC1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,WAAYkE,OAAO4a,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO6C,SAAS1C,MAAQ,QAAU,QACvDO,EAAMV,OAAO6C,SAAS1C,OAAS,uCAGlC,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,YACNte,QAASO,EAAMV,OAAOsC,SAASnC,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOsC,eAAf,EAAE,EAAuBpC,MAAMsf,WACpC1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,WAAYkE,OAAO4a,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOsC,SAASnC,MAAQ,QAAU,QACvDO,EAAMV,OAAOsC,SAASnC,OACrB,gEAMV,I,MAAM/E,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACN1J,MAAO,OACP+W,KAAM,GAERxM,MAAO,CACLvK,MAAO,OACP4mB,aAAc,K,qkBCpFlB,I,MAAMiwB,GAAwB72B,aAAH,k/BAuDrB82B,GAAwB92B,aAAH,slCAsEZ,SAAS+2B,GAAkBh3C,GAA2B,IAAD,MAC1D0J,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QACR1Y,EAAkBuO,KAClBhW,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzI,SAC5CyK,EAAWV,KAEjB,EAAsCgJ,aAAsBg4B,IAA5D,WAAOE,EAAP,KAA4BhyC,EAA5B,KACA,EAAsC8Z,aAAsB+3B,IAA5D,WAAOI,EAAP,KAA4B1K,EAA5B,KAEM7sB,EAAW1e,eAAkB,WACjC,IAAI21C,GAAW,EAgBf,OAfKvsC,EAAMV,OAAOlB,KAAKoB,OAAS,IAAI8R,OAAS,IAC3Ci7B,GAAW,EACXngC,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,OAAQ,yBAGjDJ,EAAMV,OAAO4C,aAAa1C,OAAS,IAAI8R,OAAS,IACnDi7B,GAAW,EACXngC,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,eAAgB,gCAGzDJ,EAAMV,OAAOsC,SAASpC,QACzB+sC,GAAW,EACXngC,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,WAAY,mCAGlDmsC,IACP,CACDngC,EACApM,EAAMV,OAAOsC,SAASpC,MACtBQ,EAAMV,OAAOlB,KAAKoB,MAClBQ,EAAMV,OAAO4C,aAAa1C,QAGtBm7B,EAAS/jC,eAAkB,8DAAAG,EAAAC,OAAA,qDACiDgJ,EAAMV,OAA9ElB,EADuB,EACvBA,KAAM8D,EADiB,EACjBA,aAAcN,EADG,EACHA,SAAUO,EADP,EACOA,SAAUC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,qBAEjD+R,EAAW,SAAApU,EAAMZ,WAAN,EAAgB5I,GAAKq2C,EAAsBD,GAExDt3B,IAL2B,4CAAAve,EAAA,MAONqd,EAAS,CAC5BY,UAAU,SACJ,SAAAhV,EAAMZ,WAAN,EAAgB5I,GAChB,CAAEA,GAAIyN,OAAOjE,EAAMZ,SAAS5I,KAC5B,CAAEyf,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,MAH7C,IAIP4H,KAAMA,EAAKoB,MACX0C,aAAcA,EAAa1C,MAC3B2C,SAAUA,EAAS3C,MACnBoC,SAAUA,EAASpC,MACnB4C,MAAOA,EAAM5C,MACb6C,qBAAsBA,EAAqB7C,WAjBpB,UAOrB+V,EAPqB,cAqBrBrV,EAAU,SAAAF,EAAMZ,WAAN,EAAgB5I,GAAhB,MAAqB+e,GAArB,SAAqBA,EAAQC,WAA7B,EAAqB,EAAc+V,YAAnC,MAAiDhW,GAAjD,SAAiDA,EAAQC,WAAzD,EAAiD,EAAcs3B,cArBpD,SAuBvB5sC,EAASuV,eAAT,EAAsBnE,OAvBC,wBAwBzBpR,EAAQuV,YAAY3U,SAAQ,YAAyB,IAAtBX,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACpC,OAAQO,GACN,IAAK,YACH,OAAOiM,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,WAAYR,KACjE,IAAK,OACH,OAAOwM,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,OAAQR,KAC7D,IAAK,YACH,OAAOwM,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,WAAYR,KACjE,IAAK,QACH,OAAOwM,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,QAASR,KAC9D,IAAK,yBACH,OAAOwM,EACL9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,uBAAwBR,KAE/D,IAAK,eACH,OAAOwM,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,eAAgBR,KACrE,QACE,OAAO,SAzCY,2BA+C3B,MAAIM,GAAJ,SAAIA,EAASwV,SAAT,EAAiBpE,QACnBpR,EAAQwV,OAAO5U,SAAQ,SAAClB,GAAD,OACrBwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAIpE,MAAI3O,KAASyB,QACLA,EADY,MACJzB,OADI,EACJA,EAASyB,MACvByK,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,eAAgB+B,EAAMvD,KAC9ByQ,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAMzI,MAAMlE,UA9DJ,kDAiE3B2O,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WApEc,mEAyE9B,OACDpH,GADC,SACDA,EAAiBtC,eADhB,EACD,EAA2B3O,GAC3B4V,EACAwgC,EACAC,EACA1sB,EACAngB,EAAMV,OANL,SAODU,EAAMZ,eAPL,EAOD,EAAgB5I,GAChB8e,IAGIolB,EAAa9jC,WAAc,iBAAM,CAAC,IAAK,SAAQ,IAC/C2oC,EAAgB3oC,eAAkB,WACtCupB,IACA/T,EAAS9B,GAAQF,MAAMzI,MAAMlE,WAC5B,CAAC2O,EAAU+T,IAEd,OACE,gBAACga,GAAD,CACEptB,MAAO,SAAA/M,EAAMZ,WAAN,EAAgB5I,GAAK,gBAAkB,eAC9C6I,KAAMA,EACNq7B,WAAYA,EACZN,YAAY,OACZC,aAAcM,EACd1uB,QAASrR,EAAOqR,SAAWk2B,EAAOl2B,QAClCkU,QAASof,GAET,gBAAC,GAAD,OC7PN,IAAM7lB,GAAe9D,aAAH,qSAkBZm3B,GAAwBn3B,aAAH,mZAsBZ,SAASo3B,KAAgB,IAAD,YAC/BziC,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvCvK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzI,SAClD,EAAmCwU,aAAgBuD,GAAc,CAC/D1E,UAAW,CACTiB,WAAYhS,OAAOsG,EAAO7C,sBAFtB8N,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAMvB,EAAsB3G,aAAsBq4B,IAArCE,EAAP,YACM7gC,EAAWV,KAEX2wB,EAAYC,0BAElB1lC,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAEf,IAAM6xB,EAAiBz1B,GAAe3Y,EAAWquC,aAC3CC,EAAiB31B,GAAe3Y,EAAWuuC,aAEjD,OACE,gCACE,gBAACvd,GAAD,CACE9C,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW1R,KAEhE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,EAASzQ,MAAO+O,EAAOzC,MAAMX,OAAOgB,SAErD,MAAJqN,GAAA,SAAAA,EAAMrQ,WAAN,WAAgByU,SAAhB,EAAwBtI,OAAS,KAChC,gBAAC8Q,GAAD,CACErV,MAAM,aACNsV,SAAS,0DAIZ,MAAC7M,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgByU,SAAhB,EAAwBtI,OACxB,gBAAC8nB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUpZ,MAAX,aACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,gBACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,UAJJ,MAMG7jB,GANH,SAMGA,EAAMrQ,WANT,SAMG,EAAgByU,aANnB,EAMG,EAAwBjjB,KAAI,SAACgL,GAAD,OAC3B,gBAAC02B,GAAD,CACEt3B,IAAG,SAAWY,EAAMnL,GACpB2W,UAAW+/B,EACX5U,YAAa,CACXva,MAAO,SACPjgB,gBAAiB,MACjBwP,QAAS,gCAAAvW,EAAAC,OAAA,kEAAAD,EAAA,MACwBk2C,EAAY,CACzCj4B,UAAW,CAAExe,GAAIyN,OAAOtC,EAAMnL,QAFzB,gBAKP,OAJc+e,EADP,EACCC,OAIR,SAAID,EAAQ03B,cAAZ,SAAI,EAAqBv3B,SAArB,EAA6BpE,QAC/BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS2V,EAAO03B,YAAYv3B,OAAO,GACnC7G,QAAS,WATR,+DAgBX,gBAACuqB,GAAA,EAAUG,IAAX,CACE1gC,cAAc,OACdyU,QAAS,WACPlB,EAAS9B,GAAQF,MAAMzI,MAAMtB,QAAQsB,MAGvC,gBAACy3B,GAAA,EAAUI,KAAX,KAAiB73B,EAAMvD,MACvB,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAE13B,EAAMO,cAC/B,gBAACk3B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAE13B,EAAMC,gBAtCN,KA6CnC,gBAACqmB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdxQ,QAASo7B,EACTn1B,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMzI,MAAMtB,SAAQ,KACpD0d,MAAM,eAGV,gBAAC,GAAD,CAAa1e,KAAMW,EAAMX,KAAM8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMzI,MAAMtB,SAAQ,QAKzF,I,MAAM3F,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACPwoB,SAAU,GAEZzB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,qkBCxJG,SAASy3C,GAAkB33C,GACxC,IAAM43C,EAAa91B,GAAe3Y,EAAWkjC,mBACrCxiC,EAA4B7J,EAA5B6J,MAAO6wB,EAAqB16B,EAArB06B,SAAUje,EAAWzc,EAAXyc,OAEzB,OAAU,MAANA,KAAQo7B,WAAmC,YAAhB,MAANp7B,OAAA,EAAAA,EAAQo7B,WAE7B,gBAAC7vC,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,IACnB,gBAACwN,GAAA,EAAD,CACE9M,KAAK,WACLF,UAAWogC,EACXl1C,MAAO,CAAEokB,eAAgB,GACzBjd,MAAOA,EACPua,aAAc,SAACzJ,GAAD,OAAU+f,EAAS,SAAKje,GAAN,IAAc5S,MAAO8Q,MACrDyN,MAAO3L,EAAO2L,OAAS,KAEzB,gBAACO,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAI3C,MAAN7Q,KAAQo7B,WAAmC,aAAhB,MAANp7B,OAAA,EAAAA,EAAQo7B,WAE7B,gBAAC,KAAKr0B,KAAN,CACEpM,MAAOqF,EAAO2L,OAAS,GACvB5Q,UAAWogC,EACXtqB,YAAa7Q,EAAO6Q,YACpB5qB,MAAO,CAAEokB,eAAgB,GACzBpC,MAAO,kBAAM,gBAAC6I,GAAA,EAASka,QAAV,CAAkBjmC,OAAQqI,EAAQ,UAAY,eAC3D8N,QAAS,kBAAM+iB,EAAS,SAAKje,GAAN,IAAc5S,OAAQA,QAIzC,MAAN4S,KAAQo7B,WAAmC,aAAhB,MAANp7B,OAAA,EAAAA,EAAQo7B,WAE7B,gBAAC7vC,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,IACnB,gBAACwN,GAAA,EAAD,CACEhN,UAAWogC,EACX/tC,MAAOA,EACP6N,KAAK,WACL0M,aAAc,SAACzJ,GAAD,OAAU+f,EAAS,SAAKje,GAAN,IAAc5S,MAAO8Q,MACrDyN,MAAO3L,EAAO2L,OAAS,GACvB3D,aAAa,aACb/hB,MAAO,CAAEokB,eAAgB,KAE3B,gBAAC6B,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAI3C,MAAN7Q,KAAQo7B,WAAmC,UAAhB,MAANp7B,OAAA,EAAAA,EAAQo7B,WAE7B,gBAAC7vC,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,IACnB,gBAAC2wB,GAAD,CACEnwB,UAAWogC,EACXhQ,UAAWt5B,OAAOzE,GAClB6wB,SAAQ,+GAAE,SAAC6N,GAAD,OACR7N,EAAS,SACJje,GADG,IAEN5S,MAAO0+B,EAAKpf,iBAGhBf,MAAO3L,EAAO2L,OAAS,KAEzB,gBAACO,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAK9C,K,qkBC9DM,SAASwqB,KAA6B,IAAD,EAC5CztC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,yBAClD,EAA8B5O,WAC5B,MADF,WAAO82C,EAAP,KAAgBC,EAAhB,KAGA,EAA8B/2C,YAAe,GAA7C,WAAOg3C,EAAP,KAAgBC,EAAhB,KAEMzhC,EAAWV,KAEjB,OACE,yCACG1L,EAAMV,aADT,EACG,EAAc3I,KAAI,SAACoM,EAAMD,GACxB,OAEE,gBAAC,WAAD,CAAgB/B,IAAG,GAAKgC,EAAKyqC,UAAY1qC,GACvC,gBAACnF,EAAA,EAAD,CACEtF,MAAO,CACLmO,QAAS,OACT9K,cAAe,MACfX,WAAY,WAGd,gBAAC4C,EAAA,EAAD,CAAMtF,MAAO,CAAE4rB,SAAU,GAAKnG,WAAY,kBAAM6vB,EAAW,SAAK5qC,GAAN,IAAYD,aACpE,gBAACwqC,GAAD,CAAmBl7B,OAAQrP,EAAMvD,OAAW,MAAJuD,OAAA,EAAAA,EAAMvD,QAAS,GAAI6wB,SAAU,kBAAM,SAE7E,gBAACtG,GAAA,EAAD,CACEnR,KAAK,SACLtL,QAAS,kBACPlB,EACE9B,GAAQF,MAAM5E,sBAAsBvC,UAClCjD,EAAMV,OAAO0d,QAAO,SAAC1N,EAAGlL,GAAJ,OAAUA,IAAMtB,WAM9C,gBAAC6b,GAAA,EAAD,UAIN,gBAACgB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW07B,GACjB,gBAAC9tB,GAAA,EAAOI,MAAR,kBACA,gBAACJ,GAAA,EAAOsB,QAAR,KACE,gBAAC/G,GAAA,EAAD,CACE4D,MAAM,OACN1Q,KAAK,WACL7N,MAAK,MAAEkuC,OAAF,EAAEA,EAAS3vB,MAChBhE,aAAc,SAACzJ,GAAD,OAAUq9B,EAAW,SAAKD,GAAN,IAAe3vB,MAAOzN,QAG1D,gBAAC6J,GAAA,EAAD,CACE4D,MAAM,cACNgF,YAAY,WACZ1V,KAAK,WACL7N,MAAK,MAAEkuC,OAAF,EAAEA,EAASzqB,YAChBlJ,aAAc,SAACzJ,GAAD,OAAUq9B,EAAW,SAAKD,GAAN,IAAezqB,YAAa3S,QAGhE,gBAAC4S,GAAA,EAAS/J,KAAV,CACE4E,MAAM,2BACN1Q,KAAK,UACLC,QAAS,kBAAMqgC,EAAW,SAAKD,GAAN,IAAe95B,aAAY,MAAC85B,KAAS95B,gBAC9Dzc,OAAe,MAAPu2C,KAAS95B,WAAa,UAAY,eAG9C,gBAACgM,GAAA,EAAOM,QAAR,KACE,gBAAChT,EAAA,EAAD,CAAQI,QAAS,kBAAMqgC,EAAW,QAAlC,UACA,gBAACzgC,EAAA,EAAD,CACEI,QAAS,gBACgB/U,KAAZ,MAAPm1C,OAAA,EAAAA,EAAS5qC,OAEXsJ,EACE9B,GAAQF,MAAM5E,sBAAsBvC,UAClCjD,EAAMV,OAAO3I,KAAI,SAACwJ,EAAO6C,GAAR,OACfA,IAAQ0qC,EAAQ5qC,MAAQ4qC,EAAUvtC,OAKxCiM,EACE9B,GAAQF,MAAM5E,sBAAsBvC,UAApC,eACKjD,EAAMV,QADX,CAEEouC,MAINC,EAAW,QAnBf,UA0BJ,gBAAC1lB,GAAA,EAAIC,MAAL,CACE7oB,KAAMuuC,EACN57B,SAAO,EACP4G,KAAMg1B,EAAU,QAAU,OAC1BzlB,SAAU,CACRC,WAAY,GACZ5L,aAAc,IAEhBlS,QAAS,CACP,CACEsO,KAAM,SACNmF,MAAO,OACPzQ,QAAS,kBAAMqgC,EAAW,CAAEH,UAAW,aAEzC,CACE50B,KAAM,WACNmF,MAAO,OACPzQ,QAAS,kBAAMqgC,EAAW,CAAEH,UAAW,WAEzC,CACE50B,KAAM,UACNmF,MAAO,SACPzQ,QAAS,kBAAMqgC,EAAW,CAAEH,UAAW,cAEzC,CACE50B,KAAM,iCACNmF,MAAO,WACPzQ,QAAS,kBAAMqgC,EAAW,CAAEH,UAAW,eAG3CnlB,cAAe,gBAAGhpB,EAAH,EAAGA,KAAH,OAAcwuC,EAAWxuC,QClIlD,I,MAAMyuC,GAAuBl4B,aAAH,gNAapBm4B,GAAuBn4B,aAAH,6ZAmBX,SAASo4B,KAA+B,IAAD,MAC9ChuC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,yBAC5CiC,EAAkBuO,KAClB5J,EAAWV,KACT8J,EAASW,aAAgB23B,GAAsB,CACrD94B,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,OAF1Cgf,KAMFqU,EAAUpS,GAAe3Y,EAAWwoC,oBAC1C,EAAuC5yB,aAAsBq5B,IAA7D,WAAOE,EAAP,KAA2B75B,EAA3B,KAEAxd,aAAgB,WAAO,IAAD,EACpB,MAAI4e,GAAJ,SAAIA,EAAMrQ,WAAN,EAAgBK,uBAClB4G,EAAS9B,GAAQF,MAAM5E,sBAAsBnF,QAAQmV,EAAKrQ,SAASK,0BAEpE,OAACgQ,OAAD,EAACA,EAAMrQ,SAASK,sBAAuB4G,IAE1C,IAAM8hC,EAAat3C,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAE3Bk3C,EAAmB,CACvBj5B,UAAW,CACTm5B,OAAQlqC,OAAM,MAACuR,GAAD,SAACA,EAAMrQ,SAASK,4BAAhB,EAAC,EAAsChP,IACrDyf,WAAYhS,OAAM,MAACuR,GAAD,SAACA,EAAMrQ,eAAP,EAAC,EAAgB3O,IACnC4M,WAAYF,KAAKiM,UAAUnP,EAAMV,YANJ,OASjC8M,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,iBACTiP,QAAS,aAZoB,+CAgBjCzC,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WAnBoB,iEAuBlC,CACDo/B,EADC,MAEDz4B,GAFC,SAEDA,EAAMrQ,SAASK,4BAFd,EAED,EAAsChP,GAFrC,MAGDgf,GAHC,SAGDA,EAAMrQ,eAHL,EAGD,EAAgB3O,GAChBwJ,EAAMV,OACN8M,IAGF,OACE,gBAAC0jB,GAAD,KACE,gBAAC/O,GAAA,EAAD,CAAM1oB,MAAO,CAAEzC,MAAO,SACpB,gBAACmrB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,iCAElB,gBAACgU,GAAA,EAAKG,QAAN,KACE,gBAACusB,GAAD,OAGF,gBAAC1sB,GAAA,EAAKb,QAAN,KACE,gBAAChT,EAAA,EAAD,CACEC,UAAW0c,EACXxc,KAAK,YACLpB,QAASmI,EAASnI,QAClBqB,QAAS,kBAAM4gC,KACf71C,MAAO,CAAEzC,MAAO,SALlB,oBCzFV,IAAMw4C,GAAsBx4B,aAAH,+TAoBnBy4B,GAAsBz4B,aAAH,mvBAyCV,SAAS04B,KAAsB,IAAD,IACrCtuC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCgkC,EAAU3iC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OACpD,EAAmC0S,aAAgBi4B,GAAqB,CACtEp5B,UAAW,CACTiB,WAAYhS,OAAOjE,EAAM0H,sBAFrB8N,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjBjP,EAAWV,KACX2wB,EAAYC,0BAClB,EAAwC5nB,aAAsB25B,IAA9D,WAAOG,EAAP,KAA0BC,EAA1B,KAEMC,EAAej3B,GAAe3Y,EAAW6vC,mBAQ/C,OANA/3C,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAGb,gBAACyU,GAAD,CACEz3B,MAAOqC,GAAOG,UACdmoB,sBAAuB,CAACtoB,GAAOe,QAAS,CAAEqC,gBAAiB,UAC3DkvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW,kBAAM1R,QAEtE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,GAAWwiC,EAAWxiC,QAASzQ,MAAOwE,EAAM8H,MAAMX,OAAOgB,SAC/E,gBAACixB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUpZ,MAAX,kBACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,cACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,eACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,QACA,gBAACD,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,WANJ,MASG7jB,GATH,SASGA,EAAMrQ,WATT,SASG,EAAgBP,WATnB,EASG,EAAsBjO,KAAI,SAAC8M,GAAD,OACzB,gBAAC21B,GAAA,EAAUG,IAAX,CAAex4B,IAAG,OAAS0C,EAAIjN,IAC7B,gBAAC4iC,GAAA,EAAUI,KAAX,CACElsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAM3G,IAAIpD,QAAQoD,MAGpC,OAACA,OAAD,EAACA,EAAKnB,KAAN,MAAYmB,OAAZ,EAAYA,EAAKlB,MAAjB,WAA4BkB,OAA5B,EAA4BA,EAAKjB,SAAU6zB,KAAK,MAEnD,gBAAC+C,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACjB,MAAH51B,KAAKhB,gBAAkBi5B,aAA6B,IAAtBj4B,EAAIhB,gBAAwB,cAAgB,KAE7E,gBAAC22B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,UAA4B51B,OAA5B,EAA4BA,EAAKf,aACjC,gBAAC02B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAE51B,EAAId,SAC7B,gBAACy2B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC,IAAD,CACEsP,cAAe,gCAAA5xC,EAAAC,OAAA,kEAAAD,EAAA,MACkBy3C,EAAkB,CAC/Cx5B,UAAW,CACTxe,GAAIyN,OAAOR,EAAIjN,IACfmK,UAAW8C,EAAI9C,aAJN,gBAQb,OAPc4U,EADD,EACLC,OAOR,SAAID,EAAQupB,YAAZ,SAAI,EAAmBppB,SAAnB,EAA2BpE,QAC7BlF,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAO,MAAE2V,OAAF,EAAEA,EAAQupB,UAAUppB,OAAO,GAClC7G,QAAS,WAZF,6DAiBfrP,QAASiE,EAAI9C,iBAOvB,gBAACy+B,GAAD,CACEjf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,KAClDoU,UAAW,WACTrI,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,IACnCgb,KAEFpF,WAAYhS,OAAOjE,EAAM0H,mBACzBrI,KAAMkvC,EAAQlvC,OAGhB,gBAAC4oB,GAAA,EAAD,CACEjW,QAAS08B,EACTr2C,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,KAClD0d,MAAM,aAMd,I,GAAMrjB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACNnG,QAAS,QAEX/K,QAAS,CACPwoB,SAAU,GAEZzB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,qkBClLZ,I,GAAM+4C,GAAuBh5B,aAAH,qWAiBX,SAASi5B,GAAmBl5C,GACzC,IAAQoX,EAA6CpX,EAA7CoX,MAAOkW,EAAsCttB,EAAtCstB,YAAa/hB,EAAyBvL,EAAzBuL,KAAMogC,EAAmB3rC,EAAnB2rC,eAC5BwN,EAAuBr3B,GAAe3Y,EAAWk/B,iBACvD,EAAmCtpB,aAAsBk6B,IAAlDG,EAAP,YACM3iC,EAAWV,KAEjB,OACE,gBAAC,KAAKyN,KAAN,CACEhM,UAAW2hC,EACXz2C,MAAO,CAAEzC,MAAO,QAChBykB,MAAO,kBACL,gBAACquB,GAAA,EAAD,CACElpC,MAAO0B,EAAKyG,YAAYmQ,SAASwpB,GACjCqH,cAAe,sCAAA5xC,EAAAC,OAAA,kEAAAD,EAAA,MACQg4C,EAAyB,CAC5C/5B,UAAW,CACTg6B,OAAQ/qC,OAAO/C,EAAK1K,IACpB8qC,iBACA9I,SAAUt3B,EAAKyG,YAAYmQ,SAASwpB,IAEtC2N,mBAAoB,CAClBC,WAAY,CACVhuC,KAAK,SACAA,GADD,IAEFyG,YAAczG,EAAKyG,YAAYmQ,SAASwpB,GAA3B,eAELpgC,EAAKyG,aAFA,CAEa25B,IADtBpgC,EAAKyG,YAAYqV,QAAO,SAAC5e,GAAD,OAAUA,IAASkjC,YAZ1C,OAmBb,OAlBM/rB,EADO,SAmBb,SAAIA,EAAQC,OAAZ,SAAI,EAAc05B,aAAlB,SAAI,EAA0Bx5B,SAA1B,EAAkCpE,SAC9B,MAANiE,GAAA,SAAAA,EAAQC,OAAR,WAAc05B,aAAd,WAA0Bx5B,SAA1B,EAAkC/e,KAAI,SAACiJ,GAAD,OACpCwM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,UACAiP,QAAS,eAxBJ,gEAgCb9B,QAAOkW,gB,qkBC9DnB,IAAMksB,GAA6Bv5B,aAAH,qMAuFjB,SAASw5B,KAA4B,IAAD,QAC3CpvC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C,EAAmC4L,aAAgBg5B,GAA4B,CAC7En6B,UAAW,CACTiB,WAAYhS,OAAOjE,EAAM0H,sBAFrB8N,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjBghB,EAAYC,0BAQlB,OANA1lC,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAERpP,GAAW,MAACuJ,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgB04B,SAAhB,EAAuBvsB,OACxC,gBAAC,KAAD,CACEiL,WAAS,EACT9lB,eAAgB,CACdwtB,SAAU,EACVnpB,kBAAmB,IAErB1C,OAAQ,CACN,CACE2I,IAAK,QACLlL,OAAQ,IACR6d,UAAW,GACX8I,aAAc,GACd5mB,MAAO,QAET,CAAEmL,IAAK,SAAUlL,OAAQ,IAAK2mB,aAAc,GAAI5mB,MAAO,QACvD,CAAEmL,IAAK,QAASlL,OAAQ,IAAK2mB,aAAc,GAAI5mB,MAAO,QACtD,CAAEmL,IAAK,SAAUlL,OAAQ,IAAK2mB,aAAc,GAAI5mB,MAAO,QACvD,CAAEmL,IAAK,QAASlL,OAAQ,IAAK2mB,aAAc,GAAI5mB,MAAO,WAI1D,gBAAC,KAAD,CACEiuB,aAAc,EACdxW,KAAK,aACLvF,MAAK,SACA9H,EAAM8H,OADN,IAEHX,OAAO,SACFnH,EAAM8H,MAAMX,QADX,IAEJC,QAASpH,EAAM+H,QAAQX,QAAQc,WAPrC,MAWGsN,GAXH,SAWGA,EAAMrQ,WAXT,SAWG,EAAgB04B,YAXnB,EAWG,EAAuBlnC,KAAI,SAACuK,GAAD,aAC1B,gBAAC,KAAD,CACE6c,MAAOgnB,sBAAU,SAAC7jC,EAAK9C,WAAN,EAAC,EAAWmV,QAAQ,IAAK,MAC1CxS,IAAG,uBAAyBG,EAAK1K,IAEjC,gBAACs5B,GAAD,CACE9M,sBAAuB,CACrBqM,SAAU,IACVz5B,MAAO,OACPmG,UAAW,WAGb,gBAACglB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,wBACA,gBAAC2xB,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,WACfre,YAAY,6BACZlW,MAAM,eAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,qBACZlW,MAAM,kBAIV,gBAACgU,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAKuiB,QAAN,CAAcx6B,MAAM,WAAW1U,MAAO,CAAEzC,MAAO,SAC7C,gBAAC,KAAKy5C,UAAN,CAAgBtiC,MAAM,SACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,WACfre,YAAY,6CACZlW,MAAM,cAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfv0B,MAAM,iBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,gEACZlW,MAAM,iBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,oCACZlW,MAAM,iBAIV,gBAAC,KAAKsiC,UAAN,CAAgBtiC,MAAM,eACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,yCACZlW,MAAM,kBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,+CACZlW,MAAM,oBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,aACfre,YAAY,+BACZlW,MAAM,oBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,iBACfre,YAAY,8CACZlW,MAAM,0BAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,yBACfre,YAAY,iEACZlW,MAAM,wBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,iBACfre,YAAY,wCACZlW,MAAM,4BAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,iBACfre,YAAY,uCACZlW,MAAM,6BAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,+BACZlW,MAAM,sBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,gDACZlW,MAAM,yBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,8BACZlW,MAAM,4BAKd,gBAACgU,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAKuiB,QAAN,CAAcx6B,MAAM,iBAAiB1U,MAAO,CAAEzC,MAAO,SACnD,gBAAC,KAAKy5C,UAAN,CAAgBtiC,MAAM,YACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,iBACfre,YAAY,iDACZlW,MAAM,oBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,iBACfre,YAAY,8BACZlW,MAAM,qBAIV,gBAAC,KAAKsiC,UAAN,CAAgBtiC,MAAM,gBACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,mBACfre,YAAY,0BACZlW,MAAM,kBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,mBACfre,YAAY,0DACZlW,MAAM,mBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,mBACfre,YAAY,+BACZlW,MAAM,oBAIV,gBAAC,KAAKsiC,UAAN,CAAgBtiC,MAAM,iBACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,2BACZlW,MAAM,wBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,2DACZlW,MAAM,yBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,gCACZlW,MAAM,0BAIV,gBAAC,KAAKsiC,UAAN,CAAgBtiC,MAAM,UACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,oBACZlW,MAAM,oBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,qCACZlW,MAAM,oBAGR,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,cACfre,YAAY,4BACZlW,MAAM,qBAIV,gBAAC,KAAKsiC,UAAN,CAAgBtiC,MAAM,QACpB,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,4DACZlW,MAAM,eAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,mDACZlW,MAAM,gBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,oBACfre,YAAY,0CACZlW,MAAM,gBAER,gBAAC8hC,GAAD,CACE3tC,KAAMA,EACNogC,eAAe,qBACfre,YAAY,8CACZlW,MAAM,wCAY1B,I,MAAMrS,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACNnG,QAAS,QAEXwe,KAAM,CACJpvB,MAAO,OACP6mB,eAAgB,IAElBhhB,QAAS,CACPwoB,SAAU,GAEZzB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,UCzZNy5C,GAAmB15B,aAAH,s9BA0DP,SAAS25B,KAA2B,IAAD,QAC1C9nC,EAAkBuO,KACxB,EAAkCpf,WAAeyf,aAAW,IAAIC,MAAQC,WAAxE,WAAOgnB,EAAP,KAAkBiS,EAAlB,KACMn8B,EAAa4Y,2BAEnBr1B,mBAAsB,WACpByc,EAAWkpB,WAAW,CACpBtF,YAAa,kBACX,gBAACqG,GAAD,CACEjN,SAAU,SAAC6N,GAAD,OAAUsR,EAAoB,IAAPtR,IACjCX,UAAWA,EAAY,IACvB/hC,MAAM,iBAIX,CAAC6X,EAAYkqB,IAEhB,IAAQ/nB,EAASW,aAAgBm5B,GAAkB,CACjDt6B,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C+mC,UAAW/jC,KAAKgzB,MAAM+Q,EAAY,QAH9B/nB,KAOR,OACE,gBAACsa,GAAD,KACE,gBAACnyB,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,UADxB,MAEG4f,GAFH,SAEGA,EAAMrQ,WAFT,SAEG,EAAgBsqC,YAFnB,SAEG,EAA2B3S,YAF9B,EAEG,EAAkCnmC,KAAI,SAAC6M,GAAD,2BACrC,gBAACud,GAAA,EAAD,CAAM1oB,MAAO,CAAEzC,MAAO,OAAQ6mB,eAAgB,KAC5C,gBAACsE,GAAA,EAAKf,MAAN,CAAYjT,MAAK,QAAUvJ,EAAK2mB,aAChC,gBAACpJ,GAAA,EAAKG,QAAN,KACE,gBAAC,KAAK/H,KAAN,CAAWpM,MAAM,QAAQkW,YAAW,MAAEzf,GAAF,SAAEA,EAAM9B,QAAR,SAAE,EAAa8C,WAAf,EAAE,EAAmBpG,OACzD,gBAAC,KAAK+a,KAAN,CAAWpM,MAAM,MAAMkW,YAAW,MAAEzf,GAAF,SAAEA,EAAMlC,MAAR,SAAE,EAAWkD,WAAb,EAAE,EAAiBpG,OACrD,gBAAC,KAAK+a,KAAN,CACEpM,MAAM,QACNkW,YACM,MAAJzf,GAAA,SAAAA,EAAM7B,QAAN,EAAanL,IAAb,MACOgN,GADP,SACOA,EAAM7B,YADb,EACO,EAAavD,MADpB,YAC6BoF,GAD7B,SAC6BA,EAAM7B,YADnC,EAC6B,EAAaO,cAD1C,IAEI,sBAGR,gBAACk3B,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUpZ,MAAX,aACA,gBAACoZ,GAAA,EAAUpZ,MAAX,kBACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,aAJJ,SAOG71B,EAAK8V,YAPR,EAOG,EAAY3iB,KAAI,SAACqN,GAAD,iBACf,gBAACo1B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUI,KAAX,cAAiBx1B,EAAKQ,WAAtB,EAAiB,EAAWpG,MAC5B,gBAACg7B,GAAA,EAAUI,KAAX,cAAiBx1B,EAAKV,eAAtB,EAAiB,EAAelF,MAChC,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,SAAyBr1B,EAAKN,iBAA9B,EAAyB,EAAiBe,qBChH5D,IAAMirC,GAAqB95B,aAAH,gQAiBT,SAAS+5B,KAAa,IAAD,MAC5B3vC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM/E,SAC5C+G,EAAWV,KACXjE,EAAkBuO,KAChBR,EAASW,aAAgBu5B,GAAoB,CACnD16B,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,OAF1Cgf,KAMR,OACE,gCACE,gBAAC2E,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM/E,MAAMtF,SAAS,CAAC,OAAQ8e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,IAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAO8B,KAAK3B,MAC3BD,MAAK,SAAEQ,EAAMV,OAAO8B,OAAf,SAAE,EAAmB5B,YAArB,EAAE,EAA0Bsf,WACjC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM/E,MAAMtF,SAAS,CAAC,OAAQkE,OAAO4a,SAG1D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO8B,KAAK3B,MAAQ,QAAU,QACnDO,EAAMV,OAAO8B,KAAK3B,OAAS,IAG9B,gBAAC9B,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAKsnB,UAAN,2BADF,MAEG1H,OAFH,EAEGA,EAAMnU,YAAY1K,KAAI,SAACi5C,GAAD,aACrB,gBAAC1sB,GAAA,EAAS/J,KAAV,CACE4E,MAAO6xB,EAAOxxC,MAAQ,GACtBjH,OACE,SAAA6I,EAAMV,OAAO+B,YAAY7B,QAAzB,EAAgC7I,KAAI,qBAAGH,MAAashB,SAAS83B,EAAOp5C,IAChE,UACA,YAEN8W,QAAS,0BACPlB,EACE9B,GAAQF,MAAM/E,MAAMtF,SAAS,CAC3B,cACA,SAAAC,EAAMV,OAAO+B,YAAY7B,QAAzB,EAAgC7I,KAAI,qBAAGH,MAAashB,SAAS83B,EAAOp5C,IAApE,SACIwJ,EAAMV,OAAO+B,YAAY7B,YAD7B,EACI,EAAgCwd,QAAO,qBAAGxmB,KAAgBo5C,EAAOp5C,MADrE,eAESwJ,EAAMV,OAAO+B,YAAY7B,OAAS,IAF3C,CAEgDowC,eAWlE,I,GAAMl1C,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACN1J,MAAO,OACP+W,KAAM,GAERxM,MAAO,CACLqc,aAAc,EACd5mB,MAAO,UCnFLi6C,GAAwBj6B,aAAH,kkBAmCZ,SAASk6B,KAAqB,IAAD,IACpCroC,EAAkBuO,KAClBhW,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM/E,SAC5C+G,EAAWV,KAEX2H,EAAa4Y,2BAEX5mB,EADM0lB,sBACUzY,OAAhBjN,MAERzO,aAAgB,WACdwV,EAAS9B,GAAQF,MAAM/E,MAAMhF,QAAQgF,MACpC,CAAC+G,EAAU/G,EAAOA,EAAM7O,KAE3B,MAAoCke,aAAsBm7B,IAA1D,WAAOE,EAAP,KAA4Bv6B,EAA5B,KAEMF,EAAW1e,eAAkB,WAAgB,IAAD,EAC5C21C,GAAW,EAWf,QAVK,SAAAvsC,EAAMV,OAAOlB,KAAKoB,YAAlB,IAAyB8R,SAAU,GAAK,IAC3Ci7B,GAAW,EACXngC,EAAS9B,GAAQF,MAAM/E,MAAMjF,cAAc,CAAC,OAAQ,wBAGlD6D,OAAOjE,EAAMV,OAAO8B,KAAK5B,OAAS,IACpC+sC,GAAW,EACXngC,EAAS9B,GAAQF,MAAM/E,MAAMjF,cAAc,CAAC,OAAQ,8BAG9CmsC,IACP,CAACvsC,EAAMV,OAAQ8M,IAEZuuB,EAAS/jC,eAAkB,4CAAAG,EAAAC,OAAA,qDACKgJ,EAAMV,OAAlClB,EADuB,EACvBA,KAAMgD,EADiB,EACjBA,KAAMC,EADW,EACXA,aAEhBiU,IAH2B,4CAAAve,EAAA,MAKNg5C,EAAoB,CACvC/6B,UAAW,CACTxe,GAAIyN,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgB5I,IAC3Byf,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4H,KAAMA,EAAKoB,MACX4B,KAAMA,EAAK5B,MACXwwC,cAAa,SAAE3uC,EAAY7B,YAAd,EAAE,EAAmB7I,KAAI,qBAAGH,UAXlB,OAKrB+e,EALqB,OAe3B,SAAIA,EAAOC,OAAX,SAAI,EAAay6B,cAAb,EAA0B5qC,QAC5B+G,EAASquB,GAASrxB,aAAa,CAAExJ,QAAQ,QAAUiP,QAAS,aAC5DwE,EAAWkiB,UAjBc,gDAoB3BnpB,EAASquB,GAASrxB,aAAa,CAAExJ,QAAS,KAAMA,QAASiP,QAAS,WApBvC,kEAuB9B,CACD7O,EAAMV,OADL,SAEDU,EAAMZ,eAFL,EAED,EAAgB5I,GAChB8e,EACAy6B,EAJC,MAKDtoC,GALC,SAKDA,EAAiBtC,eALhB,EAKD,EAA2B3O,GAC3B4V,EACAiH,IAGF,OACE,gBAACyc,GAAD,CAAkB9M,sBAAuB,CAAEloB,kBAAmB,KAC5D,gBAAC4f,GAAA,EAAD,CACEtc,KAAK,iBACLC,KAAM,IACN7C,MAAM,UACNnD,MAAO,CAAE0D,UAAW,YAEtB,gBAAC4zC,GAAD,MACA,gBAAC,GAAD,CAAMt3C,MAAOqC,GAAO4E,QAClB,gBAAC4N,EAAA,EAAD,CAAQG,KAAK,YAAYF,SAAUqI,EAAKvJ,QAASqB,QAASqtB,EAAQ1uB,QAASuJ,EAAKvJ,SAAhF,UAQR,I,SAAMvR,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAERI,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET0J,OAAQ,CACN1J,MAAO,OACP4mB,aAAc,IAEhBrc,MAAO,CACLqc,aAAc,KC1GHrI,MAxCeyB,aAAH,8oBAwC0D,CACnFvB,WAAY,SAACkB,GAAD,OAAYA,EAAO26B,aAC/B57B,cAAe,CACb07B,cAAe,eAEjB/7B,UAAW,CACT7V,KAAM,CAACwV,GAAW,4BAClBxS,KAAM,CAACwS,GAAW,6BAA8BI,GAAU,8BCA/CG,MA/CeyB,aAAH,osBAiDzB,CACEvB,WAAY,SAACkB,GAAD,OAAYA,EAAO06B,aAC/B37B,cAAe,CACb9d,GAAI,WACJw5C,cAAe,iBC5CN,SAASG,GAAsBx6C,GAAgC,IAAD,MACnE0J,EAAkB1J,EAAlB0J,KAAM8gB,EAAYxqB,EAAZwqB,QACR1Y,EAAkBuO,KAClBhW,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM/E,SAC5C+G,EAAWV,KAEXwkC,EAAcE,GAAuB,CACzC37B,UAAW,SAACvU,GAAD,OACTyV,uBAAsB,WAAO,IAAD,EAC1BvJ,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,UAAD,MAAWM,GAAX,SAAWA,EAASmF,YAApB,EAAW,EAAgBjH,MAClCyQ,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAM/E,MAAM5H,aAGjC+W,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM/E,MAAMjF,cAAc,CAACD,EAA4BP,MAC1EyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAE9DohC,EAAcI,GAAuB,CACzC57B,UAAW,SAACvU,GAAD,OACTyV,uBAAsB,WAAO,IAAD,EAC1BvJ,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAQ,UAAD,MAAWM,GAAX,SAAWA,EAASmF,YAApB,EAAW,EAAgBjH,MAClCyQ,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAM/E,MAAM5H,aAGjC+W,aAAc,SAACrU,EAAOP,GAAR,OACZwM,EAAS9B,GAAQF,MAAM/E,MAAMjF,cAAc,CAACD,EAA4BP,MAC1EyO,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,cAG9D8rB,EAAS/jC,eAAkB,kCAAAG,EAAAC,OAAA,gDAC/B,MAAIgJ,GAAJ,SAAIA,EAAOZ,WAAP,EAAiB5I,GACnBy5C,EAAYt7B,OAAO,CACjBne,GAAIyN,OAAOjE,EAAMZ,SAAS5I,IAC1Byf,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBwwC,cAAa,SAAEhwC,EAAMV,OAAO+B,YAAY7B,YAA3B,EAAE,EAAgC7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,QAGxE05C,EAAYv7B,OAAO,CACjBsB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4H,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBwwC,cAAa,SAAEhwC,EAAMV,OAAO+B,YAAY7B,YAA3B,EAAE,EAAgC7I,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYyN,OAAOzN,QAd3C,8DAiB9B,CACD05C,EADC,MAEDzoC,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2B3O,GAC3BwJ,EAAMV,OAAO8B,KAAK5B,MAClBQ,EAAMV,OAAOlB,KAAKoB,MAClBQ,EAAMV,OAAO+B,YAAY7B,MALxB,SAMDQ,EAAMZ,eANL,EAMD,EAAgB5I,GAChBy5C,IAGIvV,EAAa9jC,WAAc,iBAAM,CAAC,IAAK,OAAM,IAEnD,OACE,gBAACujC,GAAD,CACEptB,MAAO,SAAA/M,EAAMZ,WAAN,EAAgB5I,GAAK,oBAAsB,mBAClD6I,KAAMA,EACN8gB,QAASA,EACTlU,QAASikC,EAAYjkC,SAAWgkC,EAAYhkC,QAC5CouB,aAAcM,EACdP,YAAY,OACZM,WAAYA,GAEZ,gBAACiV,GAAD,OCjFN,IAAM3H,GAAoBpyB,aAAH,4QAkBR,SAAS06B,KAAgB,IAAD,UAC/B7oC,EAAkBuO,KAClBiJ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5CgmC,EAAY3kC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM/E,SACtD,EAA0B8Q,aAAgB6xB,GAAmB,CAC3DhzB,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,OAF1Cgf,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAKRG,EAAWV,KACX8kC,EAAkB/4B,GAAe3Y,EAAW2xC,aAElD,OACE,gCACE,gBAAC3wB,EAAA,EAAD,CAAa9N,QAAS/F,EAAS8T,eAAa,EAACvkB,MAAOyjB,EAAYnX,MAAMX,OAAOgB,SAC7E,gBAAC,GAAD,CAAM9P,MAAOqC,GAAOG,WAClB,gBAACu+B,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUpZ,MAAX,aACA,gBAACoZ,GAAA,EAAUpZ,MAAX,CAAiBqZ,SAAO,GAAxB,SAHJ,MAMG7jB,GANH,SAMGA,EAAMrQ,WANT,SAMG,EAAgB5B,aANnB,EAMG,EAAwB5M,KAAI,SAAC0O,GAAD,OAC3B,gBAAC+zB,GAAA,EAAUG,IAAX,CACEjsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAM/E,MAAMhF,QAAQgF,KAEvCxM,cAAc,QAEd,gBAACugC,GAAA,EAAUI,KAAX,KAAiBn0B,EAAMjH,MACvB,gBAACg7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,IAA0Bh0B,EAAMjE,YAIpC6K,KAAW,MAACuJ,GAAD,SAACA,EAAMrQ,WAAP,SAAC,EAAgB5B,SAAhB,EAAwB+N,SACpC,gBAAC8Q,GAAD,CACErV,MAAM,mBAENsV,SAAS,mFAIb,gBAAC4F,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdxQ,QAASw+B,EACTv4B,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM/E,MAAMhF,SAAQ,KACpD0d,MAAM,sBAGV,gBAACoyB,GAAD,CACE9wC,KAAMkxC,EAAUlxC,KAChB8gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM/E,MAAMhF,SAAQ,QAM5D,IAAM3F,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN8G,QAAS,EACTjN,QAAS,QAEXgc,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,UC9FZ,SAASgvC,GAAQ1tC,GACf,OAAQA,GACN,IAAK,OACL,IAAK,aACH,MAAO,aACT,IAAK,WACL,IAAK,UACH,MAAO,YACT,QACE,MAAO,QAIE,SAASu5C,GAAgB/6C,GACtC,IAAQgtC,EAAyBhtC,EAAzBgtC,YAAar1B,EAAY3X,EAAZ2X,QACfxF,EAAQsQ,eAEd,OACE,gBAAC9E,GAAA,EAAD,CAAkBhG,QAASA,EAASjV,MAAO,CAAEzC,MAAO,SAClD,gBAACmrB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOioC,aAClB,gBAAC5hB,GAAA,EAAKG,QAAN,CAAc7oB,MAAOqC,GAAOkoC,oBAC1B,gBAACC,GAAA,EAAD,CACExqC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACL4hB,MAAO,KAGG,MAAXsoB,OAAA,EAAAA,EAAa3H,YAAaU,aAAgC,KAAd,MAAXiH,OAAA,EAAAA,EAAa3H,WAAkB,qBAEnE,gBAAC,KAAK7hB,KAAN,CACE8J,YAAa8hB,sBAAWpC,EAAY/iC,SAAW,IAC/CmN,MAAO41B,EAAYjjC,gBAAgBk+B,cACnCvlC,MAAO,CAAEzC,MAAO,QAChB20B,WAAY7vB,GAAOooC,iBACnBrY,iBAAkB/vB,GAAOqoC,uBACzBpqC,KAAM,kBACJ,gBAACgF,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,IAAKmF,WAAY,SAAUW,cAAe,QAC9D,gBAACgf,GAAA,EAAD,CACElf,MAAOmnC,EAAYpjC,OAAS,EAAI,U9InDtB,U8IoDVnB,KAAMymC,GAAQlC,EAAYxrC,QAC1BkH,KAAM,GACNhG,MAAO,CAAEygB,iBAAkB,MAE7B,gBAACxa,EAAA,EAAD,CACEjG,MAAO,CACLkD,SAAU,GACViS,WAAY,MACZrS,UAAW,SACXK,MAAOsM,EAAMX,OAAOkR,YAGrBsqB,EAAYpjC,OAAS,EAArB,MAC8B,EAAtBojC,EAAYpjC,OADpB,IAEOojC,EAAYpjC,eAWtC,IAAM7E,GAASC,IAAWC,OAAO,CAC/BooC,WAAY,GACZF,iBAAkB,CAChB9nC,YAAa,EACbO,SAAU,GACViS,WAAY,MACZgP,aAAc,GAEhBumB,uBAAwB,CACtB/nC,YAAa,GAEf4nC,mBAAoB,CAAE5nC,YAAa,EAAGC,aAAc,EAAG+f,WAAY,EAAGgJ,cAAe,GACrF2e,YAAa,CACX7pB,iBAAkB,EAClB2D,eAAgB9hB,IAAWmgB,cAC3BxiB,aAAc,EACd1C,MAAO,UC3EX,SAAS+6C,GAAYh7C,GACnB,IAAQi7C,EAAmBj7C,EAAnBi7C,QAAS9tC,EAAUnN,EAAVmN,MACT0E,EAAgBwO,KAAhBxO,YAEFqpC,EAASj6C,eACb,SAACk6C,GACC,MACE,eAAgBA,GACM,iBAAtBA,EAAOlL,YACPkL,EAAOt6C,MAAP,MAAcgR,OAAd,EAAcA,EAAahR,MAG/B,CAACgR,IAGH,OACE,gCACE,gBAAC,KAAK0V,UAAN,kBAA6Bpa,EAAQ,IADvC,MAEG8tC,OAFH,EAEGA,EAASG,aACP/zB,QAAO,SAAC2lB,GAAD,OAAiBkO,EAAOlO,EAAYqO,aAC3Cr6C,KAAI,SAACgsC,GAAD,OACH,gBAAC+N,GAAD,CAAuB/N,oBAKlB,SAASsO,KAAe,IAAD,QAC9BnmB,EAAQC,sBACRjjB,EAAQsQ,eACNqtB,EAAU3a,EAAMxY,OAAhBmzB,MAER3tC,QAAQC,IAAI,QAAS+yB,EAAMxY,QAE3B,IAAMnG,EAAYvV,WAChB,kBACEsM,KAAKC,MACHD,KAAKiM,UAAU+hC,IAAuB39B,QACpC,aACA,CACE/X,KAAMsM,EAAMX,OAAOC,SAAS+pC,MAC5B31C,KAAMsM,EAAMX,OAAOC,SAASgqC,QAC5B51C,KAAMsM,EAAMX,OAAOC,SAASiqC,QAC5Bhb,KAAK,SAGb,CAACvuB,EAAMX,OAAOC,UAEhB,OACE,gBAAC0oB,GAAD,KACE,gBAAC/O,GAAA,EAAD,CAAM1oB,MAAO,CAAEqb,UAAW,GAAI9d,MAAO,OAAQy5B,SAAU,MACrD,gBAACtO,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAAE2rB,cAAe,KACpC,gBAACrmB,EAAA,EAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAOX,WAAY,SAAU4R,KAAM,IAC/D,gBAAC,IAAD,CACE7P,MAAM,EACN2U,UAAQ,EACR0e,MAAO,GACP93B,MAAO,CACLxC,OAAQ,IACRD,MAAO,KAETqX,OAAQd,IAEV,gBAACxO,EAAA,EAAD,CAAMtF,MAAO,CAAE4rB,SAAU,IACvB,gBAAC3lB,EAAA,EAAD,CACEjG,MAAO,CACLmV,WAAY,OACZzR,UAAW,aACXR,SAAU,GACV6sB,WAAY,GACZxyB,MAAO,SANX,UAQY6vC,EAAMjvC,IAClB,gBAAC8H,EAAA,EAAD,CACEjG,MAAO,CACLmV,WAAY,OACZ/Q,QAAS,GACTV,UAAW,aACXR,SAAU,GACV6sB,WAAY,GACZxyB,MAAO,OACP4mB,aAAc,KAGfipB,EAAM14B,OAET,gBAACG,EAAA,EAAD,CAAQG,KAAK,WAAW7R,M/IvGV,U+IuG+BnD,MAAO,CAAEC,aAAc,GAAI0jB,OAAQ,IAC7EypB,EAAMzlC,UAKf,gBAAC2e,GAAA,EAAD,MACA,gBAACoC,GAAA,EAAKf,MAAN,CACE3nB,MAAO,CAAEqD,cAAe,OACxB6uB,WAAY,CAAE30B,MAAO,OACrB07C,WAAY,CAAE17C,MAAO,OACrBmX,MACE,gBAAC,KAAKoM,KAAN,CACE8J,YAAY,QACZlW,OAAO,MAAC04B,GAAD,SAACA,EAAOE,QAAR,WAAgCnhC,WAAhC,IAAsCpG,QAAtC,MAA+CqnC,GAA/C,SAA+CA,EAAOE,YAAtD,EAA8C,EAA4BvnC,MACjFzF,KAAM,SAAChD,GAAD,uBACJ,gBAACyvC,GAAD,CACEhnC,MACE,MAACqnC,GAAD,SAACA,EAAOE,QAAR,WAAgCnhC,WAAhC,IAAsCpG,QAAtC,MACCqnC,GADD,SACCA,EAAOE,YADR,EACA,EAA4BvnC,OAC5B,GAEF0I,OACE,MAAC2+B,GAAD,SAACA,EAAOE,QAAR,WAAgCnhC,WAAhC,IAAsCsC,SAAtC,MACC2+B,GADD,SACCA,EAAOE,YADR,EACA,EAA4BllC,SAC5B,GAEFpI,MAAO,CAAE0D,UAAW,UACpBsC,KAAM,MAGVksB,WAAY,CAAE30B,MAAO,IAAK2F,SAAU,IACpCkvB,iBAAkB,CAAE70B,MAAO,IAAK2F,SAAU,MAG9C8e,MAAO,4BACL,gBAAC,KAAKlB,KAAN,CACE8J,YAAY,SACZ5I,MAAO,SAAC1kB,GAAD,uBACL,gBAACyvC,GAAD,CACEhnC,MACE,MAACqnC,GAAD,SAACA,EAAO8L,SAAR,WAAiC/sC,WAAjC,IAAuCpG,QAAvC,MACCqnC,GADD,SACCA,EAAO8L,aADR,EACA,EAA6BnzC,OAC7B,GAEF0I,OACE,MAAC2+B,GAAD,SAACA,EAAOE,QAAR,WAAgCnhC,WAAhC,IAAsCsC,SAAtC,MACC2+B,GADD,SACCA,EAAOE,YADR,EACA,EAA4BllC,SAC5B,GAEFpI,MAAO,CAAE0D,UAAW,SAAUqsB,WAAY,GAC1C/pB,KAAM,MAGVksB,WAAY,CAAEpvB,UAAW,QAASI,SAAU,IAC5CkvB,iBAAkB,CAAEtvB,UAAW,QAASI,SAAU,IAClDwR,OACE,MAAC04B,GAAD,SAACA,EAAO8L,SAAR,WAAiC/sC,WAAjC,IAAuCpG,QAAvC,MAAgDqnC,GAAhD,SAAgDA,EAAO8L,aAAvD,EAA+C,EAA6BnzC,YA9FxF,MAoGGqnC,GApGH,SAoGGA,EAAO+L,eApGV,EAoGG,EAAiB76C,KAAI,SAACi6C,EAAS9tC,GAC9B,OAAO,gBAAC6tC,GAAD,CAAmBC,UAASnL,QAAO3iC,cC3JnC,SAASkjC,KAAsB,IAAD,IACrChmC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACTlE,EAAgBwO,KAAhBxO,YACR,ExIkhBK,SAA0CmQ,GACvC,IAAM5e,EAAO,SAAOge,IAAmBY,GACvC,OAAOzJ,KAAuGqJ,GAA8Bxe,GwIphB9G04C,GAAtC,WAAOC,EAAP,KACM5mB,GADN,KAA4BtV,KACduV,uBACd,EAA2CiV,GACzC/7B,OAAM,MAAC6mB,GAAD,SAACA,EAAOxY,aAAR,EAAC,EAAeqE,SAAW1S,OAAM,MAACuD,OAAD,EAACA,EAAahR,KAD/CmN,EAAR,EAAQA,aAAcsI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBghB,EAAYC,0BACZjpB,EAAa4Y,2BAcnB,OAZAr1B,aAAgB,WACVylC,GACFhhB,MAED,CAACghB,EAAWhhB,IAEfzkB,aAAgB,WACVoJ,EAAM0H,mBACRgqC,EAAkB,CAAE18B,UAAW,CAAEiB,WAAYjW,EAAM0H,uBAEpD,OAAC1H,OAAD,EAACA,EAAO0H,kBAAmBgqC,IAG5B,gCACGzlC,GAAW,gBAAC6T,EAAA,EAAD,CAAatkB,MAAOwE,EAAM8H,MAAMX,OAAOgB,OAAQ4X,eAAa,EAAC/N,QAAS/F,IAElF,gBAAC,IAAD,CACE5T,MAAOqC,GAAOwrC,SACd1wB,MAAkB,MAAZ7R,GAAA,SAAAA,EAAcwiC,aAAd,IAAsBltB,QAAS,GACrC6T,YAAY,EACZC,UAAW1R,EACX6R,WAAY,gBAAGnqB,EAAH,EAAGA,KAAH,OACV,gBAACyiC,GAAD,CACEl4B,QAAS,kBAAM+F,EAAWia,SAAS,cAAe,CAAEmY,MAAO1iC,EAAKqW,QAChEqsB,MAAK,MAAE1iC,OAAF,EAAEA,EAAMqW,KACbssB,YAAU,EACJ/hC,oBAKZ,gBAAC,GAAD,CACEwc,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACtDoU,UAAW,kBAAMrI,EAAS9B,GAAQF,MAAMhF,QAAQ/E,SAAQ,KACxDhB,KAAM+K,EAAMhF,QAAQ/F,KACpBsE,aAAcA,QAAgBpL,KAMtC,I,MAAMmC,GAASC,IAAWC,OAAO,CAC/BsrC,SAAU,CAAEv5B,KAAM,EAAGqO,WAAY,KClEpB,SAAS22B,KACtB,IAAM3xC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM7E,iBAC5C6G,EAAWV,KAEjB,OACE,gCACG1L,EAAMV,OAAO3I,KAAI,SAACoM,EAAMD,GACvB,OACE,gBAACwqC,GAAD,CAEEvsC,IAAK+B,EACLsP,OAAQrP,EACRvD,OAAW,MAAJuD,OAAA,EAAAA,EAAMvD,QAAS,GACtB6wB,SAAU,SAAC7wB,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM7E,cAAcxF,SAAS,CAAC+C,EAAOtD,Y,qkBCDvF,IAAMoyC,GAAwBh8B,aAAH,msBAuCrBi8B,GAAiCj8B,aAAH,qhCAwDrB,SAASk8B,KAAuB,IAAD,kBACtC9xC,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM7E,iBAC5CkC,EAAkBuO,KAClB5J,EAAWV,KAOjB,EALcqf,sBAKgCzY,OAAtC7O,EAAR,EAAQA,IAAKgc,EAAb,EAAaA,eAAgB9I,EAA7B,EAA6BA,OAC7B,EAA0BR,aAAgBy7B,GAAuB,CAC/D58B,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9CipB,iBACA9I,YAJInB,EAAR,EAAQA,KAAM6F,EAAd,EAAcA,QAQRghB,EAAYC,0BAElB1lC,aAAgB,WACdykB,MACC,CAACghB,EAAWhhB,IAEf,IAAMkyB,EAAa91B,GAAe3Y,EAAWkjC,mBAC7C,EAAgDttB,aAC9Cm9B,IADF,WAAOE,EAAP,KAAoC39B,EAApC,KAGMf,EAAa4Y,2BACnBr1B,aAAgB,WAAO,IAAD,MAKpB,GAJ8B,MAAG4e,GAAH,SAAGA,EAAMrQ,WAAT,SAAG,EAAgBxB,eAAnB,SAAG,EAA8ByzB,qBAAjC,EAAG,EAA8C1oB,MAC7E,SAAC2oB,GAAD,iBAAgB,SAAAA,EAAW5zB,MAAX,WAAgBjN,SAAhB,IAAoBsoB,eAApB,SAAmCrb,EAAIjN,SAAvC,EAAmC,EAAQsoB,aAAcuY,EAAWj0B,cAGxD,CAAC,IAAD,MACtBi0B,EAAU,MAAG7hB,GAAH,SAAGA,EAAMrQ,WAAT,SAAG,EAAgBxB,eAAnB,SAAG,EAA8ByzB,qBAAjC,EAAG,EAA8CjzB,MAC/D,SAAC6tC,GAAD,aAAY,SAAAA,EAAOvuC,UAAP,IAAYjN,MAAOiN,EAAIjN,MAGjC6gC,IACFjrB,EAAS9B,GAAQF,MAAM7E,cAActC,UAAUo0B,EAAWj0B,YAAc,OACxEgJ,EAAS9B,GAAQF,MAAM7E,cAAc1C,MAAMw0B,EAAW4P,YAEnD,CAAC,IAAD,EACL76B,EACE9B,GAAQF,MAAM7E,cAActC,WACtB,MAAJuS,GAAA,SAAAA,EAAMrQ,SAASK,4BAAf,IAAsCpC,aAAc,UAIzD,OACDoS,GADC,SACDA,EAAMrQ,WADL,SACD,EAAgBxB,mBADf,EACD,EAA8ByzB,eAD7B,MAED5hB,GAFC,SAEDA,EAAMrQ,SAASK,4BAFd,EAED,EAAsCpC,WACtCgJ,EACA3I,EAAIjN,KAGN,IAAMy7C,EAAsBr7C,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEpCg7C,EAA4B,CAChC/8B,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C0N,MAAOD,OAAOR,EAAIjN,IAClB4M,WAAYF,KAAKiM,UAAUnP,EAAMV,QACjC2nC,OAAQjnC,EAAM4C,IAEhBu/B,OAAQ,SAAOxyB,EAAQuiC,GAAf,uDAAAn7C,EAAAC,OAAA,uDACAuO,EADA,SACgB2sC,EAAe18B,OAD/B,SACgB,EAAqBy8B,0BADrC,EACgB,EAA0C1sC,cAC1DgQ,EAAS5F,EAAO0yB,UAAiB,CACrClnB,MAAO4kB,GACP/qB,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9CipB,eAAgBxb,OAAM,MAACsB,GAAD,SAACA,EAAe5B,mBAAhB,EAAC,EAA6BnN,QAY3C,OARP27C,EAAYxiC,EAAO0yB,UAAiB,CACxClnB,MAAOpF,GACPf,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4f,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,SAItD,SAAA47B,EAAWhtC,WAAX,WAAqBqC,kBAArB,IAAkChR,OAAlC,MAAyC+O,GAAzC,SAAyCA,EAAe5B,mBAAxD,EAAyC,EAA6BnN,KACxEmZ,EAAO4yB,WAAW,CAChBpnB,MAAOpF,GACPf,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9C4f,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,KAExDf,KAAK,SACA28B,GADD,IAEFhtC,SAAS,SAAD,MACHgtC,OADG,EACHA,EAAWhtC,UADR,IAENqC,YAAY,SAAD,MACN2qC,GADM,SACNA,EAAWhtC,eADL,EACN,EAAqBqC,aADf,IAET4vB,eAAe,GAAD,cACC,MAAT+a,GAAA,SAAAA,EAAWhtC,WAAX,WAAqBqC,kBAArB,IAAkC4vB,iBAAkB,IAAIpa,QAC1D,SAACo1B,GAAD,OAASA,EAAI57C,MAAJ,MAAW+O,OAAX,EAAWA,EAAe/O,QAFzB,CAIZ+O,YAQNm9B,EA3CA,eA4CDntB,OA5CC,EA4CDA,EAAQpQ,UA5CP,IA6CJxB,aAAa,SAAD,MACP4R,GADO,SACPA,EAAQpQ,eADD,EACP,EAAkBxB,cADX,IAEVyzB,eAAe,GAAD,cACF,MAAN7hB,GAAA,SAAAA,EAAQpQ,WAAR,WAAkBxB,mBAAlB,IAAgCyzB,iBAAkB,IAAIpa,QACxD,SAACo1B,GAAD,OAASA,EAAI57C,MAAJ,MAAW+O,OAAX,EAAWA,EAAe/O,QAFzB,CAIZ+O,QAKNoK,EAAO4yB,WAAW,CAChBpnB,MAAO4kB,GACP/qB,UAAW,CACTiB,WAAYhS,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2B3O,IAC9CipB,eAAgBxb,OAAM,MAACsB,GAAD,SAACA,EAAe5B,mBAAhB,EAAC,EAA6BnN,KAEtDgf,KAAMktB,IA9DF,kBAgEC,CACLltB,KAAMktB,IAjEF,gEATgC,OA+E1Ct2B,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,uBACTiP,QAAS,aAGbzC,EAAS9B,GAAQF,MAAM7E,cAAc9H,SACrC4V,EAAWkiB,SAtF+B,gDAwF1CnpB,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAMA,QACfiP,QAAS,WA3F6B,kEA+F3C,CACDkjC,EADC,MAEDtqC,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2B3O,GAC3BiN,EAAIjN,GACJwJ,EAAMV,OACNU,EAAM4C,GACNwJ,EACAiH,IAGF,OACE,gBAACyc,GAAD,KACE,gBAACiC,GAAA,EAAD,CACEC,SAAS,WACT35B,MAAO,CACLzC,MAAO,OACPquB,SAAU,EACVoL,SAAU,IACVvxB,gBAAiB,gBAGnB,gBAACsoC,GAAD,CAAS3iC,IAAKA,IAEd,gBAACsd,GAAA,EAAD,CAAM1oB,MAAO,CAAEzC,MAAO,SACpB,gBAACmrB,GAAA,EAAKf,MAAN,CAAYjT,MAAK,MAAEyI,GAAF,SAAEA,EAAMrQ,WAAR,SAAE,EAAgBK,4BAAlB,EAAE,EAAuCpH,OAE1D,gBAAC2iB,GAAA,EAAKG,QAAN,KACE,gBAACywB,GAAD,MAEA,gBAAChzB,GAAA,EAAD,MACA,gBAACuE,GAAA,EAAS/J,KAAV,CACE9L,KAAK,UACL0Q,MAAM,yBACNzQ,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM7E,cAAc1C,OAAO7C,EAAM4C,MACjEzL,OAAQ6I,EAAM4C,GAAK,UAAY,eAInC,gBAACme,GAAA,EAAKb,QAAN,KACE,gBAAChT,EAAA,EAAD,CACEC,UACGogC,GACDrqC,KAAKiM,UAAUnP,EAAMV,WAArB,MAAiCkW,GAAjC,SAAiCA,EAAMrQ,WAAvC,SAAiC,EAAgBK,4BAAjD,EAAiC,EAAuCpC,YAE1EiK,KAAK,YACLC,QAAS,kBAAM2kC,KACfhmC,QAASmI,EAASnI,QAClB5T,MAAO,CAAEzC,MAAO,SARlB,yBChOZ,IAAMy8C,GAAWC,eAEF,SAASC,KACtB,IAAMtzB,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC1C/C,EAAgBwO,KAAhBxO,YAER,OACE,gBAAC6qC,GAASG,UAAV,CACEC,cAAe,CACbC,eAAgBzzB,EAAYrX,cAAeqX,EAAYxX,iBACvDm0B,OAAQ,SAACjmC,GAAD,OAAW,gBAAC,GAAWA,IAC/Bg9C,UAAW,CACThmC,KAAM,KAIV,gBAAC0lC,GAASO,OAAV,CACEx0C,KAAK,iBACLtH,UAAWklC,GACXjjC,QAAS,CAAEgU,MAAO,cAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,0BACLtH,UAAWm+B,GACXl8B,QAAS,CAAE25C,aAAa,KAE1B,gBAACL,GAASO,OAAV,CACEx0C,KAAK,aACLtH,UAAW4+B,GACX38B,QAAS,CAAEgU,MAAO,iBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,gBACLtH,UAAW2+B,GACX18B,QAAS,CAAEgU,MAAO,cAEpB,gBAACslC,GAASO,OAAV,CAAiBx0C,KAAK,aAAatH,UAAW4b,GAAY3Z,QAAS,CAAEgU,MAAO,UAC5E,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,sBACLtH,UAAWmmC,GACXlkC,QAAS,CAAEgU,MAAO,oBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,gCACLtH,UAAWqmC,GACXpkC,QAAS,CAAEgU,MAAO,kBAIpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,gBACLtH,UAAW8b,GACX7Z,QAAS,CAAEgU,MAAO,WAClB8lC,cAAe,CACbl8B,OAAM,MAAEnP,OAAF,EAAEA,EAAahR,MAGzB,gBAAC67C,GAASO,OAAV,CACEx0C,KAAK,sBACLtH,UAAWg8C,GACX/5C,QAAS,CAAEgU,MAAO,mBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,kBACLtH,UAAWi8C,GACXh6C,QAAS,CAAEgU,MAAO,eAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,qBACLtH,UAAWkvC,GACXjtC,QAAS,CAAEgU,MAAO,qBAGpB,gBAACslC,GAASO,OAAV,CAAiBx0C,KAAK,cAActH,UAAWm6C,GAAal4C,QAAS,CAAEgU,MAAO,WAE9E,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,iBACLtH,UAAWowC,GACXnuC,QAAS,CAAEgU,MAAO,cAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,uBACLtH,UAAWu1C,GACXtzC,QAAS,CAAEgU,MAAO,oBAEpB,gBAACslC,GAASO,OAAV,CAAiBx0C,KAAK,eAAetH,UAAWk2C,GAAcj0C,QAAS,CAAEgU,MAAO,YAChF,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,oBACLtH,UAAWk8C,GACXj6C,QAAS,CAAEgU,MAAO,kBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,oBACLtH,UAAWg5C,GACX/2C,QAAS,CAAEgU,MAAO,0BAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,eACLtH,UAAWw5C,GACXv3C,QAAS,CAAEgU,MAAO,oBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,8BACLtH,UAAWk3C,GACXj1C,QAAS,CAAEgU,MAAO,yBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,sBACLtH,UAAWg7C,GACX/4C,QAAS,CAAEgU,MAAO,oBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,qBACLtH,UAAWw3C,GACXv1C,QAAS,CAAEgU,MAAO,mBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,6BACLtH,UAAWm8C,GACXl6C,QAAS,CAAEgU,MAAO,oBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,2BACLtH,UAAWs4C,GACXr2C,QAAS,CAAEgU,MAAO,iBAEpB,gBAACslC,GAASO,OAAV,CACEx0C,KAAK,0BACLtH,UAAWy4C,GACXx2C,QAAS,CAAEgU,MAAO,iBCtMX,SAASyU,KAAY,IAAD,4CAC3BxhB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,SAC5C8G,EAAWV,KA4BjB,OA1BA9U,aAAgB,WACd,GAAIoJ,EAAMZ,SAAU,CAAC,IAAD,IACkB,EAApC,IAAKY,EAAMV,OAAOuC,WAAWrC,MAC3B4M,EACE9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAC3B,cACA,SAAAC,EAAMZ,SAASyC,iBAAf,IAA2Bid,aAAc,SAK1C9e,EAAMV,OAAO0C,QAAQxC,OAAtB,SAA+BQ,EAAMZ,WAArC,SAA+B,EAAgB4C,UAAhB,EAAyBxL,KACtDwJ,EAAMZ,SAAS4C,QAAQ1B,YACzB8L,EAAS9B,GAAQF,MAAM9E,MAAMrD,cAAcjC,EAAMZ,SAAS4C,QAAQ1B,aAEpE8L,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,UAAWC,EAAMZ,SAAS4C,eAGpE,CACDoK,EACApM,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAO0C,QAAQxC,MACrBQ,EAAMZ,SAJL,SAKDY,EAAMZ,eALL,EAKD,EAAgB5I,KAIhB,gCACE,gBAAC2jB,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,OAAO,SAAAQ,EAAMV,OAAOlB,OAAb,WAAmBoB,YAAnB,IAA0Bsf,aAAc,GAC/C/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,OAAQ8e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,KAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOwC,QAAb,WAAoBtC,YAApB,IAA2Bsf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,QAAS8e,QAG9E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOwC,MAAMrC,MAAQ,QAAU,QACpDO,EAAMV,OAAOwC,MAAMrC,OAAS,KAG/B,gBAACoa,GAAD,CACExM,KAAK,WACL0Q,MAAM,mBACNte,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,MAAOyE,OAAM,SAACjE,EAAMV,OAAOuC,iBAAd,EAAC,EAAyBrC,OACvCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,aAAD,MAAe8e,OAAf,EAAeA,EAAUC,iBAInE,gBAACR,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAACkf,GAAA,EAAD,MAEA,gBAAChhB,EAAA,EAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAACiqC,GAAD,CACErgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrE2Y,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM9E,MAAMrD,cAAczC,OAGlE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,MAGtB,MAALO,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,MAAiDwJ,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BhJ,MAC3E,gCACE,gBAACipC,GAAD,CACEjgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BkgC,aAAcz7B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,SAAiDwJ,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBhJ,KAE5E2hB,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,UAAWP,QAEzE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,MAKvC,gBAACk+B,GAAD,CACEn+B,OAAO,SAAAQ,EAAMV,OAAO4B,WAAb,IAAmB1B,QAAS,KACnC2Y,SAAU,SAAC0G,GAAD,OAAczS,EAAS9B,GAAQF,MAAM9E,MAAMvF,SAAS,CAAC,OAAQ8e,QAGzE,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOyC,MAAMtC,MAAQ,QAAU,QACpDO,EAAMV,OAAOyC,MAAMtC,OAAS,KAMrC,I,MAAM/E,GAASC,IAAWC,OAAO,CAC/B0E,OAAQ,CACNqN,KAAM,EACN/W,MAAO,OACPolB,WAAY,IAEd7a,MAAO,CACLqc,aAAc,EACd5mB,MAAO,QAET8oB,aAAc,CACZlC,aAAc,KC3EHrI,MArDeyB,aAAH,62BAuDzB,CACEvB,WAAY,SAACkB,GAAD,OAAYA,EAAO29B,aAC/Bj/B,UAAW,CACTpS,WAAY,CACV+R,GAAW,gCACXI,GAAU,gCAEZlS,MAAO,CACL8R,GAAW,wCACXE,GAAQ,yCAEV1V,KAAM,CAACwV,GAAW,qBAElBo7B,OAAQ,CAACp7B,GAAW,4BAEtBU,cAAe,CACbtS,QAAS,YACTmxC,YAAa,aACbjyC,KAAM,YCjEG,SAASkyC,GAAkBz9C,GAA4B,IAAD,IAC3D0J,EAA6B1J,EAA7B0J,KAAMoV,EAAuB9e,EAAvB8e,UAAW0L,EAAYxqB,EAAZwqB,QACnBngB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,SAC5C2Z,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KAEX2nC,EAAsBC,GAAuB,CACjD7+B,UAAU,SAAD,oGAAC,EAAC,SAACvU,GACVyV,uBAAsB,WAAO,IAAD,EAC1BlB,IACArI,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,SAAO,MAAKM,GAAL,SAAKA,EAASsE,WAAd,EAAK,EAAepG,MAApB,mCACPyQ,QAAS,mBAKjB2F,aAAc,SAACrU,EAAOX,GACpB4M,EAAS9B,GAAQF,MAAM9E,MAAMlF,cAAc,CAACD,EAA4BX,MAG1E6O,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,cAGrE8rB,EAAS/jC,eAAkB,8BAAAG,EAAAC,OAAA,gDAC/Bq8C,EAAoB1+B,OAAO,CACzBsB,WAAYgJ,EAAYvX,kBACxBtJ,KAAM4B,EAAMV,OAAOlB,KAAKoB,OAAS,GACjCsW,UAAW,SAAC9V,EAAMV,OAAO0C,QAAQxC,QAArB,EAA4BhJ,GAAYyN,OAAM,SAACjE,EAAMV,OAAO0C,QAAQxC,YAAtB,EAAC,EAA4BhJ,IAA1C,KAC7CuL,MAAO/B,EAAMV,OAAOyC,MAAMvC,MAC1BqC,WAAYoC,OAAOjE,EAAMV,OAAOuC,WAAWrC,OAC3CsC,MAAO9B,EAAMV,OAAOwC,MAAMtC,OAAS,GACnCwvC,OAAQ/qC,OAAM,SAACjE,EAAMV,OAAO4B,KAAK1B,YAAnB,EAAC,EAAyBhJ,MARX,8DAU9B,CACD68C,EACAp0B,EAAYvX,kBACZ1H,EAAMV,OAAOlB,KAAKoB,MAHjB,SAIDQ,EAAMV,OAAO0C,QAAQxC,YAJpB,EAID,EAA4BhJ,GAC5BwJ,EAAMV,OAAOyC,MAAMvC,MACnBQ,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOwC,MAAMtC,MAPlB,SAQDQ,EAAMV,OAAO4B,KAAK1B,YARjB,EAQD,EAAyBhJ,KAGrBkkC,EAAa9jC,WAAc,iBAAM,CAAC,IAAK,OAAM,IACnD,OACE,gBAACujC,GAAD,CACEptB,MAAM,oBACN1N,KAAMA,EACNq7B,WAAYA,EACZzuB,QAASonC,EAAoBpnC,QAC7BkU,QAASA,EACTka,aAAcM,EACdP,YAAY,QAEZ,gBAAC,GAAD,O,qkBCvDN,IAAM5gB,GAAuB5D,aAAH,ucA0B1B,SAAS29B,KACP,IAAMzrC,EAAQsQ,eACd,OACE,gBAAC,KAAD,CACEmE,WAAS,EACT9lB,eAAgB,CACdZ,OAAQ,GACRiI,gBAAiBgK,EAAMX,OAAOsT,QAC9B7kB,MAAO,OACP6d,QAAS,GACTuI,OAAQ,EACRtgB,cAAe,OAEjBtD,OAAQ,CACN,CAAE2I,IAAK,cAAelL,OAAQ,GAAID,MAAO,GAAIkjB,iBAAkB,GAAIxgB,aAAc,IACjF,CACEyI,IAAK,iBACLrF,cAAe,SACf3F,SAAU,CACR,CACEgL,IAAK,YACLlL,OAAQ,GACRD,MAAO,IACP8d,UAAW,EACX0U,WAAY,EACZ9vB,aAAc,MAEhB,CACEyI,IAAK,YACLlL,OAAQ,GACRD,MAAO,IACP8d,UAAW,EACX0U,WAAY,EACZ9vB,aAAc,WAQb,SAASk7C,KAAe,IAAD,IAC9BjpC,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvCvK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQjG,SAC9C2vC,EAAY7nC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,SAChD8G,EAAWV,KAEjB,EAAmCyK,aAAgBqD,GAAsB,CACvExE,UAAW,CACTiB,WAAYhS,OAAOsG,EAAO7C,mBAC1Bgb,OAAQ1iB,EAAM+F,YAEhByQ,YAAa,iBALPhB,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAQjBhI,EAAa4Y,2BAEboQ,EAAYC,0BAClB1lC,aAAgB,WACVoJ,EAAM8F,kBAAoBu2B,GAC5BjwB,EAAS9B,GAAQP,QAAQjG,MAAMmC,kBAAiB,MAEjD,CAACmG,EAAUiwB,EAAWr8B,EAAM8F,kBAE/B,IAAM4tC,EAAgBj8B,GAAe3Y,EAAW60C,YACxC/9C,EAAU02B,eAAV12B,MAGF22B,EAAa/yB,KAAKgzB,MAAM52B,EADZ,MACkC,EAE9CkO,GAAY,MAAJ0R,GAAA,SAAAA,EAAMrQ,WAAN,WAAgB6T,oBAAhB,IAA+BC,QAAS,GAChDyT,IAAiB,MAAC5oB,KAAOwN,SAAUrF,EAEzC,OACE,gCACE,gBAAC6T,EAAA,EAAD,CAAaC,eAAa,EAACvkB,MAAO+O,EAAOzC,MAAMX,OAAOgB,OAAQ6J,QAAS/F,IACjE,MAALnI,KAAOwN,OAAS,KACf,gBAAC3T,EAAA,EAAD,CAAMtF,MAAOqC,GAAO4nB,OAClB,gBAACF,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,MAGzC,gBAAC,IAAD,CACE7M,KAAMkX,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAK5oB,EACnDipB,UAAW,kBACT1R,EAAQ,CACNpF,WAAYhS,OAAOsG,EAAO7C,mBAC1Bgb,OAAQ1iB,EAAM+F,cAGlB8mB,aAAc,WAAW7pB,GAAX,MAAGD,EAAH,EAAGA,KAAH,gBAA+B,MAAJA,GAAA,SAAAA,EAAMqW,WAAN,IAAY5iB,KAAMwM,IAC3D3K,MAAO,CACLsU,KAAM,EACNqO,WAAY,GAEd8R,WAAY7gB,EACZ+gB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY7gB,EAAS8gB,UAAW1R,IAChEkR,WAAYA,EACZvJ,sBAAuB,CAAEptB,MAAO,OAAQmG,UAAW,UACnDmxB,WAAY,0BAAShU,EAAT,EAAGnW,KAAH,OACD,IAATmW,EACE,gBAACq6B,GAAD,MAEA,gBAACxyB,GAAA,EAAD,CACEhgB,IAAG,eAAUmY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAY5iB,IACzB6B,MAAO,CAAE2jB,OAAQ,EAAGS,eAAgB,EAAGnkB,aAAc,EAAG1C,MAAO,SAE/D,gBAACmrB,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CAAE2C,YAAa,EAAGggB,WAAY,EAAG/f,aAAc,EAAG+oB,cAAe,IAExE,gBAAC,KAAK7K,KAAN,CACE9gB,MAAO,CAAEzC,MAAO,QAChBmX,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKpG,KACxBmsB,WAAY,CAAE/c,WAAY,QAC1Bid,iBAAkB,CAAElvB,SAAU,IAC9B0nB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAYlY,OAAd,SAAE,EAAkB9C,WAApB,EAAE,EAAwBmV,QAAQ,IAAK,KAAKqqB,cACvDjlC,KAAM,4BACJ,MAACugB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAY5U,OAAZ,EAAkBsC,MAUjB,gBAAC,KAAOma,MAAR,CACEhU,OAAQ,CAAEU,IAAG,MAAEuL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5U,KAAKsC,OAChCzO,MAAO,CACL0D,UAAW,SACX+c,iBAAkB,GAClBhb,gBAAiByM,EAAOxC,QAAQX,QAAQc,OAE1C7J,KAAM,KAhBR,gBAAC,KAAO2f,KAAR,CACEpF,KAAK,UACLvgB,MAAO,CACL0D,UAAW,SACX+c,iBAAkB,IAEpBza,KAAM,MAcZgc,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,wBACP+F,EAAWia,SAAS,oBAAqB,CACvC3W,OAAM,MAAEuC,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAY5iB,aAUnCk9C,GACC,gBAACzrB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM9E,MAAMjF,SAAQ,KACpD0d,MAAM,aAGV,gBAACq1B,GAAD,CACE/zC,KAAMo0C,EAAUp0C,KAChB8gB,QAAS,kBAAMxK,uBAAsB,kBAAMvJ,EAAS9B,GAAQF,MAAM9E,MAAMjF,SAAQ,QAChFoU,UAAW,WACTkB,uBAAsB,WACpBvJ,EAAS9B,GAAQF,MAAM9E,MAAMjF,SAAQ,IACrCgb,WAQZ,IAAM3gB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,GAER2V,MAAM,SACD3nB,IAAW4S,oBADX,IAEH0W,SAAU,EACVtX,KAAM,EACN5Q,UAAW,SACXhB,WAAY,SACZiB,eAAgB,WAElBwmB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVV,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,SCvLX,IAAM8E,GAASC,IAAWC,OAAO,CAC/Bg5C,eAAgB,CACd3vB,SAAU,GAEZ4vB,MAAO,CACL/1C,gBAAiB,cACjBtC,MAAO,UACPD,SAAU,IAEZqd,KAAM,CACJE,iBAAkB,KAIPyd,GAxDf,YAQuB,IAPrBljB,EAOoB,EAPpBA,WACA6I,EAMoB,EANpBA,SACAsa,EAKoB,EALpBA,MACAsd,EAIoB,EAJpBA,SACA/tC,EAGoB,EAHpBA,WACAguC,EAEoB,EAFpBA,cACA9tC,EACoB,EADpBA,iBAEQ6B,EAAU8D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCzC,MACR,OACE,gBAAC6uB,GAAA,EAAOC,OAAR,CACEv+B,MAAO,CAAEyF,gBAAiBgK,EAAMG,KAAOH,EAAMX,OAAOoJ,WAAazI,EAAMX,OAAOsT,UAE7EyB,EAAW,gBAACya,GAAA,EAAOE,WAAR,CAAmBvpB,QAAS+F,EAAWkiB,SAAa,KAC/Dwe,EAAgB,gBAACpd,GAAA,EAAOE,WAAR,CAAmBvpB,QAAS,kBAAMrH,GAAiB,MAAa,KAChF8tC,EACC,gBAACp2C,EAAA,EAAD,CAAMtF,MAAOqC,GAAOk5C,gBAClB,gBAACz5B,GAAA,EAAD,CACE9hB,MAAOqC,GAAOm5C,MACdr0C,MAAOuG,GAAc,GACrBgU,aAAc,SAACzJ,GAAD,OAAUwjC,EAASxjC,IACjC0jC,WAAS,KAIb,gBAACrd,GAAA,EAAOzV,QAAR,CACEnU,MAAOypB,EAAMQ,WAAWj+B,QAAQgU,MAChCwd,WAAY,CAAE/c,WAAY,UAG9B,gBAACm8B,GAAA,EAAD,CACEvrC,KAAK,SACLkP,QAAS,kBAAMrH,GAAkB8tC,IACjCv4C,MAAM,UACN6C,KAAM,GACNhG,MAAOqC,GAAOke,SC1BhBq7B,GAAW3B,eAEF,SAAS4B,KACtB,MAAwCtoC,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQjG,SAAtEgC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WACnBqG,EAAWV,KAEjB,OACE,gBAACuoC,GAASzB,UAAV,CACEC,cAAe,CACbC,aAAa,EACb9W,OAAQ,SAACjmC,GAAD,OACN,gBAAC,GAAD,QACMA,EADN,CAEEoQ,WAAYA,EACZguC,cAAejuC,EACfG,iBAAkB,SAAC+L,GAAD,OAChB5F,EAAS9B,GAAQP,QAAQjG,MAAMmC,iBAAiB+L,KAElD8hC,SAAU,SAACxjC,GAAD,OAAUlE,EAAS9B,GAAQP,QAAQjG,MAAMkC,cAAcsK,SAGrEqiC,UAAW,CACThmC,KAAM,KAIV,gBAACsnC,GAASrB,OAAV,CACEx0C,KAAK,cACLtH,UAAW08C,GACXz6C,QAAS,CAAEgU,MAAO,oBAEpB,gBAACknC,GAASrB,OAAV,CACEx0C,KAAK,oBACLtH,UAAW8b,GACX7Z,QAAS,CAAEgU,MAAO,UAEpB,gBAACknC,GAASrB,OAAV,CACEx0C,KAAK,sBACLtH,UAAWg7C,GACX/4C,QAAS,CAAEgU,MAAO,gBAEpB,gBAACknC,GAASrB,OAAV,CACEx0C,KAAK,qBACLtH,UAAWkvC,GACXjtC,QAAS,CAAEgU,MAAO,kBAEpB,gBAACknC,GAASrB,OAAV,CACEx0C,KAAK,kBACLtH,UAAWi8C,GACXh6C,QAAS,CAAEgU,MAAO,gBC5D1B,IAAMonC,GAAU7B,eAED,SAASthC,KACtB,OACE,gBAACmjC,GAAQ3B,UAAT,CACEC,cAAe,CACbC,aAAa,EACb9W,OAAQ,SAACjmC,GAAD,OAAW,gBAAC,GAAD,QAAYA,EAAZ,CAAmB8gC,cAAY,MAClDkc,UAAW,CACThmC,KAAM,IAGVynC,iBAAiB,uBAEjB,gBAACD,GAAQvB,OAAT,CACEx0C,KAAK,sBACLtH,UAAWg8C,GACX/5C,QAAS,CAAEgU,MAAO,mBAGpB,gBAAConC,GAAQvB,OAAT,CACEx0C,KAAK,sBACLtH,UAAWg7C,GACX/4C,QAAS,CAAEgU,MAAO,qBClCX,yBAAM,kC,qkBC4BrB,IAAMsnC,GAAYC,eAEZC,GAAe73C,WAAS83C,wBAAwB95B,MACvC,SAAS+5B,KACtB,MAA2B7oC,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACTK,EAA6C,SAAhCssC,IAAWC,iBAExBC,EAAen9B,GAAe3Y,EAAW+1C,UAEzCC,EAAYl+C,WAChB,iBAAO,CACL++B,WAAY,CACVn6B,MAAOsM,EAAMG,KAAOH,EAAMX,OAAOkR,UAAYtQ,EAAQ0S,SAEvD7B,KAAM,CACJm8B,YAAahtC,EAAQ0S,QACrBu6B,cAAejtC,EAAQX,QAAQa,MAEjCsI,WAAY,CACVwkC,YAAahtC,EAAQX,QAAQY,KAC7BgtC,cAAeltC,EAAMX,OAAOsT,YAGhC,CACE1S,EAAQX,QAAQa,KAChBF,EAAQX,QAAQY,KAChBD,EAAQ0S,QACR3S,EAAMX,OAAOkR,UACbvQ,EAAMX,OAAOsT,QACb3S,EAAMG,OAGJgtC,EAA2Cr+C,WAC/C,iBAAO,CACLy7C,SAAS,SACJyC,GADG,IAENl8B,KAAK,SACAk8B,EAAUl8B,MADX,IAEF9hB,UAAW,gBAAGo+C,EAAH,EAAGA,cAAe72C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAAC+4C,GAAD,CACEn2C,KAAK,WACL/F,MAAO,CAACqC,GAAOke,KAAMs8B,EAAgBx6C,GAAOy6C,gBAAa58C,GACnD8F,OAAM7C,MAAOA,SAK3BwV,cAAc,SACT8jC,GADQ,IAEXl8B,KAAK,SACAk8B,EAAUl8B,MADX,IAEF9hB,UAAW,gBAAGo+C,EAAH,EAAGA,cAAe72C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAAC+4C,GAAD,CACEn2C,KAAK,eACL/F,MAAO,CAACqC,GAAOke,KAAMs8B,EAAgBx6C,GAAOy6C,gBAAa58C,GACnD8F,OAAM7C,MAAOA,SAK3B45C,MAAM,SACDN,GADA,IAEHl8B,KAAK,SACAk8B,EAAUl8B,MADX,IAEF9hB,UAAW,gBAAGo+C,EAAH,EAAGA,cAAe72C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAAC+4C,GAAD,CACEn2C,KAAK,wBACL/F,MAAO,CAACqC,GAAOke,KAAMs8B,EAAgBx6C,GAAOy6C,gBAAa58C,GACnD8F,OAAM7C,MAAOA,YAM7B,CAACs5C,IAGH,OACE,gBAACT,GAAU7B,UAAX,MACE4B,iBAAiB,YACb5qC,IAAS+e,OAAO,CAClBI,IAAK,GACLH,IAAK,CACH6sB,OAAQ,SAAC1/C,GAAD,OACN,gBAAC,GAAD,MACE2/C,OAAO,SACPL,KAAMA,EAGN9oC,UAAU,uBACVopC,gBAAiB,IACjBC,cAAe,IACX7/C,MAIV+yB,QAAS,CACP2sB,OAAQ,SAAC1/C,GAAD,OACN,gBAAC,GAAD,MACE2/C,OAAO,SACPL,KAAMA,EAGN9oC,UAAU,uBACVopC,gBAAiB,IACjBC,cAAe,IACX7/C,QA5Bd,CAiCE8/C,cAAe,CACbC,gBAAiB,UACjBC,wBAAyB7tC,EAAMG,KAAOH,EAAMX,OAAOyuC,SAAW9tC,EAAMX,OAAOC,QAC3EyuC,sBAAuB/tC,EAAMG,KAAOH,EAAMX,OAAOsT,QAAU3S,EAAMX,OAAOC,QACxE0uC,kBAAmB,UACnBC,UAA2B,QAAhBvsC,IAASC,GACpBusC,UAAU,EACV39C,MAAO,CACLyF,gBAAiBgK,EAAMG,KAAOH,EAAMX,OAAOoJ,WAAa,UACxD0lC,eAAgBt7C,IAAWmgB,cAC3Bo7B,eAAgB,cAIpB,gBAAC7B,GAAUzB,OAAX,CACEx0C,KAAK,WACLtH,UAAWy7C,GACXx5C,QAAS,CACPo9C,YAAa,gBAAGC,EAAH,EAAGA,QAAS56C,EAAZ,EAAYA,MAAZ,OACV46C,EACC,gBAAC93C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAOqjB,MACP,CAAEviB,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAH5D,YADS,MAUb66C,WAAY,gBAAGD,EAAH,EAAGA,QAAS56C,EAAZ,EAAYA,MAAO6C,EAAnB,EAAmBA,KAAnB,OACV,gBAACqc,GAAA,EAAD,CACEtc,KAAK,WACL/F,MAAO,CAACqC,GAAOke,KAAMw9B,EAAU17C,GAAOy6C,gBAAa58C,GAC7C8F,OACN7C,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAG1D86C,eAAe,KAGnB,gBAACjC,GAAUzB,OAAX,CACEx0C,KAAK,gBACLtH,UAAWy/C,GACXx9C,QAAS,CACPo9C,YAAa,gBAAGC,EAAH,EAAGA,QAAS56C,EAAZ,EAAYA,MAAZ,OACV46C,EACC,gBAAC93C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAOqjB,MACP,CAAEviB,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAH5D,iBADS,MAUb66C,WAAY,gBAAGD,EAAH,EAAGA,QAAS56C,EAAZ,EAAYA,MAAO6C,EAAnB,EAAmBA,KAAnB,OACV,gBAACqc,GAAA,EAAD,CACEtc,KAAK,OACL/F,MAAO,CAACqC,GAAOke,KAAMw9B,EAAU17C,GAAOy6C,gBAAa58C,GAC7C8F,OACN7C,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAG1D86C,eAAe,KAGlB1B,GACC,gBAACP,GAAUzB,OAAX,CACEx0C,KAAK,QACLtH,UAAW0/C,GACXz9C,QAAS,CACPo9C,YAAa,gBAAGC,EAAH,EAAGA,QAAS56C,EAAZ,EAAYA,MAAZ,OACV46C,EACC,gBAAC93C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAOqjB,MACP,CAAEviB,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAH5D,SADS,MAUb66C,WAAY,gBAAGh4C,EAAH,EAAGA,KAAM7C,EAAT,EAASA,MAAO46C,EAAhB,EAAgBA,QAAhB,OACV,gBAAC17B,GAAA,EAAD,CACQrc,OAAM7C,QACZ4C,KAAK,gBACL/F,MAAO,CAACqC,GAAOke,KAAMw9B,EAAU17C,GAAOy6C,gBAAa58C,GAC7C8F,OACN7C,MAAO4M,GAAcguC,EAAUtuC,EAAMX,OAAOC,QAAU5L,KAG1D86C,eAAe,MAQ3B,I,GAAM57C,GAASC,IAAWC,OAAO,CAC/Bge,KAAM,CACJnc,QAAS,KAEX04C,WAAY,CACV14C,QAAS,GAEXshB,MAAO,CACLviB,MAAO,UACPD,SAAU,M,oBC7ORk7C,GAAkB7gC,aAAH,8fA8BN,SAAS7C,KAAmB,IAAD,EAClC3G,EAAWV,KACXuT,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAAmC4L,aAAgBsgC,IAA3CjhC,EAAR,EAAQA,KAAMvJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QACjBhI,EAAa4Y,2BAEnB,OACE,gBAACyqB,GAAA,EAAD,CAAcr+C,MAAOqC,GAAOG,WAC1B,gBAAC87C,GAAA,EAAD,CACEnhC,MAAU,MAAJA,GAAA,SAAAA,EAAMohC,gBAAN,IAAiB39B,QAAS,GAChCsT,WAAY,EACZO,WAAY7gB,EACZ8gB,UAAW,kBAAM1R,KACjBhjB,MAAO,CAAEsU,KAAM,EAAG/W,MAAO,QACzBotB,sBAAuB,CACrBiB,SAAU,EACVruB,MAAO,OACPouB,cAAe,KAEjBgZ,mBAAoB,kBAClB,gBAAC5a,GAAD,CAAWrV,MAAM,gBAAgBsV,SAAS,sBAAsB7mB,MAAM,aAExE0xB,WAAY,YAAe,IAAD,UAAXnqB,EAAW,EAAXA,KACb,OACE,gBAACge,GAAA,EAAD,CACE1oB,MAAO,CACLzC,MAAO4E,KAAWC,IAAI,UAAU7E,MAAQ,EAAI,GAC5ComB,OAAQ,GAEV1O,QAAS,0BAAAvW,EAAAC,OAAA,gDACP,MAAI+L,KAAMqW,OACFy9B,IAAoB53B,EAAYvX,kBACtC0E,EAAS9B,GAAQC,OAAOzB,YAAY/F,EAAKqW,OAErCy9B,GAGFxjC,EAAWE,QAAQ,gBAAiB,CAClC2pB,OAAQ,gBATP,8DAeJ,MAAJn6B,GAAA,SAAAA,EAAMqW,OAAN,EAAY3Y,OACX,gBAACsgB,GAAA,EAAK8qB,MAAN,CAAY5+B,OAAQ,CAAEU,IAAG,MAAE5K,GAAF,SAAEA,EAAMqW,WAAR,EAAE,EAAY3Y,UAEvC,gBAAC9C,EAAA,EAAD,CACEtF,MAAO,CACLqC,GAAOo8C,OACP,CAAEh5C,iBAAqB,MAAJiF,GAAA,SAAAA,EAAMqW,WAAN,IAAY5Y,oBAAgBjI,KAGjD,gBAAC,KAAOylB,KAAR,CACE3lB,MAAO,CAAEyF,iBAAqB,MAAJiF,GAAA,SAAAA,EAAMqW,WAAN,IAAY7Y,sBAAkBhI,GACxDqgB,KAAK,sBAKX,gBAACmI,GAAA,EAAKG,QAAN,KACE,gBAAClB,GAAA,EAAD,WAAQjd,GAAR,SAAQA,EAAMqW,WAAd,EAAQ,EAAYhb,WAO9B,gBAAC6pB,GAAA,EAAD,CACE5vB,MAAOqC,GAAO8nB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAMzI,MAAMlE,SAC7B2O,EAAS9B,GAAQF,MAAM1G,WAAWjG,SAClC2O,EAAS9B,GAAQF,MAAMjF,SAAS1H,SAChC4V,EAAWia,SAAS,wBAEtBvP,MAAM,qBAMd,I,GAAMrjB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN8G,QAAS,EACTjN,QAAS,OACTyd,SAAU,EACVnmB,gBAAiB,WAEnBg5C,OAAQ,CACNjhD,OAAQ,IACRkF,WAAY,SACZiB,eAAgB,UAElBwmB,IAAK,CACH1sB,SAAU,WACVkmB,OAAQ,GACR3B,MAAO,GACP5M,OAAQ,EACR3P,gBAAiB,WAEnBwkB,MAAO,CACL3V,KAAM,EACN7O,gBAAiB,UACjB/C,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,UC/GGse,MArCyByB,aAAH,spBAgDT,CAC1BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOwhC,gBAC/BziC,cAAe,CACborB,aAAc,cAEhBzrB,UAAW,CACT7V,KAAM,CAACwV,GAAW,wBC/CP,SAASZ,KACtB,IAAMhT,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5CiH,EAAWV,KAEXqrC,EAAiBC,GAA0B,CAC/C3oC,QAAS,SAAC6W,GAAD,OACP9Y,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASslB,EAAGrW,QAAS,YACrE2F,aAAc,SAACrU,EAAOV,GAAR,OACZ2M,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAACD,EAAiBV,MAElEgV,UAAW,SAACvU,GAAD,OACF,MAAPA,OAAA,EAAAA,EAASiF,WAAYiH,EAAS9B,GAAQC,OAAOzB,YAAY5I,EAAQiF,cAGrE,OACE,gBAAC2qB,GAAD,CAAkB9M,sBAAuB,CAAEloB,kBAAmB,KAC5D,gBAAC0wC,GAAD,CAAcv/B,QAAS8qC,EAAe9qC,UACtC,gBAAC,GAAD,CAAM5T,MAAOqC,GAAO4E,QAClB,gBAAC4N,EAAA,EAAD,CACEG,KAAK,YACLF,SAAU4pC,EAAe9qC,QACzBA,QAAS8qC,EAAe9qC,QACxBqB,QAAS,wBACPypC,EAAepiC,OAAO,CACpBvW,KAAM4B,EAAMV,OAAOlB,KAAKoB,OAAS,GACjCiB,OAAQT,EAAMV,OAAOmB,OAAOjB,MAC5BkgC,aAAcz7B,OAAM,SAACjE,EAAMV,OAAOgB,WAAWd,YAAzB,EAAC,EAA+BhJ,IACpDoB,IAAKoI,EAAMV,OAAO1H,IAAI4H,OAAS,KAC/B3H,IAAKmI,EAAMV,OAAOzH,IAAI2H,OAAS,KAC/Be,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,KACrDgB,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,SAZvD,UAuBR,IAAM9E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN5R,WAAY,UAEdgS,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET0J,OAAQ,CACN1J,MAAO,QAETuK,MAAO,CACLqc,aAAc,KChEZy6B,GAAQ3E,eAEC,SAASx/B,KACtB,OACE,gBAACmkC,GAAMzE,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACThmC,KAAM,IAGVynC,iBAAiB,aAEjB,gBAAC6C,GAAMrE,OAAP,CAAcx0C,KAAK,kBAAkBtH,UAAWic,KAChD,gBAACkkC,GAAMrE,OAAP,CAAcx0C,KAAK,uBAAuBtH,UAAWkc,M,qCCJrDkkC,GAAkBthC,aAAH,wYAsBN,SAAS1C,KACtB,IAAMlT,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQnD,SAC9CwF,EAAWV,KACX2H,EAAa4Y,2BACnB,EAA8BvX,aAAsBwiC,IAApD,WAAOC,EAAP,KAAsB3hC,EAAtB,KAEM4hC,EAAUxgD,eAAkB,sCAAAG,EAAAC,OAAA,mDAG1BqgD,EAAa,IAAItjC,OADP,0JAEZw4B,GAAW,EAEVvsC,EAAMV,OAAOwC,MAAMtC,QACtB+sC,GAAW,EACXngC,EAAS9B,GAAQP,QAAQnD,MAAMP,cAAc,uBAG1CrG,EAAMV,OAAO4G,SAAS1G,QACzB+sC,GAAW,EACXngC,EAAS9B,GAAQP,QAAQnD,MAAMN,iBAAiB,0BAG7C+wC,EAAWhiC,KAAKrV,EAAMV,OAAOwC,MAAMtC,SACtC+sC,GAAW,EACXngC,EAAS9B,GAAQP,QAAQnD,MAAMP,cAAc,gCAG1CkmC,EArB2B,6CAAAx1C,EAAA,MAuBPogD,EAAc,CACjCniC,UAAW,CACTlT,MAAO9B,EAAMV,OAAOwC,MAAMtC,MAC1B0G,SAAUlG,EAAMV,OAAO4G,SAAS1G,UA1BR,QA8BlB,OAPJ+V,EAvBsB,SA8BxB,SAAAA,EAAQC,OAAR,WAAc8hC,YAAd,EAAyBC,iBAAzB,MAA4ChiC,GAA5C,SAA4CA,EAAQC,OAApD,SAA4C,EAAc8hC,YAAd,EAAyB1vC,cACvEwE,EAAS9B,GAAQC,OAAOlC,eAAekN,EAAOC,KAAK8hC,UAAU1vC,cAC7DwE,EAAS9B,GAAQC,OAAOjC,QAAQiN,EAAOC,KAAK8hC,UAAUC,mBAhC5B,kDAmC5BnrC,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,KAAEA,QACXiP,QAAS,WAtCe,mEA2C/B,CAACzC,EAAU+qC,EAAen3C,EAAMV,OAAOwC,MAAMtC,MAAOQ,EAAMV,OAAO4G,SAAS1G,QAE7E,OACE,gBAAC,GAAD,CAAMnH,MAAOqC,GAAOG,WAClB,gBAAComB,GAAA,EAAD,CAAOhU,OAAQuqC,KAAMn/C,MAAO,CAAExC,OAAQ,IAAKD,MAAO,QAAU2lC,WAAW,YACvE,gBAACxJ,GAAA,EAAD,CAAsB15B,MAAOqC,GAAO4E,OAAQ0yB,SAAS,WACnD,gBAAC7X,GAAA,EAAD,CACE4D,MAAM,QACN1Q,KAAK,WACL7N,MAAOQ,EAAMV,OAAOwC,MAAMtC,MAC1Bua,aAAc,SAAC8E,GACbzS,EAAS9B,GAAQP,QAAQnD,MAAMT,SAAS0Y,OAG5C,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOwC,MAAMrC,OAAS,KAEtD,gBAAC0a,GAAA,EAAD,CACE4D,MAAM,WACN1Q,KAAK,WACL7N,MAAOQ,EAAMV,OAAO4G,SAAS1G,MAC7Bi4C,iBAAe,EACf19B,aAAc,SAAC8E,GACbzS,EAAS9B,GAAQP,QAAQnD,MAAMR,YAAYyY,KAE7C64B,gBAAiBN,EACjB33C,QAASO,EAAMV,OAAO4G,SAASzG,QAEjC,gBAAC6e,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAO4G,SAASzG,OAAS,KACzD,gBAACyN,EAAA,EAAD,CACEG,KAAK,YACLsoB,WAAYj7B,GAAO0/B,YACnB/hC,MAAOqC,GAAO0S,OACdE,QAAS8pC,EACTnrC,QAASuJ,EAAKvJ,SALhB,UAUA,gBAACiB,EAAA,EAAD,CACEyoB,WAAYj7B,GAAOi9C,gBACnBt/C,MAAOqC,GAAOk9C,WACdtqC,QAAS,kBAAM+F,EAAWia,SAAS,kBAHrC,aAYR,I,GAAM5yB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN5R,WAAY,SACZiB,eAAgB,SAChB8B,gBjKvIwB,UiKwIxBkd,WAAY,IAEdjO,MAAO,CACLxR,SAAU,GACViS,WAAY,QAGdlO,OAAQ,CACNkd,aAAc,GACd9I,WAAY,GACZ2b,SAAU,IACVz5B,MAAO,OACPkF,kBAAmB,GACnBgD,gBAAiB,eAEnBsP,OAAQ,CACNsG,UAAW,GACX5V,gBAAiB,QACjBlI,MAAO,QAETwkC,YAAa,CACX5+B,MAAO,WAETo8C,WAAY,CACVlkC,UAAW,GACX5V,gBAAiB,cACjBtC,MAAO,QACP5F,MAAO,QAET+hD,gBAAiB,CACfn8C,MAAO,aCjII2Y,MAxCqByB,aAAH,8xBAwC8D,CAC7FvB,WAAY,SAACkB,GAAD,OAAYA,EAAOsiC,YAC/BvjC,cAAe,CACbtS,QAAS,aAEXiS,UAAW,CACT7V,KAAM,CAACwV,GAAW,qBAClB9R,MAAO,CAACgS,GAAQ,+BAChBnN,qBAAsB,CACpBsN,GACE,qFACA,SAAC3U,GAAD,MACE,mDAAmD+V,KAAK/V,EAAOqH,yBAEnEsN,GACE,yBACA,SAAC3U,GAAD,OAAYA,EAAO4G,WAAa5G,EAAOqH,4BC9ChC,SAASmxC,KACtB,IAAM93C,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQlD,UAC9CoY,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KACX2H,EAAa4Y,2BAEnB,EAAsC8rB,GAAkB,CACtDtjC,UAAW,SAACvU,GAWV,OATAkM,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAAS,kDACTiP,QAAS,aAIbwE,EAAWia,SAAS,eAEb,MAET9Y,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQP,QAAQlD,OAAOzG,cAAc,CAACD,EAAoCX,QAf/EyM,EAAR,EAAQA,QAAiB+rC,EAAzB,EAAiBrjC,OAkBjB,OACE,gBAACmb,GAAD,CAAkBz3B,MAAOqC,GAAOG,UAAWmoB,sBAAuBtoB,GAAOe,SACvE,gBAACs2B,GAAA,EAAD,CAAsB15B,MAAOqC,GAAO4E,OAAQ0yB,SAAS,YACnD,gBAAC/Q,GAAA,EAAD,CAAOhU,OAAQuqC,KAAMn/C,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,KAAO0lC,WAAW,YACvE,gBAACphB,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,MACzBua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQP,QAAQlD,OAAO9G,SAAS,CAAC,OAAQ8e,QAEhF,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOlB,KAAKqB,OAAS,IAErD,gBAAC6e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,MAAOQ,EAAMV,OAAOwC,MAAMtC,MAC1Bua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQlD,OAAO9G,SAAS,CAAC,QAAS8e,QAIvD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOwC,MAAMrC,OAAS,IAEtD,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,QACNte,QAASO,EAAMV,OAAOyC,MAAMtC,MAC5BD,MAAOQ,EAAMV,OAAOyC,MAAMvC,MAC1Bua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQlD,OAAO9G,SAAS,CAAC,QAAS8e,QAGvD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOyC,MAAMtC,OAAS,IAEtD,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,WACNte,MAAOwd,QAAQjd,EAAMV,OAAO4G,SAASzG,OAASO,EAAMV,OAAOqH,qBAAqBlH,OAChFw4C,gBAAgB,WAChBR,iBAAe,EACfS,cAAc,mEACd14C,MAAOQ,EAAMV,OAAO4G,SAAS1G,MAC7Bua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQlD,OAAO9G,SAAS,CAAC,WAAY8e,QAI1D,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAO4G,SAASzG,OAAS,IAEzD,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,kBACNte,MAAOwd,QAAQjd,EAAMV,OAAO4G,SAASzG,OAASO,EAAMV,OAAOqH,qBAAqBlH,OAChFw4C,gBAAgB,WAChBR,iBAAe,EACfS,cAAc,mEACd14C,MAAOQ,EAAMV,OAAOqH,qBAAqBnH,MACzCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQlD,OAAO9G,SAAS,CAAC,uBAAwB8e,QAGtE,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOqH,qBAAqBlH,OAAS,IAErE,gBAACyN,EAAA,EAAD,CACEG,KAAK,YACLsoB,WAAYj7B,GAAO0/B,YACnB/hC,MAAOqC,GAAO0S,OACdE,QAAS,0BACP0qC,EAAS,CACP9hC,UAAW+I,EAAYpX,cACvB/F,MAAO9B,EAAMV,OAAOwC,MAAMtC,MAC1BpB,KAAM4B,EAAMV,OAAOlB,KAAKoB,MACxBqC,WAAY7B,EAAMV,OAAOuC,WAAWrC,MACpC0G,SAAUlG,EAAMV,OAAO4G,SAAS1G,MAChCmH,qBAAsB3G,EAAMV,OAAOqH,qBAAqBnH,MACxDsW,UAAW7R,OAAM,SAACjE,EAAMV,OAAO0C,UAAd,SAAC,EAAsBxC,YAAvB,EAAC,EAA6BhJ,KAAO,KACtDuL,MAAO/B,EAAMV,OAAOyC,MAAMvC,SAG9ByM,QAASA,GAhBX,aAyBR,IAAMvR,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACT8R,KAAM,EACN7O,gBnKrIwB,WmKuI1BrC,QAAS,CACPX,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnBsP,OAAQ,CACNsG,UAAW,GACX5V,gBAAiB,QACjBlI,MAAO,QAETwkC,YAAa,CACX5+B,MAAO,WAETuR,MAAO,CACLxR,SAAU,GACViS,WAAY,QAEdkqB,UAAW,CACTjb,eAAgB,GAChB5mB,OAAQ,EACRD,MAAO,OAET0J,OAAQ,CACN1J,MAAO,OACPquB,SAAU,EACVoL,SAAU,IACVvxB,gBAAiB,eAEnBqC,MAAO,CACLqc,aAAc,EACd1e,gBAAiB,QACjBhC,YAAa,QACbN,MAAO,WCtKLy7C,GAAQ3E,eAEC,SAASr/B,KACtB,OACE,gBAAC,GAAMu/B,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACThmC,KAAM,KAIV,gBAAC,GAAMimC,OAAP,CAAcx0C,KAAK,cAActH,UAAWoc,KAC5C,gBAAC,GAAM0/B,OAAP,CAAcx0C,KAAK,eAAetH,UAAWqc,MCmBnD,IAAMzY,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTE,WAAY,SACZ+C,gBAAiB,eAEnBrC,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBqR,MAAO,CACLvR,MAAO,QACPghB,aAAc,IACdjhB,SAAU,GACViS,WAAY,QAEdwX,KAAM,CACJvR,QAAS,GACTgJ,eAAgB,GAChB7mB,MAAO,UAIIuiD,GAxDf,SAAsCxiD,GACpC,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5CiH,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,sBACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACE9M,KAAK,WACL5N,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,OAAQ8e,QAGtD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASve,EAAMV,OAAOlB,KAAKqB,OAAS,KAEvD,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC6a,GAAD,CACErgC,MAAOQ,EAAMV,OAAOgB,WAAWd,MAC/B2Y,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,aAAcP,QAE/E,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgB,WAAWb,MAAQ,QAAU,QACzDO,EAAMV,OAAOgB,WAAWb,OAAS,Q,+kBCiJ9C,IAAM/E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnBosB,eAAgB,CACdp0B,SAAU,WACV2C,IAAK,IACLE,KAAM,EACN/C,MAAO,OACP8F,cAAe,SACfX,WAAY,SACZiB,eAAgB,cAElB+Q,MAAO,CACLxR,SAAU,GACViS,WAAY,OACZhS,MAAO,QACPL,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZ40C,YAAY,SACP9vC,IAAW4S,oBADL,IAETvR,eAAgB,SAChB24B,OAAQ,IACR55B,WAAY,SACZW,cAAe,WAEjBD,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CACJvR,QAAS,EACTE,gBAAiB,GACjB8I,eAAgB,GAChB7mB,MAAO,QAET80C,WAAY,CACV50C,SAAU,WACV2X,OAAQ,MACR4M,MAAO,GACPvc,gBAAiB,QACjBxF,aAAc,GACdmb,QAAS,MAIEk3B,GAvNf,SAA4Bh1C,GAA4B,IAAD,IAC/CqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5CiH,EAAWV,KACjB,EAA4B9U,aAA5B,WAAOZ,EAAP,KAAe80C,EAAf,KAEM9V,EAAmBp+B,eAAkB,8BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,aADPC,EAF+B,EAE/BA,QAF+B,uBAIrCW,QAAQC,IAAIZ,GAJyB,6CAAAJ,EAAA,MAOhBG,KAAiC,KAPjB,QAOjC49B,EAPiC,OASvC1oB,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAO+0B,EAAS7+B,OAAO0D,YACjEyS,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAO+0B,EAAS7+B,OAAOg+B,aAEjE6W,EAAU,CACRlzC,IAAKk9B,EAAS7+B,OAAO0D,SACrB9B,IAAKi9B,EAAS7+B,OAAOg+B,YAdgB,kDAiBvCn8B,QAAQC,IAAR,MAjBuC,mEAmBxC,CAACqU,IAGJxV,aAAgB,WACiB,OAA3BoJ,EAAMV,OAAO1H,IAAI4H,OAA4C,MAA1BQ,EAAMV,OAAOzH,IAAI2H,OACtDw1B,MAED,CAACA,EAAkBh1B,EAAMV,OAAO1H,IAAI4H,MAAOQ,EAAMV,OAAOzH,IAAI2H,QAE/D,IAAM/C,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAE1CouC,EACJ/qC,EAAMV,OAAO1H,IAAI4H,OAASQ,EAAMV,OAAOzH,IAAI2H,MACvC,CACE7F,SAAUqG,EAAMV,OAAO1H,IAAI4H,MAC3By0B,UAAWj0B,EAAMV,OAAOzH,IAAI2H,MAC5B44C,cAAe1+C,aAAqBsG,EAAMV,OAAO1H,IAAI4H,OACrD64C,eAAgB3+C,aAAqBsG,EAAMV,OAAO1H,IAAI4H,aAExDjH,EAEA2yC,EAAUt0C,SACd8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGfiuC,EAASv0C,SACb8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGfkuC,EAAoBx0C,eAAkB,SAACob,GAC3Cla,QAAQC,IAAI,CAAEia,aACbA,EAAUm5B,EAASD,GAASj0C,QAAQqG,UACpC,IAEH,EAA0BgvB,eAAlBz2B,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,MAChB,EAAkCgB,YAAe,GAAjD,WAAOs9B,EAAP,KAAmBC,EAAnB,KAEA,OACE,gBAAC,GAAD,MACExE,eAAa,EACbt3B,MAAOqC,GAAOG,UACdpE,eAAgB,CAAEqE,kBAAmB,IACjCnF,GAEJ,gBAAC,KAAD,CACEe,SAAQ,MACHiE,IAAW4S,oBAEhBzX,SAAU,CACR8C,EAAG,EACHF,EAAG,GAEC7C,SAAQD,QACdK,OACQ,MAAN80C,KAAQpxC,UAAR,MAAoBoxC,KAAQ9W,UACxB,CAAEr8B,IAAG,MAAEmzC,OAAF,EAAEA,EAAQpxC,SAAU9B,IAAG,MAAEkzC,OAAF,EAAEA,EAAQ9W,gBACtC17B,EAEN+yC,YAAa,WACXnX,GAAY,GACZiX,GAAkB,IAEpBp1C,OAAQA,QAAUuC,EAClBnC,UAAW,SAACm1C,GAAO,IAAD,IAChB,SAAAL,EAAQj0C,UAAR,EAAiBuG,OACjB,SAAA2tC,EAAOl0C,UAAP,EAAgBuG,OAChB4tC,GAAkB,GAClBjX,GAAY,GACZ/nB,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAOwrC,EAAE3zC,OACnDwU,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,MAAOwrC,EAAE1zC,QAErD1B,aAAW,GAET40C,EACA,gBAACptC,EAAA,EAAD,CAAMtF,MAAOqC,GAAO+vC,YAAa5xC,cAAc,QAC7C,gBAAC6hB,GAAA,EAAD,CACE7hB,cAAc,OACdwF,KAAM,GACNhG,MAAO,CACLmD,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBs5B,OAAQ,IAEVv2B,KAAM81B,EAAa,aAAe,8BAf7B,MAoBb,gBAAC5gB,GAAA,EAAD,CACEjb,MAAOqC,GAAOgwC,WACdp9B,QAAS,WACP0nB,MAGF,gBAAC2U,GAAA,EAAD,CAAevrC,KAAK,cAAcC,KAAM,MAG1C,gBAACV,EAAA,EAAD,CAAMtF,MAAOqC,GAAOwvB,gBAClB,gBAAC5rB,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAApB,iBACA,gBAAC,KAASzO,KAAV,CACEjG,MAAO,CACLkD,SAAU,GACVmY,UAAW,GACXjX,QAASA,EAAQxF,QACjBkE,UAAW,SACXK,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,KAGnB,MAAC0vC,KAAQpxC,UAAY,MAACoxC,KAAQ9W,UAC7B,sCACG8W,GADH,SACGA,EAAQpxC,eADX,EACG,EAAkBwnB,QAAQ,GAD7B,UACkC4pB,GADlC,SACkCA,EAAQ9W,gBAD1C,EACkC,EAAmB9S,QAAQ,IAFpB,SC9DrD,IAAMzmB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,GACpCsW,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbgF,MAAO,CACLqc,aAAc,GAEhByW,OAAQ,CACNv3B,cAAe,UAEjBw3B,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SAII0iD,GAhJf,SAA8B3iD,GAA4B,IAAD,gBACjDqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzI,SAClD,EAAgC/K,YAAoB,MAALoJ,GAAA,SAAAA,EAAOV,SAAP,WAAe6C,eAAf,IAAyB3C,QAAS,GAAjF,WAAO2C,EAAP,KAAiBo2C,EAAjB,KACA,EAAgC3hD,YAAoB,MAALoJ,GAAA,SAAAA,EAAOV,SAAP,WAAesC,eAAf,IAAyBpC,QAAS,GAAjF,WAAOoC,EAAP,KAAiB42C,EAAjB,KACMpsC,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,aACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,oBACA,gBAAC/C,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,OACNte,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,MACzBua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,OAAQ8e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,IAG9B,gBAAC0a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,eACNte,QAASO,EAAMV,OAAO4C,aAAazC,MACnCD,MAAOQ,EAAMV,OAAO4C,aAAa1C,OAAS,GAC1Cua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,eAAgB8e,QAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO4C,aAAazC,MAAQ,QAAU,QAC3DO,EAAMV,OAAO4C,aAAazC,OAAS,KAIxC,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACrjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,sBACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WAAY7wB,GAAY,IAG9C,gBAACxE,EAAA,EAAD,CAAMtF,MAAOqC,GAAOu4B,QAClB,gBAAC,KAAD,CACE56B,MAAOqC,GAAOw4B,cACdulB,aAAc,EACdC,aAAc92C,GAAY,GAC1B+2C,KAAM,EACNn5C,MAAO2C,EACPy2C,sBAAsB,UACtBC,sBAAsB,UACtBlQ,cAAe,SAACnpC,GAAD,OAAW+4C,EAAY/4C,IACtCs5C,kBAAmB,kBACjB1sC,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,WAAYoC,SAKzD,gBAACmc,GAAA,EAAD,CAAYC,KAAM,SAAAve,EAAMV,OAAO6C,WAAb,EAAuB1C,MAAQ,QAAU,SACxD,SAAAO,EAAMV,OAAO6C,eAAb,IAAuB1C,QACtB,mFAIN,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACrjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,kBACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WAAYpxB,GAAY,KAG9C,gBAACjE,EAAA,EAAD,CAAMtF,MAAOqC,GAAOu4B,QAClB,gBAAC,KAAD,CACE56B,MAAOqC,GAAOw4B,cACdulB,aAAc,EACdC,aAAc,GACdC,KAAM,EACNC,sBAAsB,UACtBC,sBAAsB,UACtBr5C,MAAOoC,EACP+mC,cAAe,SAACnpC,GAAD,OAAWg5C,EAAYh5C,IACtCs5C,kBAAmB,kBACjB1sC,EAAS9B,GAAQF,MAAMzI,MAAM5B,SAAS,CAAC,WAAYkE,OAAOrC,UAKhE,gBAAC0c,GAAA,EAAD,CAAYC,KAAM,SAAAve,EAAMV,OAAOsC,WAAb,EAAuBnC,MAAQ,QAAU,SACxD,SAAAO,EAAMV,OAAOsC,eAAb,IAAuBnC,QAAS,4CC5C7C,I,GAAM/E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdoF,MAAO,CACLqc,aAAc,GAEhB/gB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IAEpC0sB,SAAU,CACRtzC,OAAQ,GACRD,MAAO,GACPomB,OAAQ,KAIG+8B,GAnEf,SAAmCpjD,GACjC,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC5CiH,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,aACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACkC,EAAA,EAAD,CACEtF,MAAO,CACLqD,cAAe,MACfX,WAAY,WACZiB,eAAgB,iBAGlB,gBAAC8vC,GAAD,CACEtrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,YAGvD,gBAACusC,GAAD,CACEvrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,aAIzD,gBAAC,GAAD,CACEuN,MAAM,gBACNs8B,WAAW,wEACX5pC,MAAOO,EAAMV,OAAOkB,aAAaf,MACjC4wB,SAAU,SAAC70B,GAAD,OAAW4Q,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,eAAgBvE,MAC/EgE,MAAOQ,EAAMV,OAAOkB,aAAahB,OAAS,YAG5C,gBAAC,GAAD,CACEuN,MAAM,eACNs8B,WAAW,qEACX5pC,MAAOO,EAAMV,OAAOiB,eAAed,MACnC4wB,SAAU,SAAC70B,GAAD,OAAW4Q,EAAS9B,GAAQF,MAAMjF,SAASpF,SAAS,CAAC,iBAAkBvE,MACjFgE,MAAOQ,EAAMV,OAAOiB,eAAef,OAAS,e,kBClChD2vC,GAA6Bv5B,aAAH,4MAsDhC,IAAMlb,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,SACf8gB,aAAc,IAEhBwI,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IACpCsW,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbgF,MAAO,CACLqc,aAAc,GAEhByW,OAAQ,CACNv3B,cAAe,UAEjBw3B,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SAIIojD,GApFf,SAAgCrjD,GAAiC,IAAD,QACtD+hB,EAAwB/hB,EAAxB+hB,WAAesC,EAAvB,KAAgCrkB,EAAhC,IACMsjD,EAAertC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YACzD,EAAgDyY,aAAoBuxB,IAApE,WAAO+J,EAAP,YAAqB1jC,EAArB,EAAqBA,KAAMvJ,EAA3B,EAA2BA,QAAS6K,EAApC,EAAoCA,OAYpC,OAVAlgB,aAAgB,WAAO,IAAD,EACpB,SAAIqiD,EAAa75C,WAAb,EAAuB5I,IACzB0iD,EAAW,CACTlkC,UAAW,CACTiB,WAAYhS,OAAOg1C,EAAa75C,SAAS5I,SAI9C,CAACyiD,EAAa75C,SAAU85C,IAGzB,gBAAC,GAAD,MAAc7gD,MAAOqC,GAAOG,WAAemf,GACzC,gBAACrc,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SACfqb,IAAW7K,GAAX,MAAsBuJ,GAAtB,SAAsBA,EAAMrQ,WAA5B,SAAsB,EAAgB04B,QAAhB,EAAuBvsB,OAC9C,gBAACyP,GAAA,EAAD,KACE,gBAACA,GAAA,EAAKG,QAAN,CAAc7oB,MAAO,CAAE0C,WAAY,SAAUiB,eAAgB,WAA7D,MACGwZ,GADH,SACGA,EAAMrQ,WADT,SACG,EAAgB04B,YADnB,EACG,EAAuBlnC,KAAI,SAACuK,GAAD,aAC1B,gBAAC2tC,GAAD,CACEvN,eAAgB5pB,EAChBxW,KAAMA,EACN6L,MAAOg4B,sBAAU,MAAC7jC,GAAD,SAACA,EAAM9C,WAAP,EAAC,EAAYmV,QAAQ,IAAK,aAPK,QCiFlE,I,SAAM7Y,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IACpCsW,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,EACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbivB,UAAW,CACT5uB,MAAO,QACPghB,aAAc,EACdhP,WAAY,OAEZrS,UAAW,UAEbgF,MAAO,CACLqc,aAAc,EACd1D,iBAAkB,IAEpBma,OAAQ,CACNv3B,cAAe,UAEjBw3B,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SAIIujD,GA/Kf,SAAgCxjD,GAA4B,IAAD,QACnDqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1G,cAC5C0I,EAAWV,KACjB,EAAgD9U,YAAe,GAA/D,WAAO05B,EAAP,KAAyBC,EAAzB,KACA,EAA0B35B,WAAe,GAAzC,WAAOwiD,EAAP,KAAcC,EAAd,KAEA,OACE,gBAAC,GAAD,MAAchhD,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,YACtD,gBAACwV,GAAA,EAAD,CAAWlqB,MAAOqC,GAAO0vB,WAAzB,iDAEA,gBAACzsB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL5N,QAASO,EAAMV,OAAOlB,KAAKqB,MAC3BD,MAAOQ,EAAMV,OAAOlB,KAAKoB,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,OAAQ8e,QAGxD,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOlB,KAAKqB,MAAQ,QAAU,QACnDO,EAAMV,OAAOlB,KAAKqB,OAAS,KAIhC,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACrjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,cACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WAApB,IAAiComB,GAAS,IAG5C,gBAACz7C,EAAA,EAAD,CAAMtF,MAAOqC,GAAOu4B,QAClB,gBAAC,KAAD,CACE56B,MAAOqC,GAAOw4B,cACdulB,aAAc,EACdC,aAAc,IACdC,KAAM,EACNn5C,MAAO45C,EACPR,sBAAsB,UACtBC,sBAAsB,UACtBC,kBAAmB,kBAAM1sC,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,OAAQq5C,MAC7EzQ,cAAe0Q,KAInB,gBAAC/6B,GAAA,EAAD,CAAYC,KAAM,SAAAve,EAAMV,OAAO8B,OAAb,EAAmB3B,MAAQ,QAAU,SACpD,SAAAO,EAAMV,OAAO8B,WAAb,IAAmB3B,QAClB,mFAIN,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACvI,GAAA,EAAD,CACExG,UAAW,kBAAMse,GAAoB,IACrCve,QAASse,EACTZ,aAAc,CAAE95B,MAAO,KACvB8iB,OACE,gBAAC,IAAD,CAAkBpL,QAAS,kBAAMijB,GAAoB,KACnD,gBAAC5yB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,iBACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WACjBhzB,EAAMV,OAAOmF,SAASjF,OACvB,CAAC,IAAM,MAAOsY,SAAS9X,EAAMV,OAAOmF,SAASjF,OACzC,CACE,KAAS,SACT,IAAQ,aACRQ,EAAMV,OAAOmF,SAASjF,MAAMsf,YAC9B,aAMZ,gBAAC,KAAK3F,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,OACxDwwB,GAAoB,IAEtBxjB,MAAM,YACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,iBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,QACxDwwB,GAAoB,IAEtBxjB,MAAM,SACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,wBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAY,OACxDwwB,GAAoB,IAEtBxjB,MAAM,QACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,oBAI9B5Y,EAAMV,OAAOmF,SAASjF,QACtB,CAAC,IAAM,MAAOsY,SAAS9X,EAAMV,OAAOmF,SAASjF,SAC9C,gBAAC2a,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,kBACNte,QAASO,EAAMV,OAAOmF,SAAShF,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOmF,WAAf,SAAE,EAAuBjF,YAAzB,EAAE,EAA8Bsf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM1G,WAAW3D,SAAS,CAAC,WAAYkE,OAAO4a,aC/DhE1K,MAnDkByB,aAAH,q9BAsDF,CAC1BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOi3B,gBAC/Bl4B,cAAe,KCDFH,MAvDeyB,aAAH,4gCAkEF,CACvBvB,WAAY,SAACkB,GAAD,OAAYA,EAAOu3B,aAC/Bx4B,cAAe,CACbnP,SAAU,cAEZ8O,UAAW,CACT7V,KAAM,CAACwV,GAAW,qBAClB1R,aAAc,CAAC0R,GAAW,gCClBfO,MAvDeyB,aAAH,k/BA0DF,CACvBvB,WAAY,SAACkB,GAAD,OAAYA,EAAOgW,aAC/BjX,cAAe,KCkSFglC,OA5Uf,WAAgC,IAAD,UACvBC,EAAW3tC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzI,SAC/CiuC,EAAShkC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1G,cAC7CyB,EAAWyG,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMjF,YAC/CiH,EAAWV,KACX2H,EAAa4Y,2BAEbutB,EAAyBxC,GAA0B,CACvD3oC,QAAS,SAAC5O,GACR2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YAEzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GACpB4M,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAACD,EAA+BX,KAC9E1H,QAAQC,IAAIoI,EAAOX,MAGjB8sC,EAAyBmN,GAA0B,CACvDprC,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAACD,EAA+BX,QAE5EotC,EAAsB8M,GAAuB,CACjDrrC,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAACD,EAA4BX,QAEtEqtC,EAAsB8M,GAAuB,CACjDtrC,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAACD,EAA4BX,QAEtEo6C,EAA2B9R,GAA4B,CAC3Dz5B,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAACD,EAAiCX,QAEhF6oC,EAA2BN,GAA4B,CAC3D15B,QAAS,SAAC5O,GAAD,OACP2M,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,QAASH,EAAOoP,QAAS,YACzE4F,UAAW,SAACvU,GAAD,OAAapI,QAAQC,IAAImI,IACpCsU,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAACD,EAAiCX,QAGhFq6C,EAAkBjjD,eACtB,SAAOkM,EAAesrB,GAAtB,SAAAr3B,EAAAC,OAAA,mDACOmO,EAAS7F,OAAOlB,KAAKoB,MAD5B,uBAEI4M,EAAS9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,OAAQ,oCAF3D,6BAKO+E,EAAS7F,OAAOgB,WAAWd,MALlC,uBAMI4M,EACE9B,GAAQF,MAAMjF,SAAS/E,cAAc,CACnC,aACA,wDATR,0BAeEguB,EAAStrB,EAAQ,GAfnB,8DAiBA,CAACsJ,EAAUjH,EAAS7F,OAAOgB,WAAWd,MAAO2F,EAAS7F,OAAOlB,KAAKoB,QAG9Ds6C,EAAgBljD,eACpB,SAAOkM,EAAesrB,GAAtB,6BAAAr3B,EAAAC,OAAA,mDACOmO,EAAS7F,OAAOkB,aAAahB,MADpC,uBAEI4M,EACE9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,eAAgB,iCAH5D,6BAOO+E,EAAS7F,OAAOiB,eAAef,MAPtC,uBAQI4M,EACE9B,GAAQF,MAAMjF,SAAS/E,cAAc,CAAC,iBAAkB,iCAT9D,6BAaEtI,QAAQC,IAAIoN,EAAS7F,QAbvB,SAgBkB6F,EAAS/F,WAAT,EAAmB5I,GAhBrC,oCAAAO,EAAA,MAiBYyiD,EAAuB7kC,OAAO,CAClC+qB,aAAcz7B,OAAM,SAACkB,EAAS7F,OAAOgB,WAAWd,YAA5B,EAAC,EAAkChJ,IACvD4H,KAAM+G,EAAS7F,OAAOlB,KAAKoB,OAAS,GACpCiB,OAAQ,GACRD,aAAc2E,EAAS7F,OAAOkB,aAAahB,MAC3Ce,eAAgB4E,EAAS7F,OAAOiB,eAAef,MAC/C5H,IAAKuN,EAAS7F,OAAO1H,IAAI4H,MACzB3H,IAAKsN,EAAS7F,OAAOzH,IAAI2H,SAxBjC,+DAAAzI,EAAA,MA0BYu1C,EAAuB33B,OAAO,CAClCne,GAAIyN,OAAOkB,EAAS/F,SAAS5I,IAC7BkpC,aAAcz7B,OAAM,SAACkB,EAAS7F,OAAOgB,WAAWd,YAA5B,EAAC,EAAkChJ,IACvD4H,KAAM+G,EAAS7F,OAAOlB,KAAKoB,OAAS,GACpCgB,aAAc2E,EAAS7F,OAAOkB,aAAahB,MAC3Ce,eAAgB4E,EAAS7F,OAAOiB,eAAef,MAC/C5H,IAAKuN,EAAS7F,OAAO1H,IAAI4H,MACzB3H,IAAKsN,EAAS7F,OAAOzH,IAAI2H,MACzBiB,OAAQ,MAlChB,4BAqCM,OArBE8U,EAhBR,OAqCM,SAACA,EAAQG,SAAR,EAAgBpE,QAAjB,MAA2BiE,GAA3B,SAA2BA,EAAQpQ,YAAR,EAAkB3O,KAC/C4V,EAAS9B,GAAQF,MAAMjF,SAAS9E,QAAvB,MAA+BkV,OAA/B,EAA+BA,EAAQpQ,WAChDiH,EAAS9B,GAAQC,OAAOzB,YAAf,MAA2ByM,OAA3B,EAA2BA,EAAQpQ,WACxCoQ,EAAOpQ,SAAS3E,cAClB4L,EAAS9B,GAAQC,OAAO9B,gBAAf,MAA+B8M,GAA/B,SAA+BA,EAAQpQ,eAAvC,EAA+B,EAAkB3E,eAExD+U,EAAOpQ,SAAS5E,gBAClB6L,EAAS9B,GAAQC,OAAO1B,eAAf,MAA8B0M,GAA9B,SAA8BA,EAAQpQ,eAAtC,EAA8B,EAAkB5E,iBAE3D6tB,EAAStrB,EAAQ,IA9CrB,+DAiDA,CACEsJ,EACAjH,EAAS7F,OAFX,SAGE6F,EAAS/F,eAHX,EAGE,EAAmB5I,GACnBgjD,EACAlN,IAIEyN,EAAiBnjD,eACrB,SAAOkM,EAAesrB,GAAtB,uBAAAr3B,EAAAC,OAAA,mDACOuiD,EAASj6C,OAAOlB,KAAKoB,MAD5B,uBAEI4M,EAAS9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAAC,OAAQ,iCAFxD,6BAKOm5C,EAASj6C,OAAO4C,aAAa1C,MALpC,uBAMI4M,EACE9B,GAAQF,MAAMzI,MAAMvB,cAAc,CAChC,eACA,0CATR,sCAgBkBm5C,EAASn6C,WAAT,EAAmB5I,GAhBrC,mCAAAO,EAAA,MAiBY61C,EAAoBj4B,OAAO,CAC/BsB,WAAYhS,OAAM,MAACkB,GAAD,SAACA,EAAU/F,eAAX,EAAC,EAAoB5I,IACvC4H,KAAMm7C,EAASj6C,OAAOlB,KAAKoB,MAC3B0C,aAAcq3C,EAASj6C,OAAO4C,aAAa1C,MAC3C2C,SAAU8B,OAAOs1C,EAASj6C,OAAO6C,SAAS3C,OAC1CoC,SAAUqC,OAAOs1C,EAASj6C,OAAOsC,SAASpC,UAtBlD,8DAAAzI,EAAA,MAwBY81C,EAAoBl4B,OAAO,CAC/Bne,GAAIyN,OAAOs1C,EAASn6C,SAAS5I,IAC7B4H,KAAMm7C,EAASj6C,OAAOlB,KAAKoB,MAC3B0C,aAAcq3C,EAASj6C,OAAO4C,aAAa1C,MAC3C2C,SAAUo3C,EAASj6C,OAAO6C,SAAS3C,MACnCoC,SAAU23C,EAASj6C,OAAOsC,SAASpC,SA7B3C,4BAgCM,OAhBE+V,EAhBR,OAgCM,SAACA,EAAQG,SAAR,EAAgBpE,QAAjB,MAA2BiE,GAA3B,SAA2BA,EAAQ5T,SAAR,EAAenL,KAC5C4V,EAAS9B,GAAQF,MAAMzI,MAAMtB,QAApB,MAA4BkV,OAA5B,EAA4BA,EAAQ5T,QAC7CysB,EAAStrB,EAAQ,IAlCrB,+DAqCA,CACEy2C,EAASj6C,OAAOsC,SAASpC,MACzB+5C,EAASj6C,OAAO6C,SAAS3C,MACzB+5C,EAASj6C,OAAOlB,KAAKoB,MACrB+5C,EAASj6C,OAAO4C,aAAa1C,MAJ/B,SAKE+5C,EAASn6C,eALX,EAKE,EAAmB5I,GACnB4V,EANF,MAOEjH,GAPF,SAOEA,EAAU/F,eAPZ,EAOE,EAAoB5I,GACpBo2C,EACAC,IAIEmN,EAAmBpjD,eACvB,SAAOkM,EAAesrB,GAAtB,uBAAAr3B,EAAAC,OAAA,mDACO44C,EAAOtwC,OAAOlB,KAAKoB,MAD1B,uBAEI4M,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAAC,OAAQ,+BAF7D,6BAMOwvC,EAAOtwC,OAAO8B,KAAK5B,MAN1B,uBAOI4M,EAAS9B,GAAQF,MAAM1G,WAAWtD,cAAc,CAAC,OAAQ,+BAP7D,sCAYkBwvC,EAAOxwC,WAAP,EAAiB5I,GAZnC,mCAAAO,EAAA,MAaY6iD,EAAyBjlC,OAAO,CACpCsB,WAAYhS,OAAM,SAACkB,EAAS/F,eAAV,EAAC,EAAmB5I,IACtC4H,KAAMwxC,EAAOtwC,OAAOlB,KAAKoB,MACzB4B,KAAMwuC,EAAOtwC,OAAO8B,KAAK5B,MACzBiF,SAAUmrC,EAAOtwC,OAAOmF,SAASjF,MACjCmF,UAAU,EACVD,sBAAsB,KAnB9B,8DAAA3N,EAAA,MAqBYsxC,EAAyB1zB,OAAO,CACpCne,GAAIyN,OAAO2rC,EAAOxwC,SAAS5I,IAC3B4H,KAAMwxC,EAAOtwC,OAAOlB,KAAKoB,MACzB4B,KAAMwuC,EAAOtwC,OAAO8B,KAAK5B,MACzBiF,SAAUmrC,EAAOtwC,OAAOmF,SAASjF,MACjCmF,UAAU,EACVD,sBAAsB,KA3B9B,4BA8BM,OAlBE6Q,EAZR,OA8BM,SAACA,EAAQG,SAAR,EAAgBpE,QAAjB,MAA2BiE,GAA3B,SAA2BA,EAAQ7R,cAAR,EAAoBlN,KACjD4V,EAAS9B,GAAQF,MAAM1G,WAAWrD,QAAQkV,EAAO7R,aACjD0qB,EAAStrB,EAAQ,IAhCrB,+DAmCA,CACE8sC,EAAOtwC,OAAOlB,KAAKoB,MACnBowC,EAAOtwC,OAAO8B,KAAK5B,MACnBowC,EAAOtwC,OAAOmF,SAASjF,MAHzB,SAIEowC,EAAOxwC,eAJT,EAIE,EAAiB5I,GACjBojD,EALF,SAMEz0C,EAAS/F,eANX,EAME,EAAmB5I,GACnB6xC,EACAj8B,IAIJ,OACE,gBAAC,GAAD,KACE,gBAAC6tC,GAAD,CACE1qB,OAAQ,WACNnjB,EAAS9B,GAAQF,MAAMxE,eAAevF,SAAQ,IAC9C+L,EAAS9B,GAAQF,MAAMxE,eAAenI,SACtC2O,EAAS9B,GAAQF,MAAM1G,WAAWrD,SAAQ,IAC1C+L,EAAS9B,GAAQF,MAAMzI,MAAMtB,SAAQ,IACrC+L,EAAS9B,GAAQF,MAAMjF,SAAS9E,SAAQ,IACxC+L,EAAS9B,GAAQF,MAAM1G,WAAWjG,SAClC2O,EAAS9B,GAAQF,MAAMzI,MAAMlE,SAC7B2O,EAAS9B,GAAQF,MAAMjF,SAAS1H,SAChC4V,EAAWkiB,UAEb/F,gBAAgB,SAChBC,gBAAgB,OAChBtM,OAAQ02B,IAEV,gBAAC,GAAD,CACEtqB,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ,SAACngB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CwsB,gBAAgB,OAChBC,gBAAgB,SAGlB,gBAACyqB,GAAD,CACE3qB,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ22B,EACR7tC,QAASutC,EAAuBvtC,SAAWqgC,EAAuBrgC,QAClEwjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC2qB,GAAD,CACE5qB,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ42B,EACR9tC,QAAS2gC,EAAoB3gC,SAAW4gC,EAAoB5gC,QAC5DwjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC4qB,GAAD,CACE7qB,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ62B,EACR/tC,QAAS2tC,EAAyB3tC,SAAWo8B,EAAyBp8B,QACtEwjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACEziB,MAAM,oBACN2K,WAAY5Y,EAAWwoB,WACvBiI,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ,SAACngB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CysB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACEziB,MAAM,yBACN2K,WAAY5Y,EAAWuf,eACvBkR,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ,SAACngB,EAAKorB,GACZA,EAASprB,EAAM,IAEjBysB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACEziB,MAAM,iBACNsV,SAAS,uDACTmN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACvsB,EAAKorB,GAAN,OAAmBA,EAASprB,EAAM,IAC1CmgB,OAAQ,WACN/W,EAAS9B,GAAQC,OAAOzB,YAAY3D,EAAS/F,WACzC+F,EAAS7F,OAAOkB,aAAahB,OAC/B4M,EAAS9B,GAAQC,OAAO9B,gBAAgBtD,EAAS7F,OAAOkB,aAAahB,QAEnE2F,EAAS7F,OAAOiB,eAAef,OACjC4M,EAAS9B,GAAQC,OAAO1B,eAAe1D,EAAS7F,OAAOiB,eAAef,QAExE4M,EAAS9B,GAAQC,OAAOzB,YAAY3D,EAAS/F,WAE7CgN,EAAS9B,GAAQF,MAAMxE,eAAevF,SAAQ,IAC9C+L,EAAS9B,GAAQF,MAAMxE,eAAenI,SACtC2O,EAAS9B,GAAQF,MAAM1G,WAAWrD,SAAQ,IAC1C+L,EAAS9B,GAAQF,MAAMzI,MAAMtB,SAAQ,IACrC+L,EAAS9B,GAAQF,MAAMjF,SAAS9E,SAAQ,IACxC+L,EAAS9B,GAAQF,MAAM1G,WAAWjG,SAClC2O,EAAS9B,GAAQF,MAAMzI,MAAMlE,SAC7B2O,EAAS9B,GAAQF,MAAMjF,SAAS1H,SAGhC2O,EAAS9B,GAAQF,MAAMxE,eAAeV,YAGtCmO,EAAWE,QAAQ,gBAAiB,CAAE2pB,OAAQ,oBC9TxD,I,GAAMxiC,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTopB,SAAU,EACVnmB,gBAAiB,UACjB/C,WAAY,SACZiB,eAAgB,UAElB4c,KAAM,CACJ9a,gB/KnCwB,U+KoCxB0e,aAAc,IAEhB69B,UAAW,CACTv8C,gB/KrCwB,U+KsCxB0e,aAAc,IAEhBzP,MAAO,CACLxR,SAAU,GACVC,MAAO,UACPghB,aAAc,IAEhB6F,SAAU,CACR9mB,SAAU,GACVC,MAAO,UACPL,UAAW,YAIAm/C,GAlDf,WAA8B,IAAD,EACrBxvB,EAAQC,sBAOd,MAAuD,UAA3C,MAALD,GAAA,SAAAA,EAAOxY,aAAP,IAAeC,8BACpB,gBAAC5U,EAAA,EAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAAC,KAAOmjB,KAAR,CAAapF,KAAK,QAAQvgB,MAAOqC,GAAOke,OACxC,gBAACta,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAApB,aACA,gBAACzO,EAAA,EAAD,CAAMjG,MAAOqC,GAAO2nB,UAApB,uBAGF,gBAAC1kB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAAC,KAAOmjB,KAAR,CAAapF,KAAK,QAAQvgB,MAAOqC,GAAO2/C,YACxC,gBAAC/7C,EAAA,EAAD,CAAMjG,MAAOqC,GAAOqS,OAApB,SACA,gBAACzO,EAAA,EAAD,CAAMjG,MAAOqC,GAAO2nB,UAApB,kD,qBCUSnH,MA9BStF,aAAH,8fA8BkD,CACrEvB,WAAY,SAAC8G,GAAD,aAAWA,OAAX,EAAWA,EAAOy7B,aChBjB,SAAS2D,KAAc,IAAD,MAC3BzyC,EAAU8D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCzC,MACFsE,EAAWV,KACjB,EAA2CsK,KAAnCxO,EAAR,EAAQA,YAAarC,EAArB,EAAqBA,SAAU8G,EAA/B,EAA+BA,QACvBuJ,EAASglC,GAAkB,CACjCnsC,QAAS,SAAChL,GAAD,OAASvL,QAAQ2H,MAAM4D,MAD1BmS,KAIFnC,EAAa4Y,2BACbnB,EAAQC,sBACR0vB,EAAYC,wCAA6B5vB,GACzC6vB,EAAWtnC,EAAWunC,sBACtBC,EAAcF,EAASG,OAAOH,EAAS73C,OAAO9C,MAG9C+6C,EAAY,MAAGF,OAAH,EAAGA,EAAaC,OAAb,MAAoBD,OAApB,EAAoBA,EAAa/3C,OAChDk4C,EAAc,MAAGD,OAAH,EAAGA,EAAc/6C,MACjCi7C,EAAeJ,GAAeH,wCAA6BK,GAC/DE,EAAeA,IAAY,MAAID,OAAJ,EAAIA,EAAgBF,OAAO,GAAG18C,MAEzD,IAAM+oC,EAAoB1vB,GAAe3Y,EAAWsoC,gBAC9C8T,EAAiBzjC,GAAe3Y,EAAWq8C,aAC3CC,EAAuB3jC,GAAe3Y,EAAWu8C,kBACjDC,EAAkB7jC,GAAe3Y,EAAWy8C,aAC5CC,EAAuB/jC,GAAe3Y,EAAWk/B,iBACjDyd,EAAkBhkC,GAAe3Y,EAAW8nC,mBAC5CS,EAAiC5vB,GAAe3Y,EAAWwoC,oBAE3DoU,EACJvU,GACA+T,GACAE,GACAE,GACAE,GACAC,GACApU,EAEF,OACE,gBAAC1pC,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,EAAGqO,WAAY,MACjC/O,EACC,gBAAC,KAAD,CACExV,eAAgBiE,GAAOihD,SACvBp/B,WAAS,EACTnkB,OAAQ,CACN,CAAE2I,IAAK,SAAUzI,aAAc,GAAIzC,OAAQ,GAAID,MAAO,IACtD,CAAEmL,IAAK,OAAQlL,OAAQ,GAAID,MAAO,IAAKwyB,WAAY,EAAG1U,UAAW,OAIrE,gBAAC,KAAKyF,KAAN,CACExgB,KAAM,wBACJ,MAAC6O,GAAD,SAACA,EAAahD,OAAb,EAAmBsC,MAQlB,gBAAC,KAAOma,MAAR,CACE5iB,KAAM,GACN4O,OAAQ,CAAEU,IAAG,MAAEnG,OAAF,EAAEA,EAAahD,KAAKsC,OACjCzO,MAAO,CAAEyF,gBAAiBgK,EAAMX,OAAOsT,WAVzC,gBAAC,KAAOuD,KAAR,CACE3f,KAAM,GACNua,KAAK,UACLpd,MAAOsM,EAAMX,OAAOC,QACpB/O,MAAO,CAAEyF,gBAAiBgK,EAAMX,OAAOsT,YAU7C1N,MAAK,MAAEvF,GAAF,SAAEA,EAAahD,WAAf,EAAE,EAAmBpG,KAC1B6kB,YAAW,YAAO9d,OAAP,EAAOA,EAAU/G,MAC5BmsB,WAAY7vB,GAAOkhD,mBACnBnxB,iBAAkB/vB,GAAOmhD,sBACzBxjD,MAAOqC,GAAOohD,cACdxuC,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,uBAQpB,gBAAC7S,GAAD,CACE7O,MAAO,CACL,CACEzO,MAAO,OACPvN,MAAOulC,OAAuB,MAAXv9B,GAAA,SAAAA,EAAatG,WAAb,IAAmB9C,OAAQ,IAAImV,QAAQ,IAAK,OAEjE,CACExG,MAAO,QACPvN,MAAM,MAAgB,MAAXgI,OAAA,EAAAA,EAAapC,UAAW,OAKzC,gBAAC,IAAD,CAAY22C,8BAA8B,GACxC,gBAAC,KAAOxU,QAAR,CAAgBx6B,MAAM,WACpB,gBAAC,KAAOoM,KAAR,CACE4E,MAAM,WACNi+B,OAAQ,WAAW3mC,KAAK4lC,GAAgB,IACxCriC,KAAK,OACLtL,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,uBAKhB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,UACNi+B,OAAyB,kBAAjBf,EACRriC,KAAK,UACLtL,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,uBAMlB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,YACNi+B,OAAyB,oBAAjBf,EACRriC,KAAK,YACLtL,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,yBAOlB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,gBACNi+B,OAAyB,kBAAjBf,EACRriC,KAAK,OACLtL,QAAS,kBACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,sBAKhB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,eACNi+B,OAAyB,uBAAjBf,EACRriC,KAAK,OACLtL,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,4BAOlB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,UACNnF,KAAK,SACLtL,QAAS,WACPlB,EAAS9B,GAAQC,OAAOvB,UACxBqK,EAAWjH,SAAS0qB,iBAAcmlB,mBAIxC,gBAAC,KAAO1U,QAAR,CAAgBx6B,MAAM,YACpB,gBAAC,KAAOoM,KAAR,CACE4E,MAAM,iBACNi+B,OAAyB,+BAAjBf,EACRriC,KAAK,OACLtL,QAAS,WACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,oCAMjBwe,EACC,gBAAC,KAAOviC,KAAR,CACE6iC,OAAsB,aAAdvB,EACR18B,MAAM,WACNnF,KAAK,MACLtL,QAAS,kBACP+F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,gBACR5qB,OAAQ,CACN4qB,OAAQ,WACR5qB,OAAQ,CACN4qB,OAAQ,wBAMhB,MAEN,gBAAC,KAAOqK,QAAR,CAAgBx6B,MAAM,mBAAtB,MACGyI,GADH,SACGA,EAAMyD,YADT,EACG,EAAatiB,KAAI,SAACuiB,GAAD,iBAChB,gBAAC,KAAOC,KAAR,CACEpY,KAAG,MAAKmY,GAAL,SAAKA,EAAME,WAAX,EAAK,EAAY5iB,IAAjB,MACHunB,OAAW,MAAJ7E,GAAA,SAAAA,EAAME,WAAN,IAAYhb,OAAQ,GAC3Bwa,KAAK,aACLojC,QAAgB,MAAR72C,OAAA,EAAAA,EAAU3O,OAAV,MAAiB0iB,GAAjB,SAAiBA,EAAME,WAAvB,EAAiB,EAAY5iB,IACrC8W,QAAS,WACP,MAAI4L,KAAME,OACRhN,EAAS9B,GAAQC,OAAOzB,YAAYoQ,EAAKE,OACzC/F,EAAWia,SAAS,gBAAiB,CACnC4P,OAAQ,yBAMlB,gBAAC,KAAO/jB,KAAR,CACE4E,MAAM,aACNnF,KAAK,OACLtL,QAAS,WACP+F,EAAWia,SAAS,6BASlC,IAAM5yB,GAASC,IAAWC,OAAO,CAC/BshD,cAAe,CACbp+C,gBAAiB,UACjBmmB,SAAU,GAEZ03B,SAAU,CACR9lD,OAAQ,GACRD,MAAO,OACPkF,kBAAmB,EACnBY,cAAe,MACf8gB,aAAc,IAEhBs/B,cAAe,CACbt/B,aAAc,IAEhBo/B,mBAAoB,CAClBpuC,WAAY,OACZ4a,WAAY,GAEdyzB,sBAAuB,CACrBtgD,SAAU,GACV6sB,WAAY,KCjQV6uB,GAAQ3E,eACR6J,GAASC,eAEA,SAASC,KACtB,IAAMp9B,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAElD,OACE,gBAAC,GAAMioC,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACThmC,KAAM,KAITsS,EAAYrX,YACXqX,EAAYxX,gBACV,gBAAC,GAAMmrC,OAAP,CAAcx0C,KAAK,kBAChB,kBACC,gBAAC+9C,GAAO3J,UAAR,CAAkB8J,cAAe,kBAAM,gBAAC/B,GAAD,QACrC,gBAAC4B,GAAOvJ,OAAR,CAAex0C,KAAK,gBAAgBtH,UAAWylD,SAKrD,gBAAC,GAAM3J,OAAP,CAAcx0C,KAAK,YAAYtH,UAAW0lD,KAG5C,gBAAC,GAAM5J,OAAP,CAAcx0C,KAAK,kBAAkBtH,UAAW2lD,KAElD,gBAAC,GAAM7J,OAAP,CAAcx0C,KAAK,sBAAsBtH,UAAWwiD,KACpD,gBAAC,GAAM1G,OAAP,CAAcx0C,KAAK,UAAUtH,UAAWwjD,KACxC,gBAAC,GAAM1H,OAAP,CAAcx0C,KAAK,kBAAkBtH,UAAWic,KAEhD,gBAAC,GAAM6/B,OAAP,CAAcx0C,KAAK,WAAWtH,UAAWsc,GAAgBra,QAAS,CAAEgU,MAAO,Y,cCtBjF,IAAMrS,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBqR,MAAO,CACLvR,MAAO,QACPghB,aAAc,IACdjhB,SAAU,GACViS,WAAY,QAEdwX,KAAM,CACJvR,QAAS,GACTgJ,eAAgB,GAChB7mB,MAAO,UAII8mD,GA7Df,SAA+B/mD,GAA4B,IAAD,8BAClDqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5F,QAC5C4H,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,8BACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC6a,GAAD,CACErgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrE2Y,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM5F,KAAKvC,cAAczC,OAEjE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,KAI/B,gBAACshB,GAAA,EAAD,CAAM1oB,MAAO,CAAEob,QAAS,OACf,MAALzT,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,MAAiDwJ,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BhJ,MAC3E,gCACE,gBAACipC,GAAD,CACEjgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BkgC,aAAcz7B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2C9J,MAA3C,SAAiDwJ,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBhJ,KAE5E2hB,SAAU,SAAC3Y,GAAD,OAAW4M,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,UAAWP,QAExE,gBAAC8e,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,SCyE/C,IAAM/E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdoF,MAAO,CACLqc,aAAc,GAEhB/gB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,GAAIgJ,eAAgB,IACrC1P,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdjhB,SAAU,GACViS,WAAY,UAIDmvC,GA5Hf,SAAyBhnD,GACvB,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAC5C2I,EAAWV,KACjB,EAAkC9U,YAAe,GAAjD,WAAO0hB,EAAP,KAAmBC,EAAnB,KACA,EAAsC3hB,YAAe,GAArD,WAAOgmD,EAAP,KAAoBC,EAApB,KAEA,OACE,gBAAC,GAAD,MAAcxkD,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,yBACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,+BACA,gBAACzE,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAAC,IAAD,CAAkBpL,QAAS,kBAAMiL,GAAY,KAC3C,gBAAC4B,GAAA,EAAD,CACEthB,cAAc,WACdR,MAAOqC,GAAOyF,MACdkN,KAAK,WACL5N,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAOo9C,EAAc,QAAU58C,EAAMV,OAAOgD,KAAK9C,OAAS,sBAC1D2N,UAAQ,MAKb,CACC,OACA,UACA,SACA,SACA,aACA,WACA,uBACA,oBACA,SACAxW,KAAI,SAAC2L,GAAD,OACJ,gBAACmW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZnM,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,OAAQuC,KAC7Cu6C,GAAe,IAEjB9vC,MAAOzK,OAGX,gBAACmW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZnM,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,OAAQ,MAC7C88C,GAAe,IAEjB9vC,MAAM,WAGR6vC,EACA,gBAACziC,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL0Q,MAAM,qBACNte,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAOQ,EAAMV,OAAOgD,KAAK9C,OAAS,GAClCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,OAAQ8e,QAP7D,KAWhB,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOgD,KAAK7C,MAAQ,QAAU,QACnDO,EAAMV,OAAOgD,KAAK7C,OAAS,IAG9B,gBAAC,KAAKyd,UAAN,cACA,gBAAC/C,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL5N,QAASO,EAAMV,OAAOiD,MAAM9C,MAC5BD,MAAOQ,EAAMV,OAAOiD,MAAM/C,OAAS,GACnCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,QAAS8e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOiD,MAAM9C,MAAQ,QAAU,QACpDO,EAAMV,OAAOiD,MAAM9C,OAAS,aAIjC,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,sBACA,gBAAC/C,GAAA,EAAD,CACE9hB,MAAOqC,GAAOyF,MACdkN,KAAK,WACL5N,QAASO,EAAMV,OAAOkD,OAAO/C,MAC7BD,MAAOQ,EAAMV,OAAOkD,OAAOhD,OAAS,GACpCua,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,SAAU8e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOkD,OAAO/C,MAAQ,QAAU,QACrDO,EAAMV,OAAOkD,OAAO/C,OAAS,QCxE1C,IAAM/E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdoF,MAAO,CACLqc,aAAc,GAEhB/gB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IACpC1P,MAAO,CACLvR,MAAO,QACPD,SAAU,GACViS,WAAY,OACZgP,aAAc,GACdrhB,UAAW,YAIA49C,GA7Cf,SAAmCpjD,GACjC,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAC5C2I,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,yBACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,MAClB,gBAAC,KAAK9H,UAAN,iBACA,gBAACogB,GAAD,CACEC,UAAWv9B,EAAMV,OAAOmD,gBAAgBjD,QAAS,IAAI8W,MAAOC,UAAY,IACxE8Z,SAAU,SAAC6N,GAAD,OAAU9xB,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,kBAAmBm+B,QAE9E,gBAAC5f,GAAA,EAAD,CAAYC,KAAMve,EAAMV,OAAOmD,gBAAgBhD,MAAQ,QAAU,QAC9DO,EAAMV,OAAOmD,gBAAgBhD,OAAS,QCgBnD,IAAM/E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBqR,MAAO,CACLvR,MAAO,QACPghB,aAAc,IACdjhB,SAAU,GACViS,WAAY,QAEdwX,KAAM,CACJvR,QAAS,GACTgJ,eAAgB,GAChB9P,KAAM,EACNlQ,QAAS,IAEXu/C,OAAQ,CACNv/C,QAAS,KAIEigD,GA1Df,SAA+B/mD,GAC7B,IAAMqK,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzE,cAC5CyG,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAcrT,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,uBACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,CACE1oB,MAAO,CACLqC,GAAOsqB,MAC6B,IAApChlB,EAAMV,OAAO2F,aAAazF,MAAkB9E,GAAOshD,YAASzjD,GAE9D+U,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMzE,WAAW5F,SAAS,CAAC,gBAAgB,OAE3E,gBAACghB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,uBAGpB,gBAACgU,GAAA,EAAD,CACE1oB,MAAO,CACLqC,GAAOsqB,MAC6B,IAApChlB,EAAMV,OAAO2F,aAAazF,MAAiB9E,GAAOshD,YAASzjD,GAE7D+U,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMzE,WAAW5F,SAAS,CAAC,gBAAgB,OAE3E,gBAACghB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,0BC2E5B,IAAMrS,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjBspB,KAAM,CAAEvR,QAAS,EAAGgJ,eAAgB,IACpCsW,UAAW,CACTr3B,cAAe,MACfM,eAAgB,iBAElBg3B,UAAW,CACTxlB,WAAY,OACZyN,YAAa,EACb1f,SAAU,GACVQ,UAAW,UAEbgR,MAAO,CACLvR,MAAO,QACPghB,aAAc,GACdhP,WAAY,OACZjS,SAAU,GACVJ,UAAW,UAEbgF,MAAO,CACLqc,aAAc,GAEhByW,OAAQ,CACNv3B,cAAe,UAEjBw3B,cAAe,CAAEt9B,MAAO,OAAQC,OAAQ,IACxCyvB,YAAa,CACXvpB,UAAW,UAEbo3B,oBAAqB,CACnBv9B,MAAO,OAETw9B,qBAAsB,CACpBp4B,YAAa,GACbpF,MAAO,SAIIknD,GAhJf,SAAiCnnD,GAA4B,IAAD,QACpD44C,EAAU3iC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAC9Cs5C,EAAWnxC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5F,QAC/C4H,EAAWV,KACjB,EAAoC9U,WAAe23C,EAAQjvC,OAAOoD,WAAWlD,OAAS,KAAtF,WAAOkD,EAAP,KAAmBs6C,EAAnB,KACA,EAA4BpmD,WAAeqN,OAAO84C,EAASz9C,OAAOuC,WAAWrC,QAAU,KAAvF,WAAOotB,EAAP,KAAeqwB,EAAf,KAQA,OANArmD,aAAgB,WACV23C,EAAQjvC,OAAOoD,WAAWlD,OAC5Bw9C,EAAczO,EAAQjvC,OAAOoD,WAAWlD,SAEzC,CAAC+uC,EAAQjvC,OAAOoD,WAAWlD,QAG5B,gBAAC,GAAD,MAAcnH,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDoX,MAAM,qBACtD,gBAACpP,EAAA,EAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACslB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAKG,QAAN,CACE7oB,MAAO,CACLqD,cAAe,MACfX,WAAY,SACZiB,eAAgB,WAGlB,gBAAC2B,EAAA,EAAD,CAAMtF,MAAOqC,GAAOy4B,qBAClB,gBAAC,KAAO70B,KAAR,CACEyf,MAAO2I,gBACJ,MAAQziB,OAAO84C,EAASz9C,OAAOuC,WAAWrC,OAAS,KACjD+uC,EAAQjvC,OAAOoD,WAAWlD,OAAS,KACtC,GACAsf,WACFzgB,KAAM,IACNhG,MAAOqC,GAAO4qB,eAGlB,gBAAC3nB,EAAA,EAAD,CAAMtF,MAAOqC,GAAO04B,sBAClB,gBAACrS,GAAA,EAAKf,MAAN,CAAYjT,MAAM,mBAAmB1U,MAAO,CAAE2C,YAAa,KAC3D,gBAACunB,GAAA,EAAD,8EAMN,gBAACxB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACrjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,yBACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WAAYpG,GAAU,GAA1C,OAEF,gBAAC,KAAD,CACEv0B,MAAOqC,GAAOw4B,cACdulB,aAAc,GACdC,aAAc,IACdC,KAAM,GACNC,sBAAsB,UACtBC,sBAAsB,UACtBC,kBAAmB,kBACjB1sC,EAAS9B,GAAQF,MAAM5F,KAAKzE,SAAS,CAAC,aAAc6sB,EAAO9N,eAE7Dtf,MAAOotB,EACP+b,cAAe,SAACuU,GAAD,OAAOD,EAAUC,MAElC,gBAAC5+B,GAAA,EAAD,CAAYC,KAAM,SAAAw+B,EAASz9C,OAAOuC,aAAhB,EAA4BpC,MAAQ,QAAU,SAC7D,SAAAs9C,EAASz9C,OAAOuC,iBAAhB,IAA4BpC,QAAS,8CAI1C,gBAACshB,GAAA,EAAD,CAAM1oB,MAAOqC,GAAOsqB,KAAMhE,UAAW,GACnC,gBAACrjB,EAAA,EAAD,CAAMtF,MAAOqC,GAAOq4B,WAClB,gBAAC,KAAK7V,UAAN,oBACA,gBAAC5e,EAAA,EAAD,CAAMjG,MAAOqC,GAAOs4B,WAAYtwB,GAAc,IAA9C,OAGF,gBAAC/E,EAAA,EAAD,CAAMtF,MAAOqC,GAAOu4B,QAClB,gBAAC,KAAD,CACE56B,MAAOqC,GAAOw4B,cACdulB,aAAc,GACdC,aAAc,IACdC,KAAM,EACNn5C,MAAOkD,GAAc,IACrBk2C,sBAAsB,UACtBC,sBAAsB,UACtBlQ,cAAe,SAACtqC,GAAD,OAAU2+C,EAAc3+C,IACvCy6C,kBAAmB,kBACjB1sC,EAAS9B,GAAQF,MAAM3G,IAAI1D,SAAS,CAAC,aAAc2C,SAKzD,gBAAC4b,GAAA,EAAD,CAAYC,KAAM,SAAAw+B,EAASz9C,OAAOuC,aAAhB,EAA4BpC,MAAQ,QAAU,SAC7D,SAAAs9C,EAASz9C,OAAOuC,iBAAhB,IAA4BpC,QAAS,+C,qkBC8LlD,IAAM/E,GAASC,IAAWC,OAAO,CAC/BuiD,MAAM,SACDxiD,IAAW4S,oBADX,IAEHvS,YAAa,EACbotB,WAAY,EACZ5L,aAAc,EACd9I,UAAW,EACXsH,WAAY,EACZ/f,aAAc,EACd+oB,cAAe,EACflmB,gBAAiB,MACjB0I,QAAS,OACT5Q,MAAO,OACPC,OAAQ,OACR8W,KAAM,EACN5R,WAAY,aAIDqiD,GAjSf,WAA6B,IAAD,kBACpBL,EAAWnxC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5F,QAC/C+pC,EAAU3iC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3G,OAC9CzD,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzE,cAC5CyG,EAAWV,KACX+K,EAAqBC,GAAsB,CAC/CjC,UAAW,SAACyQ,GAAD,OAAO,GAClB7W,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,YAClE2F,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM5F,KAAKpE,cAAc,CAACD,EAA2BX,QAEpEgvC,EAAoBnP,GAAqB,CAC7C5qB,UAAW,kBAAM,GACjBpG,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,YAClE2F,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAACD,EAA0BX,QAElE69C,EAAoB/d,GAAqB,CAC7C7qB,UAAW,SAACyQ,GAAD,OAAO,GAClB7W,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAcrB,aAAa,CAAExJ,UAASiP,QAAS,YAClE2F,aAAc,SAACrU,EAAOX,GAAR,OACZ4M,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAACD,EAA0BX,QAGlE89C,EAAmB1mD,eACvB,SAAOkM,EAAesrB,GAAtB,uBAAAr3B,EAAAC,OAAA,4DAEO+lD,EAASz9C,OAAO0C,UAFvB,SAEO,EAAyBxC,QAAzB,EAAgChJ,GAFvC,uBAGI4V,EAAS9B,GAAQF,MAAM5F,KAAKpE,cAAc,CAAC,UAAW,+BAH1D,mBAIW,GAJX,kCAAArJ,EAAA,MASU0f,EAAmB9B,OAAO,CAC9Bne,GAAIyN,OAAM,SAAC84C,EAAS39C,eAAV,EAAC,EAAmB5I,IAC9Bsf,UAAW7R,OAAM,SAAC84C,EAASz9C,OAAO0C,UAAjB,SAAC,EAAyBxC,YAA1B,EAAC,EAAgChJ,OAXxD,gCAaW43B,EAAStrB,EAAQ,IAb5B,0DAeW,GAfX,kEAkBA,CAACsJ,EAAUqK,EAAX,SAA+BsmC,EAASz9C,OAAO0C,UAA/C,SAA+B,EAAyBxC,YAAxD,EAA+B,EAAgChJ,GAA/D,SAAmEumD,EAAS39C,eAA5E,EAAmE,EAAmB5I,KAGlF+mD,EAAY3mD,eAChB,SAAOkM,EAAesrB,GAAtB,2BAAAr3B,EAAAC,OAAA,4DAEOu3C,EAAQjvC,OAAOgD,OAAf,EAAqB9C,MAF5B,uBAGI4M,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAAC,OAAQ,gCAHtD,sCAOOmuC,EAAQjvC,OAAOiD,QAAf,EAAsB/C,MAP7B,uBAQI4M,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAAC,QAAS,+BARvD,+CAciBmuC,EAAQnvC,WAAR,EAAkB5I,GAdnC,oCAAAO,EAAA,MAecsmD,EAAkB1oC,OAAO,CAC7BrS,KAAMisC,EAAQjvC,OAAOgD,KAAK9C,MAC1B+C,MAAOgsC,EAAQjvC,OAAOiD,MAAM/C,MAC5BgD,OAAQ+rC,EAAQjvC,OAAOkD,OAAOhD,MAC9BmX,OAAQ1S,OAAM,SAAC84C,EAAS39C,eAAV,EAAC,EAAmB5I,OAnB5C,+DAAAO,EAAA,MAqBcy3C,EAAkB75B,OAAO,CAC7Bne,GAAIyN,OAAM,SAACsqC,EAAQnvC,eAAT,EAAC,EAAkB5I,IAC7B8L,KAAMisC,EAAQjvC,OAAOgD,KAAK9C,MAC1B+C,MAAOgsC,EAAQjvC,OAAOiD,MAAM/C,MAC5BgD,OAAQ+rC,EAAQjvC,OAAOkD,OAAOhD,MAC9BmX,OAAQ1S,OAAM,SAAC84C,EAAS39C,eAAV,EAAC,EAAmB5I,OA1B5C,4BA6BI,OAfMiN,EAdV,OA6BQA,EAAKA,KACP2I,EAAS9B,GAAQF,MAAM3G,IAAIpD,QAAQoD,EAAIA,MAEzC2qB,EAAStrB,EAAQ,GAhCrB,kDAkCIhL,QAAQ2H,MAAR,MAlCJ,mEAqCA,CACE8uC,EAAQjvC,OAAOgD,KAAK9C,MACpB+uC,EAAQjvC,OAAOiD,MAAM/C,MACrB+uC,EAAQjvC,OAAOkD,OAAOhD,MAHxB,SAIE+uC,EAAQnvC,eAJV,EAIE,EAAkB5I,GAClB4V,EACAixC,EANF,SAOEN,EAAS39C,eAPX,EAOE,EAAmB5I,GACnBg4C,IAIEgP,EAAsB5mD,eAC1B,SAAOkM,EAAesrB,GAAtB,mBAAAr3B,EAAAC,OAAA,4DAEOu3C,EAAQjvC,OAAOmD,kBAAf,EAAgCjD,MAFvC,uBAGI4M,EACE9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAC9B,kBACA,kDANR,mBASW,GATX,kCAAArJ,EAAA,MAcsBy3C,EAAkB75B,OAAO,CACzCne,GAAIyN,OAAM,SAACsqC,EAAQnvC,eAAT,EAAC,EAAkB5I,IAC7BiM,gBAAiB8rC,EAAQjvC,OAAOmD,gBAAgBjD,SAhBtD,cAkBI,OAJMiE,EAdV,SAkBQA,EAAKA,KACP2I,EAAS9B,GAAQF,MAAM3G,IAAIpD,QAAQoD,EAAIA,MAnB7C,kBAqBW2qB,EAAStrB,EAAQ,IArB5B,4DAuBW,GAvBX,mEA0BA,CAACsJ,EAAUoiC,EAAmBD,EAAQjvC,OAAOmD,gBAAgBjD,MAA7D,SAAoE+uC,EAAQnvC,eAA5E,EAAoE,EAAkB5I,KAGlFinD,EAAoB7mD,eACxB,SAAOkM,EAAesrB,GAAtB,uBAAAr3B,EAAAC,OAAA,4DAEOu3C,EAAQjvC,OAAOoD,aAAf,EAA2BlD,MAFlC,uBAGI4M,EAAS9B,GAAQF,MAAM3G,IAAIrD,cAAc,CAAC,aAAc,oCAH5D,mBAIW,GAJX,mBAOO28C,EAASz9C,OAAOuC,aAAhB,EAA4BrC,MAPnC,uBAQI4M,EACE9B,GAAQF,MAAM5F,KAAKpE,cAAc,CAAC,aAAc,qCATtD,mBAWW,GAXX,kCAAArJ,EAAA,MAgBUy3C,EAAkB75B,OAAO,CAC7Bne,GAAIyN,OAAM,SAACsqC,EAAQnvC,eAAT,EAAC,EAAkB5I,IAC7BkM,WAAY6rC,EAAQjvC,OAAOoD,WAAWlD,SAlB5C,0BAAAzI,EAAA,MAoBU0f,EAAmB9B,OAAO,CAC9Bne,GAAIyN,OAAM,SAAC84C,EAAS39C,eAAV,EAAC,EAAmB5I,IAC9BqL,WAAYoC,OAAM,SAAC84C,EAASz9C,OAAOuC,iBAAjB,EAAC,EAA4BrC,UAtBrD,QAyBI4uB,EAAStrB,EAAQ,GAzBrB,kDA2BIhL,QAAQ2H,MAAR,MA3BJ,iCA6BS,MA7BT,mEA+BA,CACE8uC,EAAQjvC,OAAOoD,WAAWlD,MAD5B,SAEE+uC,EAAQnvC,eAFV,EAEE,EAAkB5I,GAFpB,SAGEumD,EAASz9C,OAAOuC,iBAHlB,EAGE,EAA4BrC,MAH9B,SAIEu9C,EAAS39C,eAJX,EAIE,EAAmB5I,GACnB4V,EACAoiC,EACA/3B,IAIJ,OACE,gBAACkJ,GAAA,EAAD,KACE,gBAAC+9B,GAAA,EAAD,CACE1rC,QAAShS,EAAMX,KACfi7B,aAAa,EACbjiC,MAAOqC,GAAOyiD,MACdn6B,sBAAuB,CAAEntB,OAAQ,SAEjC,gBAAC,GAAD,KACE,gBAAC8nD,GAAD,CACEnuB,gBAAgB,SAChBC,gBAAgB,OAChBF,OAAQ,WACNnjB,EAAS9B,GAAQF,MAAMzE,WAAWtF,SAAQ,IAC1C+L,EAAS9B,GAAQF,MAAM5F,KAAKnE,SAAQ,IACpC+L,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,IACnC+L,EAAS9B,GAAQF,MAAMzE,WAAWlI,SAClC2O,EAAS9B,GAAQF,MAAM5F,KAAK/G,SAC5B2O,EAAS9B,GAAQF,MAAM3G,IAAIhG,UAE7BwO,QAASwK,EAAmBxK,QAC5BkX,OAAQm6B,IAEV,gBAACM,GAAD,CACEpuB,gBAAgB,SAChBC,gBAAiBzvB,EAAMV,OAAO2F,aAAazF,MAAQ,OAAS,OAC5D+vB,OAAQ,SAACzsB,EAAOsrB,GACdA,EAAStrB,EAAQ,IAEnBqgB,OAAQ,SAACrgB,EAAOsrB,IAC0B,IAApCpuB,EAAMV,OAAO2F,aAAazF,MAC5B4uB,EAAStrB,EAAQ,GAEjBsrB,EAAStrB,EAAQ,MAIvB,gBAAC+6C,GAAD,CACEruB,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACzsB,EAAOsrB,GACdA,EAAStrB,EAAQ,IAEnBmJ,QACEwK,EAAmBxK,SAAWuiC,EAAkBviC,SAAWoxC,EAAkBpxC,QAE/EkX,OAAQo6B,IAEV,gBAACO,GAAD,CACEtuB,gBAAgB,OAChBC,gBAAgB,OAChBxjB,QACEwK,EAAmBxK,SAAWuiC,EAAkBviC,SAAWoxC,EAAkBpxC,QAE/EsjB,OAAQ,SAACzsB,EAAOsrB,GACdA,EAAStrB,EAAQ,IAEnBqgB,OAAQq6B,IAEV,gBAACO,GAAD,CACEvuB,gBAAgB,OAChBC,gBAAgB,OAChBxjB,QACEwK,EAAmBxK,SAAWuiC,EAAkBviC,SAAWoxC,EAAkBpxC,QAE/EsjB,OAAQ,SAACzsB,EAAOsrB,GACdA,EAAStrB,EAAQ,IAEnBqgB,OAAQs6B,IAGV,gBAAC,GAAD,CACE1wC,MAAM,kBACNsV,SAAS,sDACTmN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACzsB,EAAOsrB,IAC0B,IAApCpuB,EAAMV,OAAO2F,aAAazF,MAC5B4uB,EAAStrB,EAAQ,GAEjBsrB,EAAStrB,EAAQ,IAGrBqgB,OAAQ,WACN/W,EAAS9B,GAAQF,MAAMzE,WAAWtF,SAAQ,IAC1C+L,EAAS9B,GAAQF,MAAM5F,KAAKnE,SAAQ,IACpC+L,EAAS9B,GAAQF,MAAM3G,IAAIpD,SAAQ,IACnC+L,EAAS9B,GAAQF,MAAMzE,WAAWlI,SAClC2O,EAAS9B,GAAQF,MAAM5F,KAAK/G,SAC5B2O,EAAS9B,GAAQF,MAAM3G,IAAIhG,gBCnNzC,SAASyjB,KAAW,IAAD,IACXlhB,EAAQ4L,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KAEXsyC,EACJpnD,WACIqnD,EACJrnD,WAEIsnD,EAAgB,SAACruC,GACrB,IACMsuC,EADMC,IAAIvuC,EAAKhC,KACKoB,OAC1BnX,QAAQC,IAAIomD,IAGR/1C,EAA6C,SAAhCssC,IAAWC,iBAuD9B,OArDA/9C,aAAgB,WACVwR,IAAepI,EAAMoI,aAEbA,GAAcpI,EAAMoI,WAD9BgE,EAAS9B,GAAQC,OAAOxB,kBAIxBqD,EAAS9B,GAAQC,OAAO9B,gBAAgBzI,EAAM8H,MAAMX,OAAOC,YAE5D,CAACgF,EAAUhE,EAAYpI,EAAMoI,WAAYpI,EAAM8H,MAAMX,OAAOC,UAE/DxQ,aAAgB,WACd,GAAoB,QAAhB4S,IAASC,GA+Bb,OA1FJ,oCAAA1S,EAAAC,OAAA,mDACMqnD,EAAuB,MACvBzwC,IAAU0wC,SAFhB,mCAAAvnD,EAAA,MAG6Cia,OAH7C,mBAGoButC,EAHpB,EAGYpnD,OACJqnD,EAAcD,EACK,YAAnBA,EALR,oCAAAxnD,EAAA,MAM+Bia,uCAN/B,iBAMc7Z,EANd,EAMcA,OACRqnD,EAAcrnD,EAPpB,WASwB,YAAhBqnD,EATR,wBAUM1mD,QAAQ2mD,KAAK,mDAVnB,kBAWa,MAXb,2BAAA1nD,EAAA,MAamBia,OAbnB,QAaIqtC,EAbJ,OAa0D7oC,KACtD1d,QAAQC,IAAIsmD,GAdhB,wBAgBIvmD,QAAQ2mD,KAAK,mDAhBjB,cAmBsB,YAAhBj1C,IAASC,IACXuH,IAA0C,UAAW,CACnD5S,KAAM,UACNsgD,WAAY1tC,IAAgC2tC,IAC5CC,iBAAkB,CAAC,EAAG,IAAK,IAAK,KAChC38B,WAAY,cAxBlB,kBA4BSo8B,GAAS,MA5BlB,6DA+DIQ,GAAoCp2B,MAAK,SAAC41B,GACpCA,GACFjyC,EAAS9B,GAAQC,OAAOhC,iBAAiB81C,OAK7CL,EAAqB/mD,QAAU+Z,KAA8C,SAACK,GACxEA,EAAaytC,QAAQrjD,QAAQsjD,MAC/B3yC,EACE9B,GAAQG,cAAcrB,aAAa,CACjCxJ,QAASyR,EAAaytC,QAAQrjD,QAAQsjD,KACtClwC,QAAS,gBASjBovC,EAAiBhnD,QAAU+Z,KAAsD,SAACvC,GAChF3W,QAAQC,IAAI0W,MAGd0D,IAAQ6sC,iBAAiB,MAAOd,GAEzB,WACDF,EAAqB/mD,SACvB+Z,IAA6CgtC,EAAqB/mD,SAEhEgnD,EAAiBhnD,SACnB+Z,IAA6CitC,EAAiBhnD,SAEhEkb,IAAQ8sC,oBAAoB,MAAOf,MAEpC,CAAC9xC,IAGF,gBAACN,GAAD,KACE,gBAAC,WAAD,CACEozC,SACE,gBAACvhD,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,EAAGsX,SAAU,IAChC,gBAACnE,EAAA,EAAD,CAAaC,eAAa,EAACvkB,MAAK,MAAEwE,GAAF,SAAEA,EAAO8H,QAAT,SAAE,EAAcX,aAAhB,EAAE,EAAsBgB,OAAQ6J,SAAO,MAI3E,gBAAC9D,GAAD,KACE,gBAAC,IAAD,CAAkBpG,MAAO9H,EAAM8H,OAC7B,gBAAC,IAAD,KACE,gBAACqI,GAAD,MACA,gBAACgvC,EAAA,EAAD,CACEC,QAASC,GACTv3C,MAAO9H,EAAM8H,OAEb,gBAACpJ,EAAD,KACE,gBAAC29C,GAAD,QAIJ,gBAACiD,EAAA,EAAD,MACA,gBAAC,GAAD,MACA,gBAAC,GAAD,WArIdtuC,IAAqC,CACnCuuC,mBAAoB,oBAAAxoD,EAAAC,OAAA,yEAAa,CAC/BwoD,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,IAHE,+DAkKPC,uBAtBf,WAGE,OCtKa,WACb,MAAgD/oD,YAAe,GAA/D,WAAOgpD,EAAP,KAA0BC,EAA1B,KAEA,EAAsBC,KAAc,CAClCC,iBAAkBC,KAClBC,gBAAiBD,KACjBE,cAAeF,OAHVG,EAAP,YA8BA,OAvBAvpD,aAAgB,WACd,EAAAG,EAAAC,OAAA,gEAEIopD,OAFJ,WAAArpD,EAAA,MAKU+oD,KAAA,SACDO,KAASC,MADR,IAGJ,aAAc52C,EAAQ,SAR5B,6EAcIm2C,GAAmB,GACnBO,OAfJ,mFAoBC,IAEIR,GAAqBO,EDmIFI,GAMxB,gBAAC,IAAD,CAAUt1C,MAAOA,IACf,gBAAC,IAAD,CACEO,UAAWA,GACXS,QACE,gBAACtO,EAAA,EAAD,CAAMtF,MAAO,CAAEsU,KAAM,EAAG3Q,eAAgB,SAAUjB,WAAY,WAC5D,gBAACylD,EAAA,EAAD,CAAmBniD,KAAK,YAI5B,gBAAC6iB,GAAD,QAZG,U","file":"static/js/app.4b1f00d4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n/* eslint-disable import/no-unresolved */\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const { width, height, position, children, center, coords, shape, interactive, onDragEnd } =\n    props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n\n  const onLoad = React.useCallback(async (component: GoogleMap) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = component;\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      // const location = await Location.getCurrentPositionAsync({});\n      // const lat = coords?.lat || location.coords.latitude;\n      // const lng = coords?.lng || location.coords.longitude;\n    } catch (error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    }\n  }, []);\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const delayedPanningTimer = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const panDelayed = React.useCallback((lat: number, lng: number) => {\n    if (delayedPanningTimer) {\n      // clearTimeout(delayedPanningTimer.current);\n      // delayedPanningTimer.current = null;\n    }\n    return;\n    if (map.current?.panTo) {\n      console.log('PANNING', lat, lng);\n      map.current?.panTo?.({ lat, lng });\n\n      const latDelta = calculateLatLngDelta(lat, 0.5);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds(\n        { lat: lat - latDelta, lng: lng - latDelta },\n        { lat: lat + latDelta, lng: lng + latDelta }\n      );\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    } else {\n      console.log('DELAYING PANNING TO ', lat, lng, map.current);\n      delayedPanningTimer.current = setTimeout(() => panDelayed(lat, lng), 500);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (center) {\n      console.log({ center, coords });\n      panDelayed(center.lat, center.lng);\n    }\n  }, [center, coords, panDelayed]);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  return !isLoaded ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        // provider={PROVIDER_GOOGLE}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          zoomControl: false,\n          mapTypeId: 'satellite',\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Array<Permission>>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  id: Scalars['Int'];\n  state: LoadState;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  email: Scalars['String'];\n  confirmUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<Scalars['String']>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  title?: Maybe<Scalars['String']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  sellableItem?: Maybe<SellableItemInput>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport enum OrderState {\n  /** pending */\n  Pending = 'pending',\n  /** completed */\n  Completed = 'completed',\n  /** refunded */\n  Refunded = 'refunded',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Array<Extra>;\n  /** Available federations */\n  federations: Array<Federation>;\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Array<Plane>;\n  /** Get ticket types for a dropzone */\n  ticketTypes: Array<TicketType>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  name?: Maybe<Scalars['String']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum SellableItemTypes {\n  Pack = 'pack',\n  TicketType = 'ticketType',\n  Extra = 'extra',\n  Slot = 'slot'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n  userGroup?: Maybe<Array<SlotUser>>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Reserved = 'reserved',\n  Completed = 'completed',\n  Cancelled = 'cancelled'\n}\n\nexport enum TransactionType {\n  Purchase = 'purchase',\n  Sale = 'sale',\n  Deposit = 'deposit',\n  Withdrawal = 'withdrawal',\n  Refund = 'refund'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum WalletableTypes {\n  DropzoneUser = 'dropzoneUser',\n  Dropzone = 'dropzone'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      console.log({ field });\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\nexport type ExtraFields = Pick<Extra, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: Extra[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\nexport type LoadFields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      console.log('Setting open');\n      console.log(action.payload);\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\nexport type ManifestUserFields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser, Rig } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = SlotUser & { rig?: Rig };\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<User, 'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license'>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig, User } from '../../../api/schema.d';\n\ninterface IUserWizardState {\n  open: boolean;\n  fields: {\n    skipRigSetup: {\n      value: boolean;\n      error: string | null;\n    };\n    user: {\n      value: User | null;\n      error: string | null;\n    };\n    rig: {\n      value: Rig | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserWizardState = {\n  open: false,\n  fields: {\n    user: {\n      value: null,\n      error: null,\n    },\n    skipRigSetup: {\n      value: false,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/userWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserWizardState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.user.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IUserWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\ninterface IDropzoneWizardState {\n  open: boolean;\n  complete: boolean;\n  fields: {\n    dropzone: {\n      value: Dropzone | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  open: false,\n  complete: false,\n  fields: {\n    dropzone: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneWizardState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.dropzone.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    complete: (state: IDropzoneWizardState, action: PayloadAction<boolean | undefined>) => {\n      state.complete = action.payload !== undefined ? action.payload : true;\n    },\n\n    reset: (state: IDropzoneWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\nimport * as userWizard from '../dialogs/UserWizard/slice';\nimport * as dropzoneWizard from '../../screens/authenticated/dropzone_setup/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  userWizard: userWizard.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  userWizard: userWizard.default,\n  dropzoneWizard: dropzoneWizard.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#333333',\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#333333',\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'warning';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      state.queue.push(action.payload);\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport LottieView from 'lottie-react-native';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      setOverlay(true);\n    }\n  }, []);\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport Constants from 'expo-constants';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst httpLink = createHttpLink({\n  uri: Constants.manifest?.extra?.url,\n});\n\nconst httpBatchLink = new BatchHttpLink({\n  batchDebounce: true,\n  batchMax: 10,\n  uri: Constants.manifest?.extra?.url,\n});\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV !== 'production') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { Snackbar } from 'react-native-paper';\nimport LottieView from 'lottie-react-native';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector, useAppDispatch } from '../../state';\nimport slice from './slice';\nimport usePalette from '../../hooks/usePalette';\nimport lottieDoneAnimation from '../../../assets/images/finished.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nconst Notifications = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const palette = usePalette();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const variantStyle = {\n    info: { backgroundColor: palette.info },\n    success: { backgroundColor: palette.success },\n    error: { backgroundColor: palette.error },\n    warning: { backgroundColor: palette.warning },\n  };\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Snackbar\n        testID=\"snackbar-message\"\n        visible={!!notification}\n        onDismiss={() => dispatch(actions.hideSnackbar())}\n        duration={3000}\n        action={notification?.action}\n        style={!!notification?.variant && variantStyle[notification.variant]}\n      >\n        {notification?.message}\n      </Snackbar>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 420,\n    width: 420,\n  },\n});\nexport default Notifications;\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n        params: {\n          account_confirmation_success: undefined,\n        },\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        onFieldError?.(`${fieldName}`, message);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          onError?.(err.message);\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    phone: [isRequired('Phone number is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport const QUERY_DROPZONE = gql`\n  query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n      lat\n      lng\n      name\n      primaryColor\n      secondaryColor\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n\n      currentConditions {\n        id\n        jumpRun\n        temperature\n        offsetDirection\n        offsetMiles\n        winds {\n          altitude\n          speed\n          direction\n        }\n      }\n\n      currentUser {\n        id\n        credits\n        hasCredits\n        hasExitWeight\n        hasMembership\n        hasReserveInDate\n        hasRigInspection\n        hasLicense\n        permissions\n        expiresAt\n\n        role {\n          id\n          name\n        }\n\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              title\n              state\n              createdAt\n              title\n              amount\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  message\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        availableRigs {\n          name\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          pushToken\n          image\n\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n            packingCard\n\n            user {\n              id\n            }\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n\n      loads(earliestTimestamp: $earliestTimestamp) {\n        edges {\n          node {\n            id\n            name\n            loadNumber\n            isOpen\n            maxSlots\n            state\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QUERY_DROPZONE, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions =  {}\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    id\n    name\n  }\n}\n    `;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    id\n    isOk\n    inspectedBy {\n      id\n      user {\n        id\n        name\n      }\n    }\n    rig {\n      id\n    }\n  }\n  orders {\n    edges {\n      node {\n        id\n        title\n        state\n        createdAt\n        title\n        amount\n        buyer {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        seller {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        item {\n          title\n          cost\n          ... on Slot {\n            id\n            ticketType {\n              id\n              name\n              cost\n            }\n            extras {\n              id\n              name\n              cost\n            }\n          }\n          ... on TicketType {\n            id\n          }\n          ... on Extra {\n            id\n            name\n          }\n        }\n        receipts {\n          id\n          transactions {\n            id\n            message\n            transactionType\n            status\n            createdAt\n            amount\n            sender {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n            receiver {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  availableRigs {\n    name\n    id\n    make\n    model\n    canopySize\n    serial\n    user {\n      id\n    }\n  }\n  user {\n    id\n    name\n    exitWeight\n    email\n    phone\n    pushToken\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n      packingCard\n      user {\n        id\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n    }\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  planes {\n    id\n    name\n    registration\n  }\n  ticketTypes {\n    id\n    name\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  currentConditions {\n    id\n    jumpRun\n    temperature\n    offsetDirection\n    offsetMiles\n    winds {\n      altitude\n      speed\n      direction\n    }\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\nexport const SlotFragmentDoc = gql`\n    fragment slot on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  dropzoneUser {\n    id\n    role {\n      id\n      name\n    }\n    user {\n      id\n      name\n      exitWeight\n      image\n      license {\n        id\n        name\n      }\n    }\n  }\n  ticketType {\n    id\n    name\n    altitude\n    isTandem\n    extras {\n      id\n      name\n      cost\n    }\n  }\n  jumpType {\n    id\n    name\n  }\n  extras {\n    id\n    name\n  }\n}\n    `;\nexport const LoadFragmentDoc = gql`\n    fragment load on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n  plane {\n    id\n    maxSlots\n    name\n  }\n  gca {\n    id\n    user {\n      id\n      name\n    }\n  }\n  pilot {\n    id\n    user {\n      id\n      name\n    }\n  }\n  loadMaster {\n    id\n    user {\n      id\n      name\n    }\n  }\n  slots {\n    ...slot\n  }\n}\n    ${SlotFragmentDoc}`;\nexport const TransactionFragmentDoc = gql`\n    fragment transaction on Transaction {\n  id\n  transactionType\n  amount\n  status\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const OrderFragmentDoc = gql`\n    fragment order on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  buyer {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    id\n    amountCents\n    createdAt\n    updatedAt\n    transactions {\n      ...transaction\n    }\n  }\n}\n    ${TransactionFragmentDoc}`;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...order\n    }\n  }\n}\n    ${OrderFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...load\n    }\n  }\n}\n    ${LoadFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUser(id: $dropzoneUserId) {\n      id\n      credits\n      expiresAt\n      permissions\n      role {\n        id\n        name\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n        image\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n          repackExpiresAt\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n          federation {\n            id\n            name\n          }\n        }\n      }\n      slots {\n        edges {\n          node {\n            id\n            createdAt\n            load {\n              id\n              name\n              loadNumber\n              dispatchAt\n              createdAt\n            }\n            jumpType {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        id\n        name\n      }\n      permissions\n    }\n  }\n}\n    `;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput, useTheme } from 'react-native-paper';\n\ninterface INumberFieldProps {\n  error?: boolean;\n  label?: string;\n  value?: number | null;\n  onChangeText(newValue: number): void;\n}\nexport default function NumberField(props: INumberFieldProps) {\n  const { onChangeText: onChangeValue, ...rest } = props;\n  const { value } = rest;\n  const theme = useTheme();\n\n  const onChangeText = React.useCallback(\n    (text: string) => {\n      if (/\\d/.test(text)) {\n        const [numbers] = text.match(/^\\-?\\d+/) || ['0'];\n        onChangeValue(Number(numbers));\n      }\n    },\n    [onChangeValue]\n  );\n  return (\n    <TextInput\n      {...rest}\n      {...{ onChangeText }}\n      value={`${value || 0}`}\n      mode=\"outlined\"\n      keyboardType=\"number-pad\"\n      right={\n        <TextInput.Affix\n          textStyle={{\n            height: '100%',\n          }}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          text={\n            <View style={styles.chevrons}>\n              <TouchableOpacity\n                style={[\n                  styles.affixTopChevron,\n                  { borderColor: theme.colors.text, backgroundColor: theme.colors.surface },\n                ]}\n                onPress={() => onChangeValue?.((value || 0) + 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-up\" size={24} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.affixBottomChevron, { backgroundColor: theme.colors.surface }]}\n                onPress={() => onChangeValue?.((value || 0) - 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-down\" size={24} />\n              </TouchableOpacity>\n            </View>\n          }\n        />\n      }\n      caretHidden={false}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  affixBottomChevron: {\n    width: 48,\n    height: 54 / 2,\n    alignItems: 'center',\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  affixTopChevron: {\n    width: 48,\n    height: 54 / 2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center',\n  },\n  chevrons: {\n    width: 48,\n    height: 59,\n    paddingTop: 4,\n    marginRight: -10,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled?.(item) || false}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Badge, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  tandem?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nfunction RigTitle(props: { rig: Rig }): JSX.Element {\n  const theme = useTheme();\n  const { rig } = props;\n  const name = rig?.name || `${rig?.make} ${rig?.model}`;\n\n  return (\n    <>\n      <Text>{`${name} (${rig?.canopySize} sqft)`}</Text>\n      {!rig.user ? (\n        <View\n          style={{\n            padding: 2,\n            paddingHorizontal: 4,\n            backgroundColor: theme.colors.accent,\n            borderRadius: 16,\n          }}\n        >\n          <Text style={{ fontSize: 10, color: 'white' }}>Dropzone rig</Text>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!, $isTandem: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs(isTandem: $isTandem) {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, autoSelectFirst, onSelect, dropzoneId, tandem } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId, tandem]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <TextInput\n          onTouchEnd={() => setMenuOpen(true)}\n          label=\"Select rig\"\n          value={\n            value\n              ? `${value?.name || `${value?.make} ${value?.model}`} (${value?.canopySize} sqft)`\n              : undefined\n          }\n          left={() => <List.Icon icon=\"parachute\" />}\n          editable={false}\n          mode=\"outlined\"\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={<RigTitle rig={rig} />}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField from '../../input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.user?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          required\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxHeight: 500 }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Card,\n  TextInput,\n  ProgressBar,\n  Chip,\n  Divider,\n  List,\n  Button,\n} from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: Rig;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: Rig): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            name\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.user?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <View style={styles.row}>\n          <View style={styles.rowFirst}>\n            <RigSelect\n              userId={dropzoneUserId}\n              dropzoneId={dropzoneId}\n              onSelect={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n              required\n            />\n          </View>\n          <View style={styles.rowLast}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              onChangeText={(num) => onChangeExitWeight(num)}\n              label=\"Exit weight (kg)\"\n            />\n          </View>\n        </View>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                  mode=\"outlined\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChangeText={(num) => onChangePassengerWeight?.(num)}\n                  label=\"Exit weight (kg)\"\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useRestriction from '../../../hooks/useRestriction';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, Permission, TicketType } from '../../../api/schema.d';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!, $isPublic: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: $isPublic) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n    isPublic: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n      isPublic: canManifestOthers ? null : true,\n    },\n    onError: console.error,\n  });\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1, marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType: JumpType) => jumpType.name}\n            isDisabled={(jumpType: JumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first as JumpType]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType: TicketType) => ticketType.name}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first as TicketType]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          selectedRig={slotUser.rig || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onRemove={() =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id\n                    ? { ...slotUser, rigId: Number(newRig.id), rig: newRig }\n                    : user\n                ),\n              ])\n            )\n          }\n          {...{ isTandem }}\n          passengerName={slotUser.passengerName}\n          passengerWeight={slotUser.passengerExitWeight}\n          onChangePassengerName={(passengerName) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerName } : user\n                ),\n              ])\n            )\n          }\n          onChangePassengerWeight={(passengerExitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              name\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UserListSelect(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <React.Fragment key={`user-${edge?.node?.id || 0}`}>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </React.Fragment>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Badge, Card, Chip, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n  const theme = useTheme();\n\n  const hasPassenger = !!slot?.passengerName;\n  return (\n    <>\n      <Card\n        onPress={() => onPress?.(slot)}\n        elevation={3}\n        style={StyleSheet.flatten([styles.card, { marginBottom: hasPassenger ? -4 : 12 }, style])}\n      >\n        <Card.Title\n          title={slot?.dropzoneUser?.user.name || slot?.passengerName}\n          left={() =>\n            slot?.dropzoneUser?.user?.image ? (\n              <Avatar.Image\n                style={{ backgroundColor: theme.colors.surface }}\n                source={{ uri: slot?.dropzoneUser?.user.image }}\n                size={24}\n              />\n            ) : (\n              <Avatar.Icon\n                style={{ backgroundColor: theme.colors.surface }}\n                color={theme.dark ? theme.colors.text : theme.colors.primary}\n                icon=\"account\"\n                size={40}\n              />\n            )\n          }\n          right={() =>\n            !onDelete ? null : (\n              <Badge\n                style={{ marginTop: -45, marginRight: -5 }}\n                onPress={(e) => {\n                  e.preventDefault();\n                  onDelete?.(slot);\n                }}\n              >\n                -\n              </Badge>\n            )\n          }\n        />\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"lock\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"ticket-account\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.user?.license?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"human-handsup\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.jumpType?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"arrow-up-bold\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.ticketType?.name}\n          </Chip>\n          {!slot.wingLoading ? null : (\n            <Chip\n              style={styles.chip}\n              textStyle={styles.chipText}\n              icon=\"escalator-down\"\n              mode=\"outlined\"\n              disabled\n            >\n              {slot.wingLoading.toFixed(2)}\n            </Chip>\n          )}\n        </Card.Content>\n      </Card>\n      {!slot?.passengerName ? null : (\n        <>\n          <View\n            style={{\n              width: '100%',\n              height: 30,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <MaterialCommunityIcons color={theme.colors.onSurface} name=\"link-variant\" size={30} />\n          </View>\n          <Card\n            style={StyleSheet.flatten([\n              { margin: 12, marginTop: -4, height: 150, width: '100%' },\n              style,\n            ])}\n            elevation={3}\n          >\n            <Card.Title\n              title={slot?.passengerName}\n              left={() => (\n                <Avatar.Icon\n                  icon=\"account-supervisor\"\n                  color={theme.dark ? theme.colors.text : theme.colors.primary}\n                  style={{ backgroundColor: theme.colors.surface }}\n                  size={40}\n                />\n              )}\n            />\n            <Card.Content>\n              <Text style={styles.passengerTitle}>P A S S E N G E R</Text>\n            </Card.Content>\n          </Card>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  chip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  infoChip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  chipText: {\n    fontSize: 12,\n  },\n  passengerChip: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  passengerTitle: {\n    fontSize: 30,\n    opacity: 0.5,\n    alignSelf: 'center',\n    width: '100%',\n    textAlign: 'center',\n    color: '#CCCCCC',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport { useFinalizeLoadMutation } from '../../../api/reflection';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'warning',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown end={new Date(load.dispatchAt * 1000)} variant=\"light\" size={80} />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 48,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      loadNumber\n      isFull\n      state\n      isOpen\n      weight\n      maxSlots\n      availableSlots\n      occupiedSlots\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center', flex: 1 }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = maxSlots - (load?.availableSlots || 0);\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 364;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  let contentWidth = (cardWidth + padding) * numColumns + padding;\n  contentWidth = width < contentWidth ? width : contentWidth;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node?.dropzoneUser?.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() => navigation.navigate('JumpRunScreen')}\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const { currentDropzoneId, palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {previous ? (\n          <Appbar.BackAction\n            onPress={navigation.goBack}\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n          />\n        ) : (\n          <IconButton\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n            icon=\"menu\"\n            size={32}\n            onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n        )}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold', color: palette.primary.dark }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{ backgroundColor: palette.accent.main }}\n            mode=\"flat\"\n            textStyle={{ color: palette.surface }}\n          >{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n\n            if (currentUser) {\n              dispatch(actions.forms.user.setOpen(currentUser.user));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOpen(currentUser.user.rigs[0]));\n              }\n\n              dispatch(actions.forms.userWizard.setOpen(currentUser.user));\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from '../../../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport { errorColor, warningColor } from '../../../../../constants/Colors';\nimport Countdown from '../Countdown';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 2,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={[styles.cardContent]}>\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useNavigation } from '@react-navigation/native';\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    // pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'warning',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() => navigation.navigate('LoadScreen', { load })}\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('lease specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    planeId: [isRequired('What plane is flying this load?')],\n    gcaId: [isRequired('You must have a GCA for this load')],\n  },\n  fieldErrorMap: {\n    planeId: 'plane',\n    gcaId: 'gca',\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUser[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={uniqBy(data?.edges?.map((edge) => edge?.node) || [], 'id') as DropzoneUser[]}\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane: Plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as Plane) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzoneId: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      planeId: Number(state.fields.plane.value?.id) || null,\n      gcaId: Number(state.fields.gca.value?.id) || null,\n      pilotId: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { StyleSheet, ImageBackground, Text, View, TouchableOpacity } from 'react-native';\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport nightBackground from '../../../../../assets/images/night.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Card\n      style={styles.card}\n      elevation={3}\n      onPress={() => {\n        if (canUpdate && dropzone?.currentConditions) {\n          dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n          navigation.navigate('WindScreen');\n        }\n      }}\n    >\n      <ImageBackground\n        source={theme.dark ? nightBackground : weatherBackground}\n        style={{ ...StyleSheet.absoluteFillObject }}\n        resizeMode=\"cover\"\n      >\n        <Card.Content\n          style={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexGrow: 1,\n          }}\n        >\n          {!hasWeatherConditions ? (\n            <View style={styles.noData}>\n              <Text style={styles.noDataLabel}>No weather data</Text>\n            </View>\n          ) : (\n            <>\n              <View style={styles.top}>\n                <View style={styles.cell}>\n                  <FontAwesome\n                    name=\"calendar\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                </View>\n\n                <View style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}>\n                  <FontAwesome\n                    name=\"thermometer\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.temperature}>{temperature || '?'}</Text>\n                  <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                </View>\n              </View>\n              <View style={styles.bottom}>\n                <View style={styles.windboard}>\n                  <View style={styles.row}>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Altitude</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Wind</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Direction</Text>\n                    </View>\n                  </View>\n                  {orderBy(\n                    dropzone?.currentConditions?.winds || [],\n                    (item) => Number(item.altitude),\n                    'desc'\n                  ).map(({ speed: wind, direction, altitude }) => (\n                    <React.Fragment key={`wind-at-${altitude}`}>\n                      <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                      <View style={styles.row}>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{altitude}</Text>\n                        </View>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{wind}</Text>\n                        </View>\n                        <View style={[styles.cell, { justifyContent: 'center' }]}>\n                          <Text style={styles.value}>{direction}</Text>\n                          <FontAwesome\n                            name=\"long-arrow-down\"\n                            size={14}\n                            style={\n                              direction && /\\d+/.test(direction) && Number(direction) < 361\n                                ? {\n                                    transform: [\n                                      {\n                                        rotate: `${direction}deg`,\n                                      },\n                                    ],\n                                    marginLeft: 4,\n                                  }\n                                : { marginLeft: 4 }\n                            }\n                          />\n                        </View>\n                      </View>\n                    </React.Fragment>\n                  ))}\n                </View>\n                <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                  <Text style={[styles.header, { textAlign: 'center' }]}>\n                    Jump run {jumpRun}&deg;\n                  </Text>\n                  <TouchableOpacity\n                    style={{ width: '100%', height: '100%' }}\n                    disabled={!canUpdate}\n                    onPress={() => {\n                      if (dropzone?.currentConditions && canUpdate) {\n                        dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                        navigation.navigate('JumpRunScreen');\n                      }\n                    }}\n                  >\n                    <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </>\n          )}\n        </Card.Content>\n      </ImageBackground>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({ title: dropzone.name });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'warning',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 335 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n                backgroundColor: theme.colors.background,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n                backgroundColor: theme.colors.background,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { omit } from 'lodash';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { TransactionType } from '../../../api/schema.d';\nimport NumberField from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Message\"\n        error={!!state.fields.message.error}\n        value={state.fields.message.value?.toString() || ''}\n        onChangeText={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n        {state.fields.message.error || ''}\n      </HelperText>\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            label=\"Add amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_TRANSACTION = gql`\n  mutation CreatrTransaction(\n    $message: String\n    $status: String\n    $amount: Float\n    $dropzoneUserId: Int\n  ) {\n    createTransaction(\n      input: {\n        attributes: {\n          amount: $amount\n          dropzoneUserId: $dropzoneUserId\n          message: $message\n          status: $status\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      transaction {\n        id\n        amount\n        message\n\n        dropzoneUser {\n          id\n          credits\n\n          transactions {\n            edges {\n              node {\n                id\n                status\n                amount\n                createdAt\n                message\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateTransaction, createData] = useMutation<Mutation>(\n    MUTATION_CREATE_TRANSACTION\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationCreateTransaction({\n        variables: {\n          amount: state.fields.amount.value,\n          message: state.fields.message.value,\n          status: state.fields.status.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateTransaction,\n    props,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.status.value,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $name: String\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $packingCard: String\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          make: $make\n          packingCard: $packingCard\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n        packingCard\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(MUTATION_UPDATE_RIG, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'You can give your equipment a nickname'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateRig.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    } else {\n      await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || ''}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['exitWeight', newValue]))}\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              state\n              createdAt\n              amount\n              title\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  message\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            packingCard\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { QUERY_DROPZONE } from '../../api/hooks/useCurrentDropzone';\nimport { QUERY_DROPZONE_USER } from '../../api/hooks/useDropzoneUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n  }, [\n    mutationUpdateUser,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Menu,\n  Paragraph,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission } from '../../../../api/schema.d';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.onSurface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            onDismiss={() => setContactOpen(false)}\n            visible={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USER_PROFILE = gql`\n  query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n\n        slots {\n          edges {\n            node {\n              id\n              createdAt\n              load {\n                id\n                name\n                loadNumber\n                dispatchAt\n                createdAt\n              }\n              jumpType {\n                id\n                name\n              }\n              ticketType {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_PROFILE, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    actAsDZSO: 'shield-cross',\n    actAsGCA: 'radio-handheld',\n    actAsLoadMaster: 'shield-account',\n    actAsPilot: 'shield-airplane',\n    actAsRigInspector: 'shield-search',\n  }[type];\n\n  const label = {\n    actAsDZSO: 'DZSO',\n    actAsGCA: 'GCA',\n    actAsLoadMaster: 'Load Master',\n    actAsPilot: 'Pilot',\n    actAsRigInspector: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { QUERY_DROPZONE_USERS } from '../../../../api/hooks/useQueryDropzoneUsers';\nimport { QUERY_PERMISSION_USER } from '../../../../components/chips/GcaChip';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission, Query } from '../../../../api/schema.d';\n\nimport { QUERY_DROPZONE } from '../../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport { QUERY_DROPZONE_USER_PROFILE } from '../../../../api/hooks/useDropzoneUserProfile';\nimport Badge, { IBadgeProps } from '../../../../components/Badge';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../../api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../../api/hooks/useMutationGrantPermission';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUser;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revokePermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                          (edge) => edge?.node?.id !== dropzoneUser?.id\n                        );\n\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        });\n\n                        return {\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        };\n                      },\n                    }\n                  )\n                : grantPermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                        const shouldUpdate = !!current.find(\n                          (edge) => edge?.node?.id === dropzoneUser?.id\n                        );\n\n                        const updatedGcaList = shouldUpdate\n                          ? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                edge?.node?.id !== dropzoneUser?.id\n                                  ? edge\n                                  : {\n                                      ...edge,\n                                      node: {\n                                        ...edge?.node,\n                                        ...data?.grantPermission?.dropzoneUser,\n                                      },\n                                    }\n                              ),\n                            ]\n                          : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              {\n                                node: data?.grantPermission?.dropzoneUser,\n                              },\n                            ];\n                        const newData = {\n                          ...c,\n                          dropzone: {\n                            ...c?.dropzone,\n                            dropzoneUsers: {\n                              edges: updatedGcaList,\n                            },\n                          },\n                        };\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            dropzoneId: Number(state.currentDropzoneId),\n                            permissions: [permission],\n                          },\n                          data: newData,\n                        });\n\n                        return {\n                          data: newData,\n                        };\n                      },\n                    }\n                  )\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlot {\n  slot: Slot;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 8,\n            }}\n          >\n            {format((slot?.load?.dispatchAt || slot.createdAt) * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`Load #${slot.load.loadNumber}`}\n            description={slot.ticketType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text style={[styles.jumpType, { color: theme.colors.onSurface }]}>\n                  {slot.jumpType?.name}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <MaterialCommunityIcons\n                  color={theme.colors.text}\n                  name=\"parachute-outline\"\n                  size={36}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  jumpType: { fontSize: 24, marginLeft: 4, fontWeight: '100', textAlign: 'center' },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 4, paddingBottom: 4 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Card, Divider, List, ProgressBar, useTheme } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Mutation, Permission } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from '../../../api/hooks/useDropzoneUserProfile';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport PermissionBadges from './UserInfo/PermissionBadges';\n\nimport SlotCard from './SlotCard';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const theme = useTheme();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 0.75 }}\n      style={StyleSheet.absoluteFill}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: state.theme.colors.background }}\n        contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        {!dropzoneUser ? null : (\n          <Header\n            dropzoneUser={dropzoneUser}\n            canEdit={isSelf}\n            onEdit={() => {\n              if (dropzoneUser?.user) {\n                dispatch(actions.forms.user.setOpen(dropzoneUser?.user));\n              }\n            }}\n            onPressAvatar={onPickImage}\n          >\n            <PermissionBadges {...{ dropzoneUser, permissions: badges }} />\n            <InfoGrid\n              style={{ height: 80 }}\n              items={[\n                {\n                  title: 'Funds',\n                  value: `$${dropzoneUser?.credits || 0}`,\n                  onPress: () => {\n                    if (dropzoneUser && canAddTransaction) {\n                      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                    }\n                  },\n                },\n                {\n                  title: 'License',\n                  value: `${dropzoneUser?.user?.license?.name || '-'}`,\n                },\n                {\n                  title: 'Exit weight',\n                  value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                },\n              ]}\n            />\n            <Divider style={styles.divider} />\n          </Header>\n        )}\n        <View style={{ width: '100%' }}>\n          <List.Subheader>Manage</List.Subheader>\n          <Card style={{ margin: 8, marginRight: 8 }} elevation={1}>\n            {canUpdateUsers ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Access and Membership\"\n                  left={() => <List.Icon icon=\"lock\" />}\n                  onPress={() =>\n                    dropzoneUser ? dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser)) : null\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            {isSelf || canViewOthersTransactions ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Transactions\"\n                  left={() => <List.Icon icon=\"cash\" />}\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('TransactionsScreen', { userId: dropzoneUser?.id })\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            <List.Item\n              style={{ width: '100%', padding: 0 }}\n              title=\"Equipment\"\n              left={() => <List.Icon icon=\"parachute\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id })}\n            />\n          </Card>\n        </View>\n\n        <View style={{ width: '100%' }}>\n          <List.Subheader>History</List.Subheader>\n          <Card style={{ margin: 8, marginHorizontal: 0 }} elevation={1}>\n            {dropzoneUser?.slots?.edges?.map((edge) =>\n              edge?.node ? (\n                <SlotCard\n                  slot={edge.node}\n                  onPress={() => {\n                    navigation.navigate('LoadScreen', { load: edge.node });\n                  }}\n                />\n              ) : null\n            )}\n          </Card>\n        </View>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n            refetch();\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        dropzoneUserId={Number(dropzoneUser?.id)}\n        onClose={() => dispatch(actions.forms.user.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.user.setOpen(false));\n        }}\n        open={forms.user.open}\n      />\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from '../../../../state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Slot } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: (notification.resource as Slot).load },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { Load, Notification } from '../../../../api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: notification.resource as Load },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Rig } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('RigInspectionScreen', {\n              rig: (notification.resource as Rig).id,\n              dropzoneUserId: (notification.resource as Rig).user?.id,\n            })\n          : navigation.navigate('Manifest', {\n              screen: 'Profile',\n              params: {\n                screen: 'ProfileScreen',\n              },\n            })\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from '../../../state';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case 'boarding_call':\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case 'user_manifested':\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case 'credits_updated':\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case 'rig_inspection_requested':\n            case 'rig_inspection_completed':\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case 'permission_granted':\n            case 'permission_revoked':\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string;\n  name: string;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text label={initals} {...rest} />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n      size={32}\n      {...rest}\n    />\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order } from '../../../api/schema';\nimport UserAvatar from '../../../components/UserAvatar';\n\ninterface IOrder {\n  order: Order;\n  dropzoneUser?: DropzoneUser | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser))?.id ===\n    dropzoneUser?.id\n      ? 'cash-minus'\n      : 'cash-plus';\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {format(order?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`#${order.id} ${order.title}`}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            descriptionStyle={styles.orderDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                {showAvatar ? (\n                  <UserAvatar\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={30}\n                    name={\n                      (order?.buyer as DropzoneUser)?.user?.name ||\n                      (order?.buyer as Dropzone).name ||\n                      ''\n                    }\n                    image={\n                      (order?.buyer as DropzoneUser).user?.image ||\n                      (order?.buyer as Dropzone).banner ||\n                      undefined\n                    }\n                  />\n                ) : (\n                  <MaterialCommunityIcons\n                    color={\n                      // eslint-disable-next-line no-underscore-dangle\n                      '__typename' in order.buyer &&\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                      // @ts-ignore\n                      order.buyer.__typename === 'DropzoneUser' &&\n                      (order.buyer as DropzoneUser)?.id === dropzoneUser?.id\n                        ? '#FF1414'\n                        : successColor\n                    }\n                    name={icon}\n                    size={36}\n                    style={{ marginHorizontal: 16 }}\n                  />\n                )}\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  ${order.amount}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet, Platform } from 'react-native';\nimport { Avatar, Card, Chip, Divider, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { errorColor, successColor } from '../../../constants/Colors';\n\nimport { DropzoneUser, Permission, Rig, RigInspection } from '../../../api/schema.d';\n\nexport interface IRigCardProps {\n  rig: Rig;\n  dropzoneUser?: DropzoneUser | null;\n  rigInspection?: RigInspection;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result.base64}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          onDismiss={() => setPackingCardMenuOpen(false)}\n          visible={isPackingCardMenuOpen}\n          style={{ marginTop: 12 }}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <Menu.Item\n            title=\"Upload new\"\n            icon=\"camera\"\n            style={{ paddingVertical: 0 }}\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <Menu.Item\n                title=\"View\"\n                icon=\"eye\"\n                style={{ paddingVertical: 0 }}\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rig,\n              dropzoneUserId: Number(dropzoneUser?.id),\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Permission } from '../../../api/schema.d';\nimport RigDialog from '../../../components/dialogs/Rig';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport default function ProfileScreen() {\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        style={styles.fab}\n        visible={canUpdateUser}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const state = useAppSelector((root) => root.global);\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: state.currentDropzone,\n              })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extrasIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor, secondaryColor } = props;\n  const { theme } = useAppSelector((root) => root.global);\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\n\ninterface IWebPreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor, secondaryColor } = props;\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport ColorPicker from '../../input/colorpicker';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  console.log(state.fields);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n\n            <WebPreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['secondaryColor', color]));\n            dispatch(actions.global.setAccentColor(color));\n          }}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Public\"\n            description=\"Your dropzone will not be available in the app if this is disabled\"\n            onPress={() =>\n              dispatch(actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value]))\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value])\n                  )\n                }\n                status={state.fields.isPublic.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 200,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone, Mutation, Query } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nconst QUERY_DROPZONE_DETAILS = gql`\n  query QueryDropzoneDetails($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor\n      secondaryColor\n      lat\n      lng\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $lat: Float\n    $lng: Float\n    $federationId: Int!\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n        lat\n        lng\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_DETAILS, {\n    variables: { dropzoneId: Number(dropzone.id) },\n  });\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      console.log('dz', data.dropzone);\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const [mutationUpdateDropzone, mutation] = useMutation<Mutation>(MUTATION_UPDATE_DROPZONE);\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone({\n          variables: {\n            id: Number(dropzone?.id),\n            name: name.value,\n            lat: lat.value,\n            lng: lng.value,\n            banner: banner.value || null,\n            primaryColor: primaryColor.value,\n            secondaryColor: secondaryColor.value,\n            federationId: Number(federation?.value?.id),\n            isCreditSystemEnabled: !!isCreditSystemEnabled,\n            isPublic: !!isPublic,\n          },\n        });\n\n        result?.data?.updateDropzone?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        if (result?.data?.updateDropzone?.errors?.length) {\n          return dispatch(\n            actions.notifications.showSnackbar({\n              message: result?.data?.updateDropzone?.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n        if (!result?.data?.updateDropzone?.fieldErrors?.length) {\n          // No errors:\n          if (result.data?.updateDropzone?.dropzone) {\n            dispatch(\n              actions.global.setDropzone({\n                ...(globalState.currentDropzone || {}),\n                ...result?.data?.updateDropzone?.dropzone,\n              })\n            );\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `Saved`,\n                variant: 'success',\n              })\n            );\n            navigation.goBack();\n          }\n        }\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    globalState.currentDropzone,\n    navigation,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutation.loading}\n            onPress={onSave}\n            loading={mutation.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        name\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { xor } from 'lodash';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypes } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypes.value?.map(({ id }) => id),\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Transaction } from '../../../api/schema';\n\ninterface ITransaction {\n  transaction: Transaction;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {transaction?.createdAt && format(transaction?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport LottieView from 'lottie-react-native';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order, Receipt, Wallet } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport UserAvatar from '../../../components/UserAvatar';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport lottieTicketAnimation from '../../../../assets/images/ticket.json';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: Receipt;\n  index: number;\n  order: Order;\n}\n\nfunction ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | Dropzone | DropzoneUser) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        .filter((transaction) => isUser(transaction.receiver))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\nexport default function OrderScreen() {\n  const route = useRoute<{ key: string; name: string; params: { order: Order } }>();\n  const theme = useTheme();\n  const { order } = route.params;\n\n  console.log('Order', route.params);\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                }}\n              >{`Order #${order.id}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                }}\n              >\n                {order.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport { useDropzoneTransactionsLazyQuery } from '../../../api/reflection';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions, { data }] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            showAvatar\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider } from 'react-native-paper';\nimport { KeyboardAvoidingView } from 'react-native';\nimport RigInspectionForm from '../../../components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone, { QUERY_DROPZONE } from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { QUERY_DROPZONE_USER } from '../../../api/hooks/useDropzoneUser';\nimport RigCard from '../equipment/RigCard';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int, $dropzoneId: Int!, $userId: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId, userId: $userId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n            name\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          name\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number; userId: number };\n  }>();\n  const { rig, dropzoneUserId, userId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n      userId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id?.toString() === rig.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QUERY_DROPZONE,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QUERY_DROPZONE,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior=\"position\"\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <RigCard rig={rig} />\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            <RigInspectionForm />\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { Dropzone, DropzoneUser, Order, Slot } from '../../api/schema.d';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\n// Settings\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n// eslint-disable-next-line max-len\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\nimport OrderScreen from '../../screens/authenticated/transactions/OrderScreen';\nimport DropzoneTransactionsScreen from '../../screens/authenticated/transactions/DropzoneTransactionsScreen';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  Settings: undefined;\n  Profile: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n\n  ProfileScreen: {\n    userId: string;\n  };\n  NotificationsScreen: undefined;\n  EquipmentScreen: undefined;\n  TransactionsScreen: undefined;\n\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n  RigInspectionScreen: undefined;\n  DropzoneTransactionsScreen: undefined;\n  OrderScreen: {\n    order: Order;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n\n      {/* PROFILE */}\n      <Manifest.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Manifest.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n      <Manifest.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Manifest.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Account History' }}\n      />\n\n      <Manifest.Screen name=\"OrderScreen\" component={OrderScreen} options={{ title: 'Order' }} />\n\n      <Manifest.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Manifest.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Manifest.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Manifest.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig Inspection' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneTransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Order Activity' }}\n      />\n      <Manifest.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <NumberField\n        mode=\"outlined\"\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 36, width: 36, marginHorizontal: 12, borderRadius: 36 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 11, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={36}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={36}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from '../../../state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n  TransactionsScreen: undefined;\n  EquipmentScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Settings.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Settings.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Profile.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig inspection' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\n\nexport default () => <></>;\n","import {\n  BottomTabBarOptions,\n  BottomTabBarProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from '../state';\nimport ManifestTab from './tabs/manifest';\nimport UsersTab from './tabs/users';\nimport NotificationsTab from './tabs/notifications';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nimport AnimatedTabBar from './AnimatedTabBar';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\nexport default function AuthenticatedTabBar() {\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        activeColor: palette.primary.main,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.primary.dark,\n      palette.primary.main,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      {...Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: '#FFFFFF',\n        inactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.primary,\n        activeBackgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: Platform.OS !== 'web',\n        adaptive: true,\n        style: {\n          backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n          borderTopWidth: StyleSheet.hairlineWidth,\n          borderTopColor: '#CCCCCC',\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size }}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" color=\"#FFFFFF\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: '#FF1414',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\n\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function CreateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  const createDropzone = useMutationCreateDropzone({\n    onError: (e: string) =>\n      dispatch(actions.notifications.showSnackbar({ message: e, variant: 'error' })),\n    onFieldError: (field, error) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as string, error])),\n    // eslint-disable-next-line max-len\n    onSuccess: (payload) =>\n      payload?.dropzone && dispatch(actions.global.setDropzone(payload.dropzone)),\n  });\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 32 }}>\n      <DropzoneForm loading={createDropzone.loading} />\n      <View style={styles.fields}>\n        <Button\n          mode=\"contained\"\n          disabled={createDropzone.loading}\n          loading={createDropzone.loading}\n          onPress={() =>\n            createDropzone.mutate({\n              name: state.fields.name.value || '',\n              banner: state.fields.banner.value,\n              federationId: Number(state.fields.federation.value?.id),\n              lat: state.fields.lat.value || null,\n              lng: state.fields.lng.value || null,\n              secondaryColor: state.fields.secondaryColor.value || null,\n              primaryColor: state.fields.primaryColor.value || null,\n            })\n          }\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport CreateDropzoneScreen from '../screens/authenticated/dropzones/CreateDropzoneScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n      <Stack.Screen name=\"CreateDropzoneScreen\" component={CreateDropzoneScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { View } from '../../../components/Themed';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView style={styles.fields} behavior=\"padding\">\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          value={state.fields.email.value}\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setEmail(newValue));\n          }}\n        />\n        <HelperText type=\"error\">{state.fields.email.error || ' '}</HelperText>\n\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          value={state.fields.password.value}\n          secureTextEntry\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setPassword(newValue));\n          }}\n          onSubmitEditing={onLogin}\n          error={!!state.fields.password.error}\n        />\n        <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={onLogin}\n          loading={data.loading}\n        >\n          Log in\n        </Button>\n\n        <Button\n          labelStyle={styles.textButtonLabel}\n          style={styles.textButton}\n          onPress={() => navigation.navigate('SignUpScreen')}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView style={styles.fields} behavior=\"position\">\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n          {state.fields.exitWeight.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Phone\"\n          error={!!state.fields.phone.error}\n          value={state.fields.phone.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['phone', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.phone.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport FederationSelect from '../../../../components/input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction NameAndFederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Basic information\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n        </Card>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default NameAndFederationWizardSceen;\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { calculateLatLngDelta } from '../../../../utils/calculateLatLngDelta';\nimport Map from '../../../../components/map/Map';\n\nfunction LocationWizardStep(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.log(status);\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    console.log({ visible });\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n\n  return (\n    <WizardScreen\n      disableScroll\n      style={styles.container}\n      containerStyle={{ paddingHorizontal: 0 }}\n      {...props}\n    >\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Pick location</Text>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 140,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction AircraftWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Aircraft\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Information</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Name\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value}\n            onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Registration\"\n            error={!!state.fields.registration.error}\n            value={state.fields.registration.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.plane.setField(['registration', newValue]))\n            }\n          />\n          <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n            {state.fields.registration.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Minimum slots</List.Subheader>\n            <Text style={styles.cardValue}>{minSlots || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={maxSlots || 34}\n              step={1}\n              value={minSlots}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(value) => setMinSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['minSlots', minSlots]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.minSlots?.error ? 'error' : 'info'}>\n            {state.fields.minSlots?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Max slots</List.Subheader>\n            <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={2}\n              maximumValue={34}\n              step={1}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              value={maxSlots}\n              onValueChange={(value) => setMaxSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n            {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { PhonePreview, WebPreview } from '../../../../components/theme_preview';\nimport ColorPicker from '../../../../components/input/colorpicker';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Branding\">\n      <View style={styles.content}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n\n          <WebPreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n        </View>\n\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['secondaryColor', color]))}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { useAppSelector } from '../../../../state';\nimport { Permission, Query } from '../../../../api/schema.d';\nimport PermissionListItem from '../../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardScreenProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <Card>\n            <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n              {data?.dropzone?.roles?.map((role) => (\n                <PermissionListItem\n                  permissionName={permission}\n                  role={role}\n                  title={capitalize(role?.name?.replace(/_/, ' '))}\n                />\n              ))}\n            </Card.Content>\n          </Card>\n        )}\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n    marginBottom: 16,\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n\nfunction TicketTypeWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Tickets\">\n      <Paragraph style={styles.paragraph}>You can add more tickets later under Settings</Paragraph>\n\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['name', newValue]))\n            }\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString() as '14000' | '4000']\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from '../../../components/forms/dropzone/slice';\nimport { PlaneFields } from '../../../components/forms/plane/slice';\nimport { TicketTypeFields } from '../../../components/forms/ticket_type/slice';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport NameAndFederationStep from './steps/Name';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from '../../../api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from '../../../api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from '../../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../../api/hooks/useMutationUpdateTicketType';\nimport { Permission } from '../../../api/schema.d';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onBasicInfoNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void): Promise<void> => {\n      if (!dropzone.fields.name.value) {\n        dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n        return;\n      }\n      if (!dropzone.fields.federation.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError([\n            'federation',\n            'Your dropzone must have an associated organization',\n          ])\n        );\n        return;\n      }\n\n      setIndex(index + 1);\n    },\n    [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]\n  );\n\n  const onThemingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!dropzone.fields.primaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n        );\n        return;\n      }\n      if (!dropzone.fields.secondaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['secondaryColor', 'Please pick an accent color'])\n        );\n        return;\n      }\n      console.log(dropzone.fields);\n\n      // Create or update dropzone\n      const result = !dropzone.original?.id\n        ? await mutationCreateDropzone.mutate({\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            banner: '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value as number,\n            lng: dropzone.fields.lng.value as number,\n          })\n        : await mutationUpdateDropzone.mutate({\n            id: Number(dropzone.original.id),\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value,\n            lng: dropzone.fields.lng.value,\n            banner: '',\n          });\n\n      if (!result?.errors?.length && result?.dropzone?.id) {\n        dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n        dispatch(actions.global.setDropzone(result?.dropzone));\n        if (result.dropzone.primaryColor) {\n          dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n        }\n        if (result.dropzone.secondaryColor) {\n          dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n        }\n        setIndex(index + 1);\n      }\n    },\n    [\n      dispatch,\n      dropzone.fields,\n      dropzone.original?.id,\n      mutationCreateDropzone,\n      mutationUpdateDropzone,\n    ]\n  );\n\n  const onAircraftNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!aircraft.fields.name.value) {\n        dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n        return;\n      }\n      if (!aircraft.fields.registration.value) {\n        dispatch(\n          actions.forms.plane.setFieldError([\n            'registration',\n            'Please provide aircraft registration',\n          ])\n        );\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !aircraft.original?.id\n        ? await mutationCreatePlane.mutate({\n            dropzoneId: Number(dropzone?.original?.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: Number(aircraft.fields.minSlots.value),\n            maxSlots: Number(aircraft.fields.maxSlots.value),\n          })\n        : await mutationUpdatePlane.mutate({\n            id: Number(aircraft.original.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: aircraft.fields.minSlots.value,\n            maxSlots: aircraft.fields.maxSlots.value,\n          });\n\n      if (!result?.errors?.length && result?.plane?.id) {\n        dispatch(actions.forms.plane.setOpen(result?.plane));\n        setIndex(index + 1);\n      }\n    },\n    [\n      aircraft.fields.maxSlots.value,\n      aircraft.fields.minSlots.value,\n      aircraft.fields.name.value,\n      aircraft.fields.registration.value,\n      aircraft.original?.id,\n      dispatch,\n      dropzone?.original?.id,\n      mutationCreatePlane,\n      mutationUpdatePlane,\n    ]\n  );\n\n  const onTicketTypeNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!ticket.fields.name.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n        return;\n      }\n\n      if (!ticket.fields.cost.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !ticket.original?.id\n        ? await mutationCreateTicketType.mutate({\n            dropzoneId: Number(dropzone.original?.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          })\n        : await mutationUpdateTicketType.mutate({\n            id: Number(ticket.original.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          });\n\n      if (!result?.errors?.length && result?.ticketType?.id) {\n        dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n        setIndex(index + 1);\n      }\n    },\n    [\n      ticket.fields.name.value,\n      ticket.fields.cost.value,\n      ticket.fields.altitude.value,\n      ticket.original?.id,\n      mutationCreateTicketType,\n      dropzone.original?.id,\n      mutationUpdateTicketType,\n      dispatch,\n    ]\n  );\n\n  return (\n    <Wizard>\n      <NameAndFederationStep\n        onBack={() => {\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.goBack();\n        }}\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onNext={onBasicInfoNext}\n      />\n      <LocationStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n      />\n\n      <ThemingStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onThemingNext}\n        loading={mutationCreateDropzone.loading || mutationUpdateDropzone.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <AircraftStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onAircraftNext}\n        loading={mutationCreatePlane.loading || mutationUpdatePlane.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <TicketTypeStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onTicketTypeNext}\n        loading={mutationCreateTicketType.loading || mutationUpdateTicketType.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Who can manifest?\"\n        permission={Permission.CreateSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Manifest other people?\"\n        permission={Permission.CreateUserSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => {\n          setIndex(idx + 1);\n        }}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <WizardCompleteStep\n        title=\"Setup complete\"\n        subtitle=\"You can configure settings under the Settings screen\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={() => {\n          dispatch(actions.global.setDropzone(dropzone.original));\n          if (dropzone.fields.primaryColor.value) {\n            dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n          }\n          if (dropzone.fields.secondaryColor.value) {\n            dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n          }\n          dispatch(actions.global.setDropzone(dropzone.original));\n\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n\n          // Set complete-flag to force navigation from dropzone screen\n          dispatch(actions.forms.dropzoneWizard.complete());\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          navigation.replace('Authenticated', { screen: 'HomeScreen' });\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { account_confirmation_success?: string };\n  }>();\n\n  return route?.params?.account_confirmation_success === 'true' ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong. Please contact support</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FF0000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    color: '#FFFFFF',\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<Query['dropzones'], never>(QUERY_DROPZONES, {\n  getPayload: (query) => query?.dropzones,\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport {\n  DrawerActions,\n  getFocusedRouteNameFromRoute,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport InfoGrid from '../../screens/authenticated/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport useQueryDropzones from '../../api/hooks/useQueryDropzones';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const routeName = getFocusedRouteNameFromRoute(route);\n  const navState = navigation.dangerouslyGetState();\n  const subNavState = navState.routes[navState.index].state;\n  // eslint-disable-next-line\n  // @ts-ignore\n  const subNavRoutes = subNavState?.routes[subNavState?.index];\n  const subNavSubState = subNavRoutes?.state;\n  let subRouteName = subNavState && getFocusedRouteNameFromRoute(subNavRoutes);\n  subRouteName = subRouteName || subNavSubState?.routes[0].name;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'Authenticated',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'ProfileScreen',\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(subRouteName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'ManifestScreen',\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={subRouteName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ProfileScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={subRouteName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'EquipmentScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={subRouteName === 'Notifications'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Notifications',\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={subRouteName === 'TransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'TransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={subRouteName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'DropzoneTransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'Authenticated',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'SettingsScreen',\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon=\"map-marker\"\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node));\n                  navigation.navigate('Authenticated', {\n                    screen: 'Authenticated',\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('DropzoneSetupScreen');\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_setup/DropzoneSetupScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\nimport DrawerMenu from './drawer/Drawer';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { account_confirmation_success?: boolean };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  NotFound: undefined;\n};\n\nexport type TDrawerNavigatorRouteParams = {\n  Authenticated: undefined;\n  Profile: undefined;\n  Settings: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TDrawerNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\">\n            {() => (\n              <Drawer.Navigator drawerContent={() => <DrawerMenu />}>\n                <Drawer.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n              </Drawer.Navigator>\n            )}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText } from 'react-native-paper';\nimport LicenseChipSelect from '../../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../../input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What license do you have?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state?.fields?.license?.value?.federation || state.federation.value}\n            onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          />\n          <HelperText type={state.federation.error ? 'error' : 'info'}>\n            {state.federation.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={{ padding: 16 }}>\n          {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n            <>\n              <LicenseChipSelect\n                value={state.fields.license.value}\n                federationId={Number(\n                  state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n                )}\n                onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n              />\n              <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n                {state.fields.license.error || ''}\n              </HelperText>\n            </>\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, HelperText, List, Menu, TextInput } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction RigWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What're you jumping?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Container manufacturer</List.Subheader>\n          <Menu\n            onDismiss={() => setMenuOpen(false)}\n            visible={isMenuOpen}\n            anchor={\n              <TouchableOpacity onPress={() => setMenuOpen(true)}>\n                <TextInput\n                  pointerEvents=\"box-only\"\n                  style={styles.field}\n                  mode=\"outlined\"\n                  error={!!state.fields.make.error}\n                  value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                  disabled\n                />\n              </TouchableOpacity>\n            }\n          >\n            {[\n              'Icon',\n              'Javelin',\n              'Mirage',\n              'Vector',\n              'PA (Talon)',\n              'Infinity',\n              'Parachutes de France',\n              'Parachute Systems',\n              'Racer',\n            ].map((make) => (\n              <Menu.Item\n                onPress={() => {\n                  setMenuOpen(false);\n                  dispatch(actions.forms.rig.setField(['make', make]));\n                  setIsOtherMake(false);\n                }}\n                title={make}\n              />\n            ))}\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                dispatch(actions.forms.rig.setField(['make', '']));\n                setIsOtherMake(true);\n              }}\n              title=\"Other\"\n            />\n          </Menu>\n          {!isOtherMake ? null : (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          )}\n\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n\n          <List.Subheader>Model</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card}>\n          <List.Subheader>Serial number</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n            {state.fields.serial.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from '../../../input/date_picker/DatePicker';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Next reserve repack?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Do you have a rig?\">\n      <View style={styles.content}>\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === false ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', false]))}\n        >\n          <Card.Title title=\"I have my own rig\" />\n        </Card>\n\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === true ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', true]))}\n        >\n          <Card.Title title=\"I dont have a rig\" />\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction WingloadingWizardScreen(props: IWizardScreenProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Your wingloading\">\n      <View style={styles.content}>\n        <Card>\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <View style={styles.wingLoadingCardLeft}>\n              <Avatar.Text\n                label={ceil(\n                  (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                    (rigForm.fields.canopySize.value || 150),\n                  2\n                ).toString()}\n                size={100}\n                style={styles.wingLoading}\n              />\n            </View>\n            <View style={styles.wingLoadingCardRight}>\n              <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n              <Paragraph>\n                Your wingloading is an indicator of your descent rate under canopy\n              </Paragraph>\n            </View>\n          </Card.Content>\n        </Card>\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Your exit weight</List.Subheader>\n            <Text style={styles.cardValue}>{weight || 50}kg</Text>\n          </View>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={50}\n            maximumValue={160}\n            step={0.5}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onSlidingComplete={() =>\n              dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n            }\n            value={weight}\n            onValueChange={(w) => setWeight(w)}\n          />\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Canopy size</List.Subheader>\n            <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={34}\n              maximumValue={350}\n              step={1}\n              value={canopySize || 120}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(size) => setCanopySize(size)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n              }\n            />\n          </View>\n\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Portal, Modal } from 'react-native-paper';\nimport Wizard from '../../wizard/Wizard';\nimport WizardCompleteStep from '../../wizard/WizardCompleteStep';\nimport FederationStep from './steps/Federation';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationUpdateUser from '../../../api/hooks/useMutationUpdateUser';\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport useMutationCreateRig from '../../../api/hooks/useMutationCreateRig';\nimport { UserFields } from '../../forms/user/slice';\nimport { RigFields } from '../../forms/rig/slice';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const mutationUpdateRig = useMutationUpdateRig({\n    onSuccess: () => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n  const mutationCreateRig = useMutationCreateRig({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n\n  const onFederationNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!userForm.fields.license?.value?.id) {\n        dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n        return false;\n      }\n\n      // Update user license\n      try {\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        });\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateUser, userForm.fields.license?.value?.id, userForm.original?.id]\n  );\n\n  const onRigNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.make?.value) {\n        dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n        return;\n      }\n\n      if (!rigForm.fields.model?.value) {\n        dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n        return;\n      }\n\n      // Create user rig\n      try {\n        const rig = !rigForm.original?.id\n          ? await mutationCreateRig.mutate({\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            })\n          : await mutationUpdateRig.mutate({\n              id: Number(rigForm.original?.id),\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            });\n\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        setIndex(index + 1);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    [\n      rigForm.fields.make.value,\n      rigForm.fields.model.value,\n      rigForm.fields.serial.value,\n      rigForm.original?.id,\n      dispatch,\n      mutationCreateRig,\n      userForm.original?.id,\n      mutationUpdateRig,\n    ]\n  );\n\n  const onReserveRepackNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        const rig = await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        });\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]\n  );\n\n  const onWingloadingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.canopySize?.value) {\n        dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n        return false;\n      }\n\n      if (!userForm.fields.exitWeight?.value) {\n        dispatch(\n          actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight'])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          canopySize: rigForm.fields.canopySize.value,\n        });\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          exitWeight: Number(userForm.fields.exitWeight?.value),\n        });\n\n        setIndex(index + 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return null;\n    },\n    [\n      rigForm.fields.canopySize.value,\n      rigForm.original?.id,\n      userForm.fields.exitWeight?.value,\n      userForm.original?.id,\n      dispatch,\n      mutationUpdateRig,\n      mutationUpdateUser,\n    ]\n  );\n\n  return (\n    <Portal>\n      <Modal\n        visible={state.open}\n        dismissable={false}\n        style={styles.modal}\n        contentContainerStyle={{ height: '100%' }}\n      >\n        <Wizard>\n          <FederationStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel=\"Next\"\n            onBack={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n            loading={mutationUpdateUser.loading}\n            onNext={onFederationNext}\n          />\n          <AskForRigStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel={state.fields.skipRigSetup.value ? 'Done' : 'Next'}\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index + 4);\n              } else {\n                setIndex(index + 1);\n              }\n            }}\n          />\n          <RigStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onNext={onRigNext}\n          />\n          <ReserveRepackStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onReserveRepackNext}\n          />\n          <WingloadingStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onWingloadingNext}\n          />\n\n          <WizardCompleteStep\n            title=\"You're all set!\"\n            subtitle=\"You can configure your settings on the profile page\"\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Done\"\n            onBack={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index - 4);\n              } else {\n                setIndex(index - 1);\n              }\n            }}\n            onNext={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n          />\n        </Wizard>\n      </Modal>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    ...StyleSheet.absoluteFillObject,\n    paddingLeft: 0,\n    marginLeft: 0,\n    marginBottom: 0,\n    marginTop: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    backgroundColor: 'red',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nexport default UserWizardScreen;\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport URI from 'urijs';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\nimport UserWizardScreen from './components/dialogs/UserWizard/UserWizardScreen';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestForegroundPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  React.useEffect(() => {\n    if (isDarkMode && !state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else if (!isDarkMode && state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else {\n      dispatch(actions.global.setPrimaryColor(state.theme.colors.primary));\n    }\n  }, [dispatch, isDarkMode, state.isDarkMode, state.theme.colors.primary]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'warning',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log(response);\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <MaterialProvider theme={state.theme}>\n            <SafeAreaProvider>\n              <ImageViewer />\n              <NavigationContainer\n                linking={LinkingConfiguration}\n                theme={state.theme as unknown as never}\n              >\n                <Wrapper>\n                  <RootNavigator />\n                </Wrapper>\n              </NavigationContainer>\n\n              <StatusBar />\n              <UserWizardScreen />\n              <NotificationArea />\n            </SafeAreaProvider>\n          </MaterialProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}