{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/LottieView.web.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/crud/factory.tsx","app/providers/dropzone/context.ts","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/providers/notifications/context.ts","app/providers/notifications/provider.tsx","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/reflection.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/hooks/useRestriction.ts","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/useManifest.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/providers/manifest/context.ts","app/hooks/useManifestValidator.ts","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/hooks/useDialog.tsx","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/forms/create_user/Form.tsx","app/forms/create_user/useForm.ts","app/forms/create_user/Dialog.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/Dialog.tsx","app/providers/dropzone/provider.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/hooks/useDevice.ts","app/components/Divider.tsx","app/screens/unauthenticated/login/form/FacebookButton.web.tsx","app/screens/unauthenticated/login/form/AppleButton.web.tsx","app/screens/unauthenticated/login/form/useForm.ts","app/screens/unauthenticated/login/form/LoginForm.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/components/GradientText.web.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Buttons.tsx","app/components/carousel_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/forms/sign_up/steps/Password.tsx","app/forms/sign_up/steps/Email.tsx","app/forms/sign_up/steps/PasswordConfirmation.tsx","app/forms/sign_up/steps/Done.tsx","app/forms/sign_up/useForm.tsx","app/forms/sign_up/SignupWizard.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/night.png","assets/images/weather.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AppSignalClient","Appsignal","key","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentDropzoneId","currentDropzone","currentUserId","currentUser","INITIAL_CONTEXT","appSignal","tags","setTags","noop","AppSignalContext","React","useAppSignalContext","ErrorBoundary","props","state","error","undefined","errorInfo","console","this","Fallback","fallback","children","LottieView","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","height","width","SafeAreaView","style","position","top","left","alignItems","justifyContent","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","source","twigBreakAnimation","autoPlay","loop","HelperText","type","message","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","mode","AppSignalBoundary","instance","errorBoundaryRef","current","ref","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","value","onTagsChanged","span","isEqual","addDecorator","Provider","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","rest","useContext","dropzone","permissions","called","refetch","fetchMore","dialogs","aircraft","visible","close","open","createUser","ticketType","ticketTypeAddon","DropzoneContext","useDropzoneContext","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","DropzoneWizardStep","initialState","original","fields","federation","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","action","payload","field","setFieldError","setOpen","Object","keys","forEach","payloadKey","typedKey","setOriginal","reset","role","expiresAt","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","log","Error","definition","err","jumpType","extras","load","rig","dropzoneUser","exitWeight","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","user","rigs","length","first","availableRigs","avatar","image","apfNumber","email","phone","nickname","license","setFederation","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","credentials","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","toString","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","operation","query","definitions","q","kind","createBreadCrumb","category","operationName","timestamp","Math","floor","Date","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","errors","graphQLErrors","response","ignore","filteredErrors","filter","breadcrumb","loc","body","print","variables","stringify","result","statusCode","addBreadcrumb","sendError","join","e","AppSignalBreadcrumbLink","forward","Observable","originalObserver","subscription","subscribe","next","omit","unsubscribe","ApolloLink","NotificationContext","useNotifications","AnimationState","NotificationsProvider","queue","setQueue","successAnimation","closed","animationState","setAnimationState","notification","variant","opening","notify","newNotification","last","onHide","newQueue","onAnimationFinish","waiting","setTimeout","Toast","show","text1","context","View","StyleSheet","absoluteFillObject","pointerEvents","speed","styles","animation","lottieDoneAnimation","autoHide","visibilityTime","create","ERROR_CODE_WHITELIST","Apollo","httpBatchLink","Update","environment","uri","urls","url","warn","BatchHttpLink","batchDebounce","batchMax","root","dispatch","errorLink","onError","networkError","some","extensions","code","process","EXPO_ENV","locations","path","nodes","authLink","setContext","_","headers","accessToken","Authorization","tokenType","useAppSignal","appSignalLink","from","createAppSignalLink","includes","link","ApolloClient","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloProvider","EntrypointWrapper","absoluteFill","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","TicketTypeAddonEssentialsFragmentDoc","TicketTypeDetailsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","TicketTypeAddonDetailsFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateAircraftDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreateRigDocument","CreateRigInspectionDocument","CreateTicketAddonDocument","CreateTicketTypeDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateAircraftDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","useUpdateDropzoneUserMutation","UpdateLoadDocument","UpdateLostPasswordDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketAddonDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","useTicketTypesQuery","useDropzone","vars","dropzoneId","useDropzoneQuery","initialFetchPolicy","skip","data","queryVariables","permissionsVariables","useCurrentUserPermissionsQuery","useDropzonesQuery","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","event","fieldErrors","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","useRestriction","permission","isRequired","pattern","isNumeric","createMutation","mutation","getPayload","fieldErrorMap","validators","validates","opts","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","test","callback","validate","requestAnimationFrame","updateLoad","useLoad","useLoadQuery","pollInterval","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","update","useMutationUpdateLoad","loadNumber","manifestUser","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","minutes","dispatchTime","DateTime","local","plus","toISO","dispatchAt","BoardingCall","Open","updateLoadState","updatePilot","pilot","updateGCA","gca","updatePlane","plane","updateLoadMaster","lm","loadMaster","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","time","fromSeconds","useUserProfile","updateMutation","getProfile","useCreateOrderMutation","mutationCreateOrder","useCreateGhostMutation","mutationCreateGhost","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","attributes","refetchQueries","createGhost","updateDropzoneUser","createOrder","mutationResult","order","buyer","__typename","writeFragment","fragment","fragmentName","identify","seller","addCredits","amount","walletId","withdrawCredits","useRevokePermissionMutation","revoke","useGrantPermissionMutation","grant","grantPermission","dropzoneUserId","permissionName","revokePermission","useManifest","date","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","useLoadsQuery","utc","toISODate","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","updateQuery","moveSlot","sourceLoad","mutationVariables","targetLoad","loads","createSlots","deleteSlot","createLoad","prev","useTickets","ticketTypes","loadingTickets","useCreateTicketTypeMutation","createTicket","useUpdateTicketTypeMutation","updateTicket","useArchiveTicketTypeMutation","archiveTicket","useCreateTicketAddonMutation","createAddon","useUpdateTicketAddonMutation","updateAddon","createTicketType","updateTicketType","createTicketTypeAddon","fetchPolicy","createExtra","updateTicketTypeAddon","updateExtra","archiveTicketType","optimisticResponse","mutationData","evict","useAircrafts","useCreateAircraftMutation","createAircraft","useUpdateAircraftMutation","updateAircraft","useArchivePlaneMutation","archiveAircraft","createPlane","planes","archive","deletePlane","aircrafts","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","DialogOrSheet","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","Typography","marginBottom","IconButton","icon","size","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","defaultValue","render","onChange","onBlur","formState","TextField","helperText","setText","onChangeText","TextInput","flatten","surface","NumberFieldType","FormTextField","flex","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","label","onChangeValue","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","selected","margin","ChipSelectComponent","previous","ChipSelectField","defaultColors","ThemedSkeleton","boneColor","Color","negate","rgb","highlightColor","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","requiredPermissions","onLoadingStateChanged","onChangeSelected","getItemLabel","Boolean","Subheader","uniqBy","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","allowedForDropzoneUserIds","allowedJumpTypes","jumpTypes","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","LicenseChipSelectField","PlaneChipSelect","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","split","n","Image","Text","stringToColor","string","hash","charCodeAt","substr","initials","Avatar","sx","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","currentTarget","TouchableOpacity","anchorOrigin","vertical","transformOrigin","Select","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","labelId","paddingTop","SelectDisplayProps","val","RigSelect","loadId","tandem","useAvailableRigsLazyQuery","fetchRigs","isTandem","RigSelectField","ManifestForm","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","credits","ManifestContext","useManifestContext","schema","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","canManifest","abortEarly","manifestUserValidation","min","max","of","EMPTY_FORM_VALUES","ManifestUserDialog","initial","initialValues","defaultValues","setDefaultValues","methods","useForm","resolver","yupResolver","handleSubmit","setError","useAsyncFn","onManifest","onSubmit","portal","usePortal","removePortal","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","maxSlots","isOpen","LoadDialog","setValue","validatedFields","snapPoints","scrollable","CreditsForm","subtotal","Deposit","Withdrawal","DataTable","Row","Cell","numeric","orderValidation","integer","oneOf","values","DropzoneUserDialog","shouldUnregister","onCreateOrder","useCreditsForm","defaultIndex","onChangeIndex","newIndex","form","paddingHorizontal","createUseDialog","defaults","setState","newState","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","manifestUserDialog","loadDialog","creditsDialog","TimePicker","onDismissSingle","onConfirm","timestampLabel","format","Item","description","Icon","Modal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","then","withLoadContext","AircraftForm","aircraftValidation","registration","minSlots","basicEmptyWeight","maxTakeOffWeight","fuelType","AircraftDialog","register","validated","useAircraftForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","FederationSelect","federations","FederationSelectField","JumpTypeSelect","LicenseSelect","PlaneSelect","onCHange","RoleSelect","roles","a","b","RoleSelectField","TicketTypeSelect","allowManifestingSelf","GhostForm","ghostValidation","optional","federationUid","CreateGhostDialog","federationNumber","Switch","onValueChange","SwitchField","TicketTypeForm","altitude","useTicketTypeExtrasLazyQuery","getTicketAddons","ticketTypeValidation","TicketTypeDialog","extraIds","selectedTicketTypes","ticketAddonValidation","ticketTypeIds","onSave","useAircraftDialog","useCreateUserDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","token","isDevice","existingStatus","finalStatus","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","updateUser","Device","registerForPushNotificationsAsync","request","Linking","addEventListener","removeSubscription","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","onUpdate","play","isNew","isUpdateAvailable","isAvailable","blur","intensity","fontSize","bottom","ImageViewer","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","empty","Paragraph","fab","DropzonesScreen","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","ScreenOrientation","divider","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","useLoginForm","useState","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","useCallback","userLogin","useMemo","LoginForm","ScrollView","animationContainer","loadingAnimation","secureTextEntry","onSubmitEditing","forgotPasswordDark","forgotPassword","labelStyle","textButtonLabel","logo","card","cardLandscape","fieldsLandscape","borderWidth","LoginScreen","orientation","Landscape","Portrait","useDevice","backgroundDark","backgroundLight","resizeMode","logoLight","logoDark","KeyboardAvoidingView","behavior","elevation","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","centerAlignedContent","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","interpolate","inputRange","outputRange","translateX","Animated","transform","childrenContainerStyle","useNativeAnimations","GradientText","opacity","Fields","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","Dots","count","Array","activeDot","inactiveDot","marginLeft","Buttons","backLabel","nextLabel","onNext","onBack","onNextPress","back","PasswordStrength","dots","zIndex","steps","y","dimensions","setDimensions","carouselRef","getCurrentIndex","scrollTo","goBack","onLayout","nativeEvent","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","useFormContext","textContentType","passwordRules","PasswordComplexityIndicator","EmailStep","PasswordConfirmationStep","DoneStep","SignUpSteps","signUpValidation","useSignupForm","Email","step","setStep","useUserSignUpMutation","onSignUp","userRegister","getValues","PasswordConfirmation","inner","validationError","Password","SignupWizard","SignupScreen","Unauthenticated","presentation","SignUpScreen","createDropzone","updateDropzone","newValue","active","itemSelected","FederationCardSelect","onSelect","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","canChangePermissions","useUpdateRoleMutation","mutationUpdatePermission","roleId","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","capitalize","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","Logo","pickImage","onPickImage","DropzoneSetupScreen","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","onFederationNumberNext","onLicenseNext","onRigNext","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","newText","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","validatePassword","onFinished","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","omitBy","isEmpty","canCreateUser","CreateUser","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","separator","inputContainer","input","AppBar","onSearch","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsLoadMaster","PermissionBadges","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","useApolloClient","getCachedUser","readFragment","mutationUpdateDropzoneUser","createData","userRoleId","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","ticketAddons","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","OrderCard","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","round","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","ScrollableScreen","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","DrawerActions","closeDrawer","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","truncate","LoadMasterChip","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","profile","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","AvailableRow","SlotsTable","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadScreen","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","Wizard","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","loadingAircrafts","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","createToggleManifestSelfHandler","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","hasError","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","useQuery","masterLog","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","ExtrasScreen","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","headerStyleInterpolator","HeaderStyleInterpolators","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","notifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","endDate","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","UserListScreen","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","remove","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"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","file":"static/js/app.63f3846a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n    createUser: IDialogContextSubstate<Pick<ICreateGhostDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    createUser: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt?: Maybe<Scalars['ISO8601DateTime']>;\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = AnyResource & SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(\n    () => ({ notify, success, error, info }),\n    [error, info, notify, success]\n  );\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\n","import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport config from 'app/constants/expo';\nimport { Platform } from 'react-native';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\nimport { relayStylePagination } from '@apollo/client/utilities';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const notify = useNotifications();\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Release channel', Update.releaseChannel);\n    const environment =\n      Platform.OS === 'web' ? config?.environment : config?.environment || Update.releaseChannel;\n    const uri = environment in (config?.urls || {}) ? config?.urls[environment] : config?.url;\n    console.warn({ uri, environment });\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          notify.info(`Session expired`);\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          notify.error(`[Network error]: ${networkError}`);\n        }\n      }),\n    [dispatch, notify]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            'Fly-Prefer-Region': 'syd',\n            'Fly-Region': 'syd',\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const { appSignal } = useAppSignal();\n  const appSignalLink = React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n\n  const link = React.useMemo(\n    () => ApolloLink.from([errorLink, appSignalLink, authLink, httpBatchLink]),\n    [appSignalLink, authLink, errorLink, httpBatchLink]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link,\n        cache: new InMemoryCache({\n          typePolicies: {\n            Event: relayStylePagination(),\n            DropzoneUsers: relayStylePagination(),\n            Loads: relayStylePagination(),\n          },\n        }),\n      }),\n    [link]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($dropzoneUserId: ID!, $attributes: DropzoneUserInput!) {\n  updateDropzoneUser(\n    input: {dropzoneUser: $dropzoneUserId, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: ID, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  dropzone(id: $dropzone) {\n    id\n    ticketTypes(isPublic: $onlyPublicTickets) {\n      ...ticketTypeDetails\n    }\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useCurrentUserPermissionsQuery, useDropzoneQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useDropzoneQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const permissions = useCurrentUserPermissionsQuery({\n    variables: permissionsVariables as CurrentUserPermissionsQueryVariables,\n    skip: !permissionsVariables?.dropzoneId,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { useDropzonesQuery, useUpdateVisibilityMutation } from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const query = useDropzonesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken,\n  });\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema.d';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useFinalizeLoadMutation, useLoadQuery, useManifestUserMutation } from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const notify = useNotifications();\n  const query = useLoadQuery({\n    initialFetchPolicy: 'cache-first',\n    variables: variables as LoadQueryVariables,\n    skip: !variables?.id,\n    pollInterval: 45000,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () => notify.success(`Load #${load?.loadNumber} updated`),\n    onError: (message) => notify.error(message),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n  UserEssentialsFragment,\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateGhostMutation,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  useUpdateDropzoneUserMutation,\n} from '../reflection';\nimport { GhostInput, Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateDropzoneUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const [mutationCreateGhost] = useCreateGhostMutation();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  React.useEffect(() => {\n    if (id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [getProfile, id, query?.variables?.id]);\n\n  const create = React.useCallback(\n    async function CreateGhost(\n      attributes: GhostInput\n    ): Promise<TMutationResponse<{ user: UserEssentialsFragment }>> {\n      try {\n        const response = await mutationCreateGhost({\n          variables: attributes,\n          refetchQueries: [\n            DropzoneUsersDocument,\n            { query: DropzoneUsersDocument, variables: { dropzoneId: dropzone?.id } },\n          ],\n        });\n\n        if (response?.data?.createGhost?.user?.id) {\n          return { user: response?.data?.createGhost?.user };\n        }\n        return {\n          error: response?.data?.createGhost?.errors?.[0],\n          fieldErrors: response?.data?.createGhost?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        console.debug('CreateGhost failed', error);\n        if (error instanceof Error) {\n          appSignal?.sendError(error);\n        }\n        return { error: 'Oh no, something went wrong' };\n      }\n    },\n    [appSignal, dropzone?.id, mutationCreateGhost]\n  );\n  const update = React.useCallback(\n    async function UpdateDropzoneUser(\n      attributes: UpdateDropzoneUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          ...attributes,\n        },\n      });\n\n      if (data?.updateDropzoneUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateDropzoneUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateDropzoneUser?.errors?.[0],\n        fieldErrors: data?.updateDropzoneUser?.fieldErrors || undefined,\n      };\n    },\n    [updateMutation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes,\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order.buyer.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer,\n                });\n              } else if (order.seller.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller,\n                });\n              }\n            }\n          },\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Added funds`,\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Withdrew funds`,\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined,\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined,\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      create,\n      update,\n      addCredits,\n      grantPermission,\n      revokePermission,\n      withdrawCredits,\n    }),\n    [\n      addCredits,\n      grantPermission,\n      query?.refetch,\n      create,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits,\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(\n  useUserProfile,\n  {\n    loading: false,\n    dropzoneUser: null,\n    refetch: uninitializedHandler as never,\n    update: uninitializedHandler as never,\n    create: uninitializedHandler as never,\n    addCredits: uninitializedHandler as never,\n    withdrawCredits: uninitializedHandler as never,\n    grantPermission: uninitializedHandler as never,\n    revokePermission: uninitializedHandler as never,\n  }\n);\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.utc().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useTicketTypesQuery,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n  TicketTypeExtrasDocument,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useTicketTypesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzone,\n  });\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  console.debug({ loadingTickets: loading, ticketTypes });\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [\n          {\n            query: TicketTypeExtrasDocument,\n            variables: { dropzoneId: dropzone?.id },\n            fetchPolicy: 'network-only',\n          },\n        ],\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  usePlanesQuery,\n  PlanesDocument,\n  useArchivePlaneMutation,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = usePlanesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button\n          mode=\"contained\"\n          disabled={loading}\n          {...{ loading }}\n          onPress={buttonAction}\n          style={styles.button}\n        >\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(\n  Component: React.ComponentType<BaseProps>\n) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, formState: { errors } }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onChange, onBlur }}\n            error={errors?.[name]?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const {\n    label,\n    requiredPermissions,\n    icon,\n    value,\n    variant,\n    error,\n    onLoadingStateChanged,\n    onChange,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.dropzone?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => onChange(target.value as T)}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <MuiMenuItem value={val as T}>\n            {!icon || avatar ? null : (\n              <ListItemIcon>\n                {typeof icon === 'string' ? (\n                  <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                ) : null}\n                {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n              </ListItemIcon>\n            )}\n            {!avatar || !showAvatars ? null : (\n              <ListItemAvatar>\n                <UserAvatar name={label} image={avatar} size={32} />\n              </ListItemAvatar>\n            )}\n            <ListItemText primary={title} />\n          </MuiMenuItem>\n        ))}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const manifestUserValidation = yup.object().shape({\n  load: yup.object().required(),\n  exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n  rig: yup.object().required('You cant manifest without a rig').nullable(),\n  jumpType: yup.object().required('Jump type is required').nullable(),\n  ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n  original: yup.object().nullable(),\n  extras: yup.array().of(yup.object()).nullable(),\n});\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight,\n              }),\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined,\n    },\n    onSuccess,\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<\n  Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>\n> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: Number(validatedFields.gca?.id),\n          state: LoadState.Open,\n          pilot: Number(validatedFields.pilot?.id),\n          plane: Number(validatedFields.plane?.id),\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name,\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser,\n  });\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date, children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud/useLoad';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: { loading: false, mutate: uninitializedHandler as never },\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud/useAircrafts';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup\n    .number()\n    .integer()\n    .required('Maximum slots is required')\n    .min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup\n    .number()\n    .default(0)\n    .min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined,\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(field, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  console.debug('alt', { value, props });\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map(({ permissions, ...node }) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { FederationSelectField, RoleSelectField } from 'app/components/input/dropdown_select';\nimport { LicenseChipSelectField } from 'app/components/input/chip_select';\n\nimport { UserFields } from './useForm';\n\ninterface IGhostFormProps {\n  control: Control<UserFields>;\n}\nexport default function GhostForm(props: IGhostFormProps) {\n  const { control } = props;\n\n  const { federation, license } = useWatch({ control });\n\n  return (\n    <>\n      <FormTextField label=\"Name\" name=\"name\" {...{ control }} />\n\n      <FormTextField label=\"Nickname\" name=\"nickname\" placeholder=\"Optional\" {...{ control }} />\n\n      <FormTextField label=\"Email\" name=\"email\" {...{ control }} />\n      <FormTextField label=\"Phone number\" name=\"phone\" {...{ control }} />\n\n      <FormNumberField label=\"Exit weight (kg)\" name=\"exitWeight\" {...{ control }} />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelectField {...{ control }} name=\"federation\" />\n\n        {(license?.federation?.id || federation?.id) && (\n          <LicenseChipSelectField name=\"license\" {...{ control }} />\n        )}\n      </View>\n      <RoleSelectField name=\"role\" {...{ control }} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport {\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  RoleEssentialsFragment,\n  UserEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type UserFields = {\n  id?: string | null;\n  name: string;\n  phone?: string | null;\n  federationUid?: string | null;\n  nickname: string;\n  email: string;\n  exitWeight: number;\n  federation?: FederationEssentialsFragment;\n  license?: LicenseDetailsFragment;\n  role?: RoleEssentialsFragment;\n};\n\nexport const ghostValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  nickname: yup.string().optional().nullable(),\n  email: yup.string().required('Email is required to invite the user'),\n  phone: yup.string().optional().nullable(),\n  federationUid: yup.string().optional().nullable(),\n  exitWeight: yup\n    .number()\n    .required('Exit weight is required')\n    .min(40, 'Exit weight must be more than 40kg')\n    .default(50),\n  federation: yup.object().required('Federation must be selected'),\n  license: yup.object().required('All jumpers must have a license'),\n  role: yup.object().required('You must select a role'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<UserFields> = {\n  name: '',\n  nickname: '',\n  email: '',\n  role: undefined,\n  license: undefined,\n  exitWeight: 50,\n  federation: undefined,\n  id: null,\n  phone: '',\n  federationUid: null,\n};\n\nexport interface IUseUserFormOpts {\n  initial?: Partial<UserFields>;\n  onSuccess?(user: UserEssentialsFragment): void;\n}\n\nexport default function useUserForm(opts: IUseUserFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<UserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ghostValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('license');\n    register('federation');\n    register('role');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create } = useUserProfile();\n  const notify = useNotifications();\n\n  const [{ loading }, createUser] = useAsyncFn(\n    async (fields: UserFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ghostValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = await create({\n          dropzone: Number(dropzone.id),\n          email: validated.email,\n          name: validated.name,\n          exitWeight: validated.exitWeight,\n          role: Number(validated.role?.id),\n          license: Number(validated?.license?.id),\n          federationNumber: validated?.federationUid,\n          phone: validated?.phone,\n        });\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('user' in response && response.user) {\n            notify.success(`${validated.name} has been invited`);\n            onSuccess?.(response.user);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, defaultValues, create]\n  );\n\n  const { control, setValue } = methods;\n  const { federation, license } = useWatch({ control });\n\n  React.useEffect(() => {\n    if (license?.federation && license?.federation?.id !== federation?.id) {\n      setValue('federation', license.federation as FederationEssentialsFragment);\n    }\n  }, [federation?.id, license?.federation, setValue]);\n\n  const onSubmit = React.useMemo(() => handleSubmit(createUser), [createUser, handleSubmit]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport GhostForm from './Form';\nimport useForm, { UserFields } from './useForm';\n\nexport interface ICreateGhostDialog {\n  open?: boolean;\n  original?: DropzoneUserEssentialsFragment;\n  initial?: Partial<UserFields>;\n  onClose(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.user?.name || initial?.name,\n      nickname: original?.user?.nickname || initial?.nickname,\n      phone: original?.user?.phone || initial?.phone,\n      license: original?.license || initial?.license,\n      federation: initial?.federation,\n      email: original?.user?.email || initial?.email,\n      role: original?.role || initial?.role,\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      {...{ open, loading, onClose, snapPoints }}\n      buttonAction={onSubmit}\n      buttonLabel=\"Create\"\n    >\n      <GhostForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onValueChange={onChange}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  console.debug({ altitude });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().default(14000).required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('altitude');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude || 14000,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [\n      dropzone?.id,\n      setError,\n      notify,\n      onSuccess,\n      createTicketTypeAddon,\n      updateTicketTypeAddon,\n      defaultValues,\n    ]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport AircraftSheet from 'app/forms/aircraft/Dialog';\nimport CreateUserSheet from 'app/forms/create_user/Dialog';\nimport TicketTypeSheet from 'app/forms/ticket_type/Dialog';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon/Dialog';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useCreateUserDialog = createUseDialog<Pick<ICreateGhostDialog, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const createUser = useCreateUserDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon, createUser }),\n    [aircraft, ticketType, ticketTypeAddon, createUser]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <CreateUserSheet {...createUser.state} onClose={createUser.close} open={createUser.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import Constants from 'expo-constants';\nimport * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    const subscription = Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeSubscription(subscription)\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: currentUser.id,\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport enum ScreenOrientation {\n  Landscape = 'LANDSCAPE',\n  Portrait = 'PORTRAIT',\n}\nexport default function useDevice() {\n  const { width, height } = useWindowDimensions();\n  const orientation = useMemo(\n    () => (width > height ? ScreenOrientation.Landscape : ScreenOrientation.Portrait),\n    [height, width]\n  );\n\n  return useMemo(() => ({ width, height, orientation }), [height, orientation, width]);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useLoginWithApple } from './AppleButton';\nimport { useLoginWithFacebook } from './FacebookButton';\n\nexport interface LoginFields {\n  email: string;\n  password: string;\n}\n\nexport const validate = yup.object({\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup.string().required('Password is required'),\n});\n\nconst EMPTY_FORM_VALUES: LoginFields = {\n  email: '',\n  password: '',\n};\n\nexport default function useLoginForm() {\n  const dispatch = useAppDispatch();\n  const methods = useForm({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n    resolver: yupResolver(validate),\n  });\n  const { handleSubmit } = methods;\n  const [loading, setLoading] = React.useState(false);\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async function Login(variables: LoginFields) {\n      try {\n        const result = await mutationLogin({\n          variables,\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, mutationLogin, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onLogin), [handleSubmit, onLogin]);\n\n  return React.useMemo(\n    () => ({\n      ...methods,\n      onSubmit,\n      loginWithFacebook,\n      loginWithApple,\n      loading:\n        loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading,\n    }),\n    [\n      data?.loading,\n      loginWithApple,\n      loginWithAppleMutation?.loading,\n      loginWithFacebook,\n      loginWithFacebookMutation?.loading,\n      methods,\n      onSubmit,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport FacebookButton from './FacebookButton';\nimport AppleButton from './AppleButton';\nimport useLoginForm from './useForm';\n\nexport default function LoginForm() {\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const { control, onSubmit, loading, loginWithApple, loginWithFacebook } = useLoginForm();\n  return (\n    <ScrollView>\n      {loading ? (\n        <View style={styles.animationContainer}>\n          <LottieView\n            autoPlay\n            loop\n            style={styles.loadingAnimation}\n            // eslint-disable-next-line global-require\n            source={require('../../../../../assets/images/loading.json')}\n          />\n        </View>\n      ) : (\n        <>\n          <FormTextField\n            {...{ control }}\n            name=\"email\"\n            label=\"Email\"\n            mode=\"outlined\"\n            disabled={loading}\n          />\n\n          <FormTextField\n            {...{ control }}\n            label=\"Password\"\n            name=\"password\"\n            mode=\"outlined\"\n            disabled={loading}\n            secureTextEntry\n            onSubmitEditing={onSubmit}\n          />\n        </>\n      )}\n      {loading ? null : (\n        <TouchableOpacity\n          onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n        >\n          <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n            Forgot your password?\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Button\n        mode=\"contained\"\n        disabled={loading}\n        labelStyle={{ color: theme.colors.onSurface }}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n        ]}\n        onPress={onSubmit}\n      >\n        {loading ? 'Authenticating...' : 'Log in'}\n      </Button>\n\n      <Divider>or</Divider>\n      <FacebookButton disabled={loading} style={{ marginTop: 8 }} onPress={loginWithFacebook} />\n\n      <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n      <Button\n        labelStyle={styles.textButtonLabel}\n        style={styles.textButton}\n        onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpScreen' })}\n      >\n        Sign up\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginBottom: 16,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import * as React from 'react';\nimport { Image, ImageBackground, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { Card, useTheme } from 'react-native-paper';\n\nimport useDevice, { ScreenOrientation } from 'app/hooks/useDevice';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\nimport LoginForm from './form/LoginForm';\n\nexport default function LoginScreen() {\n  const theme = useTheme();\n  const { orientation } = useDevice();\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      {orientation === ScreenOrientation.Portrait ? (\n        <>\n          <Image\n            source={theme.dark ? logoLight : logoDark}\n            style={styles.logo}\n            resizeMode=\"contain\"\n          />\n          <KeyboardAvoidingView\n            style={styles.fields}\n            behavior={Platform.OS === 'android' ? undefined : 'padding'}\n          >\n            <Card style={styles.card} elevation={3}>\n              <Card.Content>\n                <LoginForm />\n              </Card.Content>\n            </Card>\n          </KeyboardAvoidingView>\n        </>\n      ) : (\n        <KeyboardAvoidingView\n          style={styles.fieldsLandscape}\n          behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        >\n          <Card style={styles.cardLandscape} elevation={3}>\n            <Image\n              source={theme.dark ? logoLight : logoDark}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n            <Card.Content>\n              <LoginForm />\n            </Card.Content>\n          </Card>\n        </KeyboardAvoidingView>\n      )}\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions, View } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  scrollable?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const {\n    style,\n    children,\n    fullWidth = false,\n    scrollable = true,\n    contentContainerStyle,\n    ...rest\n  } = props;\n\n  if (!scrollable) {\n    return <View style={{ flex: 1, width: '100%' }}>{children}</View>;\n  }\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth\n            ? { paddingHorizontal: 0 }\n            : { width: width < 920 ? '100%' : 920, paddingHorizontal: 16 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    alignItems: 'flex-start',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation<string | number>,\n    dragX: Animated.AnimatedInterpolation<string | number>\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  actions: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, actions, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.content}\n    >\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <View style={{ width: '100%', alignItems: 'center', justifyContent: 'center' }}>\n        {children}\n      </View>\n\n      {actions}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n    marginBottom: 56,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","import * as React from 'react';\n\nimport { StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\nexport interface IWizardButtonsProps {\n  nextLabel: string;\n  backLabel: string;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport default function Buttons(props: IWizardButtonsProps) {\n  const { backLabel = 'Back', nextLabel = 'Next', onNext, onBack } = props;\n  const [loading, setLoading] = React.useState(false);\n  const { palette } = useAppSelector((root) => root.global);\n\n  const onNextPress = React.useCallback(async () => {\n    try {\n      await onNext?.();\n    } catch {\n      return undefined;\n    } finally {\n      setLoading(false);\n    }\n\n    return undefined;\n  }, [onNext]);\n\n  return (\n    <View style={styles.actions}>\n      {onNextPress && (\n        <Button\n          disabled={loading}\n          loading={loading}\n          onPress={onNextPress}\n          style={[styles.next, { backgroundColor: palette.placeholder }]}\n          mode=\"contained\"\n        >\n          {nextLabel || 'Next'}\n        </Button>\n      )}\n      {onBack && (\n        <Button style={styles.back} disabled={loading} mode=\"text\" onPress={onBack}>\n          {backLabel}\n        </Button>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n    width: '100%',\n    maxWidth: 500,\n    height: 80,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n    minHeight: 36,\n  },\n  back: {\n    minHeight: 36,\n  },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { useNavigation } from '@react-navigation/core';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\nimport Buttons from './Buttons';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const navigation = useNavigation();\n  const [dimensions, setDimensions] = React.useState<LayoutRectangle>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n  const screen = useWindowDimensions();\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  const onNext = React.useCallback(\n    async function WizardNextStep() {\n      if (steps[currentIndex]?.onNext) {\n        await steps[currentIndex]?.onNext?.(navigation);\n      }\n      if (currentIndex === steps.length - 1) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.next();\n        setIndex(currentIndex + 1);\n      }\n\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onBack = React.useCallback(\n    async function WizardBackStep() {\n      steps[currentIndex]?.onBack?.();\n      if (currentIndex === 0) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.prev();\n        setIndex(currentIndex - 1 || 0);\n      }\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const { width, height } = dimensions;\n\n  return (\n    <KeyboardAvoidingView\n      style={StyleSheet.absoluteFill}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      {...{ onLayout }}\n    >\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <Carousel\n        autoPlay={false}\n        loop={false}\n        modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n        pagingEnabled={false}\n        enabled={false}\n        panGestureHandlerProps={{\n          // Disable swiping\n          activeOffsetX: [-width, width],\n        }}\n        mode=\"parallax\"\n        style={StyleSheet.absoluteFill}\n        data={steps}\n        width={width || screen.width}\n        onSnapToItem={setIndex}\n        ref={carouselRef}\n        renderItem={({ item }) => {\n          if (!item) {\n            return <View />;\n          }\n          const { component: Step } = item;\n          return (\n            <Step\n              actions={\n                <Buttons\n                  nextLabel={currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n                  backLabel=\"Back\"\n                  onNext={onNext}\n                  onBack={onBack}\n                />\n              }\n            />\n          );\n        }}\n      />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 48,\n    zIndex: 1100,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  const { password } = useWatch({ control });\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <FormTextField\n          name=\"password\"\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(password)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"email\"\n          mode=\"flat\"\n          label=\"Email\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          name=\"passwordConfirmation\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\n\nexport interface SignUpFields {\n  email: string;\n  name: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport const signUpValidation = yup.object().shape({\n  name: yup.string().default(''),\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .test({\n      test: (value) => checkPasswordComplexity(value || '') >= PasswordStrength.Acceptable,\n      message: 'Password is too weak',\n      name: 'password-complexity',\n    }),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match')\n    .required('Please type the password again'),\n});\n\nexport const EMPTY_FORM_VALUES: SignUpFields = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nexport interface ISignUpFormOpts {\n  initial?: Partial<SignUpFields>;\n  onSuccess?(): void;\n}\n\nenum SignUpSteps {\n  Email,\n  Password,\n  PasswordConfirmation,\n}\n\nexport default function useSignupForm(opts: ISignUpFormOpts) {\n  const { onSuccess } = opts;\n  const [loading, setLoading] = React.useState(false);\n  const globalState = useAppSelector((root) => root.global);\n\n  const [step, setStep] = React.useState(SignUpSteps.Email);\n\n  const notify = useNotifications();\n  const methods = useForm<SignUpFields>({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n  });\n\n  React.useEffect(() => {\n    methods.reset(EMPTY_FORM_VALUES);\n  }, [methods]);\n  const { setError } = methods;\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const onSubmit = React.useCallback(\n    async (fields: SignUpFields) => {\n      try {\n        const { data } = await onSignUp({\n          variables: {\n            pushToken: globalState.expoPushToken,\n            email: fields.email,\n            name: fields.name,\n            password: fields.password,\n            exitWeight: 60,\n            phone: '',\n            passwordConfirmation: fields.passwordConfirmation,\n          },\n        });\n\n        if (data?.userRegister?.fieldErrors) {\n          data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof SignUpFields, { type: 'custom', message });\n          });\n        }\n        if (data?.userRegister?.authenticatable?.id) {\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n          throw new Error();\n        }\n      }\n    },\n    [onSignUp, globalState.expoPushToken, setError, onSuccess, notify]\n  );\n\n  const onNext = React.useCallback(\n    async function FormNext() {\n      try {\n        setLoading(true);\n        const validated = await signUpValidation.validate(methods.getValues(), {\n          abortEarly: false,\n        });\n        console.debug({ validated });\n\n        if (step === SignUpSteps.PasswordConfirmation) {\n          await onSubmit(validated);\n        }\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          console.debug({ inner: error.inner });\n          error.inner.forEach((validationError) => {\n            switch (step) {\n              case SignUpSteps.Email:\n                if (validationError.path === 'email') {\n                  setError('email', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.Password:\n                if (validationError.path === 'password') {\n                  setError('password', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.PasswordConfirmation:\n                if (validationError.path === 'passwordConfirmation') {\n                  setError('passwordConfirmation', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              default:\n                break;\n            }\n          });\n          setStep(step + 1);\n        } else {\n          throw error;\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [methods, onSubmit, setError, step]\n  );\n\n  return React.useMemo(() => ({ ...methods, onNext, loading }), [methods, onNext, loading]);\n}\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { FormProvider } from 'react-hook-form';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useNavigation } from '@react-navigation/core';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\nimport useSignupForm from './useForm';\n\nexport default function SignupWizard() {\n  const notify = useNotifications();\n  const navigation = useNavigation();\n  const { onNext, ...methods } = useSignupForm({\n    onSuccess: () => {\n      notify.success('A confirmation link has been sent to your email');\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n    },\n  });\n  return (\n    <FormProvider {...methods}>\n      <Wizard\n        dots\n        steps={[\n          { onNext, component: EmailStep },\n          { onNext, component: PasswordStep },\n          { onNext, component: PasswordConfirmationStep },\n          { component: DoneStep },\n        ]}\n      />\n    </FormProvider>\n  );\n}\n","import * as React from 'react';\nimport { Screen } from 'app/components/layout';\nimport SignupWizard from 'app/forms/sign_up/SignupWizard';\n\nexport default function SignupScreen() {\n  return (\n    <Screen>\n      <SignupWizard />\n    </Screen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.dispatch(\n      StackActions.replace('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: {\n            screen: 'ManifestScreen',\n          },\n        },\n      })\n    );\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: notify.error,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id?.toString(),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id,\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: userForm?.original?.id,\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, FlatList, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment, DropzoneUsersQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport omitBy from 'lodash/omitBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: omitBy<DropzoneUsersQueryVariables>(\n      {\n        dropzoneId: dropzone?.id as string,\n        search: state.searchText,\n      },\n      isEmpty\n    ) as DropzoneUsersQueryVariables,\n    skip: !dropzone?.id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  console.debug({ users, numColumns });\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{\n                margin: 0,\n                marginVertical: 0,\n                borderRadius: 2,\n                width: `${100 / numColumns}%`,\n              }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={dialogs.createUser.open}\n          label=\"Add user\"\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke(permission)\n                : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          dropzoneUserId: state.original?.id as string,\n          attributes: {\n            userRoleId: Number(state.fields.role.value?.id),\n            expiresAt: state.fields.expiresAt.value,\n          },\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        owner {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('is required')],\n    model: [isRequired('is required')],\n    serial: [isRequired('number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success(`Profile has been updated`);\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: state.original?.id,\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n\n  console.log('image', dropzoneUser?.user?.image);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            <UserAvatar\n              image={dropzoneUser?.user?.image}\n              name={dropzoneUser?.user?.name}\n              size={80}\n            />\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.buyer as DropzoneUser)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: dropzoneUser?.id,\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone },\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                },\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport { View } from 'react-native';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n          {value?.user?.name || 'No gca'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          onChange={onSelect}\n          renderAnchor={renderAnchor}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n          {value?.user?.name || 'No LM'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          renderAnchor={renderAnchor}\n          onChange={onSelect}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"account-tie-hat\"\n      >\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 146 }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 146 }}>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"airplane\"\n      >\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 100 }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 100 }}>\n      <Select<PlaneEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={{ maxWidth: 128 }}>\n            <RigSelect\n              small\n              variant=\"chip\"\n              dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n              onChange={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers/manifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction },\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } }),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport { DateTime } from 'luxon';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && DateTime.fromSeconds(load.dispatchAt) > DateTime.local() ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const {\n    load: { load },\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  scrollable?: boolean;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    fields,\n    onDeletePress,\n    scrollable = false,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={scrollable ? { height: '100%' } : undefined}>\n      <DataTable style={scrollable ? { height: '100%', paddingBottom: 80 } : undefined}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map(\n            (_, index) => load?.slots?.[index] || null\n          )}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow\n                {...{ onPress: onAvailableSlotPress }}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`slot-available-${index}`}\n                index={index}\n              />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport { Screen } from 'app/components/layout';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n/**\n *\n *\n * @returns\n */\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <Screen fullWidth scrollable={Platform.OS !== 'web'}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        scrollable={Platform.OS === 'web'}\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </Screen>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n  ]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers/manifest';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers/load';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        maxWidth: 450,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <ScrollView\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n          horizontal\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    maxWidth: 450,\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      update,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          scrollable={Platform.OS === 'web'}\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8, marginVertical: 16 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Master Log\"\n          disabled\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"View historic data for daily operations. Temporarily disabled\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'MasterLogScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveTicketHandler(ticketType),\n              }}\n            >\n              <DataTable.Row\n                onPress={() => {\n                  dialogs.ticketType.open({ original: ticketType });\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n                <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n                <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <View pointerEvents=\"box-none\">\n                    <Switch\n                      onValueChange={createToggleManifestSelfHandler(ticketType)}\n                      value={!!ticketType.allowManifestingSelf}\n                    />\n                  </View>\n                </DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          </View>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onChange={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const {\n    dropzone: { dropzone, loading },\n  } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) => notify.error(message),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        notify.success(`Your settings have been saved`);\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id, notify]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm loading={loading} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <View style={{ height: 46 }}>\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: createArchiveAircraftHandler(plane),\n                }}\n              >\n                <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            </View>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    notify,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { Query } from 'app/api/schema.d';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: ID!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n              user {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          value={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.dropzoneUser?.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables, fetchPolicy: 'cache-and-network' });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      <FlatList\n        ListEmptyComponent={() => (\n          <View style={styles.empty}>\n            <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n          </View>\n        )}\n        contentContainerStyle={styles.content}\n        onRefresh={fetchNotifications}\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        refreshing={loading}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={StyleSheet.absoluteFill}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://www.openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  User: {\n                    screens: {\n                      EquipmentScreen: '/dropzone/manifest/users/:userId/equipment/',\n                      OrderReceiptScreen:\n                        '/dropzone/manifest/users/:userId/orders/:orderId/receipts',\n                      ProfileScreen: '/dropzone/manifest/users/:userId',\n                      OrdersScreen: '/dropzone/manifest/users/:userId/orders',\n                      RigInspectionScreen:\n                        '/dropzone/manifest/users/:dropzoneUserId/rig/:rigId/inspection',\n                      UserListScreen: '/dropzone/manifest/users',\n                    },\n                  },\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";"],"sourceRoot":""}