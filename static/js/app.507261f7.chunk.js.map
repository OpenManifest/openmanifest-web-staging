{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/LottieView.web.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/hooks/useRestriction.ts","app/api/reflection.tsx","app/api/crud/useManifest.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/hooks/useManifestValidator.ts","app/providers/notifications/context.ts","app/providers/notifications/provider.tsx","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/api/crud/factory.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/providers/dropzone/context.ts","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/index.ts","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/index.ts","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/index.ts","app/forms/ticket_type_addon/Dialog.tsx","app/providers/hooks/useDialog.tsx","app/providers/dropzone/provider.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/manifest/context.ts","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/components/Divider.tsx","app/screens/unauthenticated/login/FacebookButton.web.tsx","app/screens/unauthenticated/login/AppleButton.web.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Wizard.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/logo.png","assets/images/night.png","assets/images/weather.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AppSignalClient","Appsignal","key","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentDropzoneId","currentDropzone","currentUserId","currentUser","INITIAL_CONTEXT","appSignal","tags","setTags","noop","AppSignalContext","React","useAppSignalContext","ErrorBoundary","props","state","error","undefined","errorInfo","console","this","Fallback","fallback","children","LottieView","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","height","width","SafeAreaView","style","position","top","left","alignItems","justifyContent","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","source","twigBreakAnimation","autoPlay","loop","HelperText","type","message","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","mode","AppSignalBoundary","instance","errorBoundaryRef","current","ref","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","value","onTagsChanged","span","isEqual","addDecorator","Provider","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","DropzoneWizardStep","initialState","original","open","fields","federation","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","action","payload","field","setFieldError","setOpen","Object","keys","forEach","payloadKey","typedKey","setOriginal","reset","role","expiresAt","exitWeight","email","phone","license","setFederation","user","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","log","Error","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","rigs","length","first","availableRigs","avatar","image","apfNumber","nickname","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","dropzone","ghost","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","close","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","permissions","credentials","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","useRestriction","permission","useDropzoneContext","includes","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","TicketTypeAddonEssentialsFragmentDoc","TicketTypeDetailsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","TicketTypeAddonDetailsFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateAircraftDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreateRigDocument","CreateRigInspectionDocument","CreateTicketAddonDocument","CreateTicketTypeDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","Apollo","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateAircraftDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","useUpdateDropzoneUserMutation","UpdateLoadDocument","UpdateLostPasswordDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketAddonDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","useTicketTypesQuery","useManifest","date","root","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","query","useLoadsQuery","initialFetchPolicy","variables","DateTime","utc","toISODate","skip","accessToken","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","fetchMore","refetch","data","called","updateQuery","moveSlot","sourceLoad","mutationVariables","result","refetchQueries","targetLoad","toString","fieldErrors","errors","loads","manifestUser","createSlot","createSlots","deleteSlot","createLoad","prev","edges","node","__typename","edge","styles","StyleSheet","create","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","DialogOrSheet","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","visible","Typography","variant","marginBottom","IconButton","icon","size","View","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","rest","defaultValue","render","onChange","onBlur","formState","TextField","helperText","setText","onChangeText","TextInput","flatten","surface","NumberFieldType","FormTextField","flex","adornments","Cash","CanopySize","Weight","muiVariants","flat","outlined","NumberField","label","onChangeValue","e","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","some","selected","margin","stringify","ChipSelectComponent","previous","next","pick","ChipSelectField","defaultColors","ThemedSkeleton","boneColor","Color","negate","rgb","highlightColor","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","requiredPermissions","onLoadingStateChanged","dropzoneId","onChangeSelected","getItemLabel","filter","Boolean","Subheader","uniqBy","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","allowedForDropzoneUserIds","onError","allowedJumpTypes","jumpTypes","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","PlaneChipSelect","planes","plane","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","ticketTypes","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","split","n","join","Image","uri","Text","stringToColor","string","hash","charCodeAt","substr","initials","Avatar","sx","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","event","currentTarget","TouchableOpacity","pointerEvents","anchorOrigin","vertical","transformOrigin","Select","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","labelId","paddingTop","SelectDisplayProps","val","RigSelect","dropzoneUserId","loadId","tandem","useAvailableRigsLazyQuery","fetchPolicy","fetchRigs","isTandem","RigSelectField","ManifestForm","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","schema","yup","shape","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","canManifest","validate","abortEarly","ValidationError","NotificationContext","useNotifications","AnimationState","NotificationsProvider","queue","setQueue","successAnimation","closed","animationState","setAnimationState","notification","opening","notify","newNotification","last","onHide","newQueue","onAnimationFinish","waiting","setTimeout","Toast","show","text1","context","absoluteFillObject","speed","animation","lottieDoneAnimation","autoHide","visibilityTime","manifestUserValidation","required","min","max","nullable","of","EMPTY_FORM_VALUES","ManifestUserDialog","onSuccess","opts","initial","initialValues","defaultValues","setDefaultValues","methods","useForm","resolver","yupResolver","handleSubmit","setError","useManifestContext","useAsyncFn","response","onManifest","onSubmit","portal","usePortal","removePortal","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","gca","pilot","maxSlots","isOpen","LoadDialog","setValue","validatedFields","validateSync","Open","loadNumber","snapPoints","scrollable","CreditsForm","amount","subtotal","Deposit","credits","Withdrawal","DataTable","Row","Cell","numeric","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","useContext","useDropzone","vars","useDropzoneQuery","queryVariables","permissionsVariables","useCurrentUserPermissionsQuery","useDropzonesQuery","useUpdateVisibilityMutation","updateVisibilityMutation","useAppSignal","updateVisibility","sendError","dropzones","DropzonesProvider","useDropzonesContext","isRequired","pattern","isEmail","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","msg","startCase","mopts","hasErrors","x","variable","validator","test","requestAnimationFrame","updateLoad","useLoad","useLoadQuery","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","update","useMutationUpdateLoad","validatedPayload","dispatchInMinutes","minutes","dispatchTime","local","plus","toISO","dispatchAt","BoardingCall","updateLoadState","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","loadMaster","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","time","fromSeconds","dialogs","aircraft","ticketTypeAddon","DropzoneContext","AircraftForm","aircraftValidation","registration","minSlots","integer","basicEmptyWeight","maxTakeOffWeight","fuelType","shouldUnregister","register","useAircrafts","validated","onCreateOrder","useAircraftForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","FederationSelect","federations","JumpTypeSelect","LicenseSelect","PlaneSelect","onCHange","RoleSelect","roles","a","b","TicketTypeSelect","allowManifestingSelf","Switch","Item","preventDefault","stopPropagation","SwitchField","TicketTypeForm","altitude","useTicketTypeExtrasLazyQuery","getTicketAddons","ticketTypeValidation","useTickets","createTicketType","updateTicketType","extraIds","selectedTicketTypes","ticketAddonValidation","createTicketTypeAddon","updateTicketTypeAddon","ticketTypeIds","onSave","createUseDialog","defaults","setState","newState","useAircraftDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","useUserProfile","updateMutation","getProfile","useCreateOrderMutation","mutationCreateOrder","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","attributes","updateDropzoneUser","createOrder","cache","mutationResult","order","buyer","writeFragment","fragment","fragmentName","identify","seller","addCredits","walletId","withdrawCredits","useRevokePermissionMutation","revoke","useGrantPermissionMutation","grant","grantPermission","permissionName","revokePermission","useCreateTicketTypeMutation","createTicket","useUpdateTicketTypeMutation","updateTicket","useArchiveTicketTypeMutation","archiveTicket","useCreateTicketAddonMutation","createAddon","useUpdateTicketAddonMutation","updateAddon","createExtra","updateExtra","archiveTicketType","optimisticResponse","mutationData","evict","useCreateAircraftMutation","createAircraft","useUpdateAircraftMutation","updateAircraft","useArchivePlaneMutation","archiveAircraft","createPlane","archive","deletePlane","aircrafts","orderValidation","oneOf","values","DropzoneUserDialog","useCreditsForm","defaultIndex","onChangeIndex","newIndex","form","paddingHorizontal","ManifestContext","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","manifestUserDialog","loadDialog","creditsDialog","TimePicker","timestamp","onDismissSingle","onConfirm","getTime","timestampLabel","format","description","Icon","Modal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","then","withLoadContext","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","currentSessionTags","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","operation","definitions","q","kind","createBreadCrumb","category","operationName","Math","floor","Date","metadata","createAppSignalErrorLink","client","createErrorLink","graphQLErrors","ignore","filteredErrors","breadcrumb","loc","body","print","statusCode","addBreadcrumb","AppSignalBreadcrumbLink","forward","Observable","originalObserver","subscription","subscribe","omit","unsubscribe","ApolloLink","ERROR_CODE_WHITELIST","httpBatchLink","Update","environment","urls","url","BatchHttpLink","batchDebounce","batchMax","dispatch","errorLink","networkError","extensions","code","process","EXPO_ENV","locations","path","nodes","authLink","setContext","_","headers","Authorization","tokenType","appSignalLink","from","createAppSignalLink","link","ApolloClient","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloProvider","EntrypointWrapper","absoluteFill","token","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","updateUser","Device","registerForPushNotificationsAsync","request","Linking","addEventListener","removeEventListener","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","onUpdate","play","isNew","isUpdateAvailable","isAvailable","blur","intensity","fontSize","bottom","ImageViewer","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","empty","Paragraph","fab","DropzonesScreen","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","GradientText","opacity","Fields","KeyboardAvoidingView","behavior","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","dots","Dots","count","Array","activeDot","inactiveDot","marginLeft","WizardRoot","WizardModal","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","headerStyleInterpolator","HeaderStyleInterpolators","forFade","cardStyleInterpolator","layouts","transform","translateX","progress","interpolate","inputRange","outputRange","scale","overlayStyle","nextIndex","nextIndexFactor","onNext","goBack","backIndexFactor","onBack","Wizard","presentation","PasswordStrength","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","textContentType","secureTextEntry","passwordRules","newValue","PasswordComplexityIndicator","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","RegExp","validatePassword","onClickSignUp","licenseId","userRegister","divider","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","LoginScreen","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","emailRegex","hasError","userLogin","backgroundDark","backgroundLight","resizeMode","logoLight","logoDark","logo","card","elevation","animationContainer","loadingAnimation","onSubmitEditing","labelStyle","forgotPasswordDark","forgotPassword","textButtonLabel","borderWidth","ScrollView","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","SignupScreen","useMutationSignUp","ScrollableScreen","separator","Unauthenticated","SignUpScreen","carouselRef","getCurrentIndex","scrollTo","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","enabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","createDropzone","updateDropzone","active","itemSelected","FederationCardSelect","onSelect","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","onLayout","nativeEvent","y","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","zIndex","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Animated","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","canChangePermissions","useUpdateRoleMutation","mutationUpdatePermission","onValueChange","roleId","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","capitalize","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","Logo","pickImage","onPickImage","DropzoneSetupScreen","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","onFederationNumberNext","onLicenseNext","onRigNext","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","onFinished","GhostForm","ticketAddons","createGhost","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","ghostForm","canCreateUser","CreateUser","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","inputContainer","input","AppBar","onSearch","back","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","centerAlignedContent","SwipeActions","rightAction","Swipeable","renderRightActions","dragX","childrenContainerStyle","useNativeAnimations","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsLoadMaster","PermissionBadges","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","useApolloClient","getCachedUser","readFragment","mutationUpdateDropzoneUser","createData","userRoleId","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","OrderCard","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","round","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","DrawerActions","closeDrawer","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","truncate","LoadMasterChip","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","profile","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","isAfter","AvailableRow","useCallback","SlotsTable","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadScreen","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","loadingAircrafts","loadingTickets","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","createToggleManifestSelfHandler","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","useQuery","masterLog","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","ExtrasScreen","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","notifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","dimensions","setDimensions","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","endDate","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","UserListScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","remove","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"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","file":"static/js/app.507261f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt?: Maybe<Scalars['ISO8601DateTime']>;\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\nimport { User } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email'> &\n  Pick<DropzoneUserDetailsFragment, 'role' | 'license'>;\n\ninterface IGhostEditState {\n  original: UserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (\n      state: IGhostEditState,\n      action: PayloadAction<FederationEssentialsFragment>\n    ) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IGhostEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license' || typedKey === 'role') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as ghost from './ghost/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  ghost: ghost.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  ghost: ghost.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useDropzoneContext } from 'app/providers';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n  updateDropzoneUser(\n    input: {id: $dropzoneUserId, attributes: {userRoleId: $userRoleId, expiresAt: $expiresAt}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      userRoleId: // value for 'userRoleId'\n *      expiresAt: // value for 'expiresAt'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: Int, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  dropzone(id: $dropzone) {\n    id\n    ticketTypes(isPublic: $onlyPublicTickets) {\n      ...ticketTypeDetails\n    }\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.utc().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button\n          mode=\"contained\"\n          disabled={loading}\n          {...{ loading }}\n          onPress={buttonAction}\n          style={styles.button}\n        >\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(\n  Component: React.ComponentType<BaseProps>\n) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, formState: { errors } }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onChange, onBlur }}\n            error={errors?.[name]?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const {\n    label,\n    requiredPermissions,\n    icon,\n    value,\n    variant,\n    error,\n    onLoadingStateChanged,\n    onChange,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.dropzone?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => onChange(target.value as T)}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <MuiMenuItem value={val as T}>\n            {!icon || avatar ? null : (\n              <ListItemIcon>\n                {typeof icon === 'string' ? (\n                  <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                ) : null}\n                {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n              </ListItemIcon>\n            )}\n            {!avatar || !showAvatars ? null : (\n              <ListItemAvatar>\n                <UserAvatar name={label} image={avatar} size={32} />\n              </ListItemAvatar>\n            )}\n            <ListItemText primary={title} />\n          </MuiMenuItem>\n        ))}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import { useDropzoneContext } from 'app/providers';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(\n    () => ({ notify, success, error, info }),\n    [error, info, notify, success]\n  );\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const manifestUserValidation = yup.object().shape({\n  load: yup.object().required(),\n  exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n  rig: yup.object().required('You cant manifest without a rig').nullable(),\n  jumpType: yup.object().required('Jump type is required').nullable(),\n  ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n  original: yup.object().nullable(),\n  extras: yup.array().of(yup.object()).nullable(),\n});\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight,\n              }),\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined,\n    },\n    onSuccess,\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<\n  Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>\n> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: Number(validatedFields.gca?.id),\n          state: LoadState.Open,\n          pilot: Number(validatedFields.pilot?.id),\n          plane: Number(validatedFields.plane?.id),\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name,\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useCurrentUserPermissionsQuery, useDropzoneQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useDropzoneQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const permissions = useCurrentUserPermissionsQuery({\n    variables: permissionsVariables as CurrentUserPermissionsQueryVariables,\n    skip: !permissionsVariables?.dropzoneId,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { useDropzonesQuery, useUpdateVisibilityMutation } from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const query = useDropzonesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken,\n  });\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema.d';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useFinalizeLoadMutation, useLoadQuery, useManifestUserMutation } from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const notify = useNotifications();\n  const query = useLoadQuery({\n    initialFetchPolicy: 'cache-first',\n    variables: variables as LoadQueryVariables,\n    skip: !variables?.id,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () => notify.success(`Load #${load?.loadNumber} updated`),\n    onError: (message) => notify.error(message),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud';\nimport { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup\n    .number()\n    .integer()\n    .required('Maximum slots is required')\n    .min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup\n    .number()\n    .default(0)\n    .min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined,\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(field, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import Dialog from './Dialog';\nimport AircraftForm from './AircraftForm';\nimport useAircraftForm from './useForm';\n\nexport { AircraftForm, useAircraftForm };\n\nexport default Dialog;\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map((node) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onChange={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              onChange?.(e.value);\n            }}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import Dialog from './Dialog';\nimport TicketTypeForm from './TicketTypeForm';\nimport useTicketTypeForm from './useForm';\n\nexport { TicketTypeForm, useTicketTypeForm };\n\nexport default Dialog;\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [\n      dropzone?.id,\n      setError,\n      notify,\n      onSuccess,\n      createTicketTypeAddon,\n      updateTicketTypeAddon,\n      defaultValues,\n    ]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import Dialog from './Dialog';\nimport TicketTypeAddonForm from './TicketAddonForm';\nimport useTicketTypeAddonForm from './useForm';\n\nexport { TicketTypeAddonForm, useTicketTypeAddonForm };\n\nexport default Dialog;\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud';\nimport AircraftSheet from 'app/forms/aircraft';\nimport TicketTypeSheet from 'app/forms/ticket_type';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon }),\n    [aircraft, ticketType, ticketTypeAddon]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  useUpdateDropzoneUserMutation,\n} from '../reflection';\nimport { Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateDropzoneUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  React.useEffect(() => {\n    if (id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [getProfile, id, query?.variables?.id]);\n\n  const update = React.useCallback(\n    async function UpdateDropzoneUser(\n      attributes: UpdateDropzoneUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          ...attributes,\n        },\n      });\n\n      if (data?.updateDropzoneUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateDropzoneUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateDropzoneUser?.errors?.[0],\n        fieldErrors: data?.updateDropzoneUser?.fieldErrors || undefined,\n      };\n    },\n    [updateMutation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes,\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order.buyer.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer,\n                });\n              } else if (order.seller.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller,\n                });\n              }\n            }\n          },\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Added funds`,\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Withdrew funds`,\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined,\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined,\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      update,\n      addCredits,\n      grantPermission,\n      revokePermission,\n      withdrawCredits,\n    }),\n    [\n      addCredits,\n      grantPermission,\n      query?.refetch,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits,\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(\n  useUserProfile,\n  {\n    loading: false,\n    dropzoneUser: null,\n    refetch: uninitializedHandler as never,\n    update: uninitializedHandler as never,\n    addCredits: uninitializedHandler as never,\n    withdrawCredits: uninitializedHandler as never,\n    grantPermission: uninitializedHandler as never,\n    revokePermission: uninitializedHandler as never,\n  }\n);\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useTicketTypesQuery,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useTicketTypesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzone,\n  });\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  usePlanesQuery,\n  PlanesDocument,\n  useArchivePlaneMutation,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = usePlanesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser,\n  });\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport { ICreditsSheet } from 'app/forms/credits/Credits';\nimport { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date, children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud';\nimport { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: { loading: false, mutate: uninitializedHandler as never },\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport config from 'app/constants/expo';\nimport { Platform } from 'react-native';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\nimport { relayStylePagination } from '@apollo/client/utilities';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const notify = useNotifications();\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Release channel', Update.releaseChannel);\n    const environment = Platform.OS === 'web' ? config?.environment : Update.releaseChannel;\n    const uri = environment in (config?.urls || {}) ? config?.urls[environment] : config?.url;\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          notify.info(`Session expired`);\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          notify.error(`[Network error]: ${networkError}`);\n        }\n      }),\n    [dispatch, notify]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const { appSignal } = useAppSignal();\n  const appSignalLink = React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n\n  const link = React.useMemo(\n    () => ApolloLink.from([errorLink, appSignalLink, authLink, httpBatchLink]),\n    [appSignalLink, authLink, errorLink, httpBatchLink]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link,\n        cache: new InMemoryCache({\n          typePolicies: {\n            Event: relayStylePagination(),\n            DropzoneUsers: relayStylePagination(),\n            Loads: relayStylePagination(),\n          },\n        }),\n      }),\n    [link]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import Constants from 'expo-constants';\nimport * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: Number(currentUser.id),\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width || 0, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return <WizardRoot.Screen name={`${name}${index}`}>{() => <Step />}</WizardRoot.Screen>;\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  // @ts-ignore These are dynamically created screens\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                // @ts-ignore These are dynamically created screens\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator screenOptions={{ headerShown: false, presentation: 'modal' }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userRegister?.fieldErrors?.length) {\n        result?.data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import * as React from 'react';\nimport {\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Card, Button, HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\nimport FacebookButton, { useLoginWithFacebook } from './FacebookButton';\nimport AppleButton, { useLoginWithApple } from './AppleButton';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    }\n  }, [dispatch, mutationLogin, notify, state.fields.email.value, state.fields.password.value]);\n\n  const loading =\n    loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading;\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={theme.dark ? logoLight : logoDark} style={styles.logo} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={styles.card} elevation={3}>\n          <Card.Content>\n            {loading ? (\n              <View style={styles.animationContainer}>\n                <LottieView\n                  autoPlay\n                  loop\n                  style={styles.loadingAnimation}\n                  // eslint-disable-next-line global-require\n                  source={require('../../../../assets/images/loading.json')}\n                />\n              </View>\n            ) : (\n              <>\n                <TextInput\n                  label=\"Email\"\n                  mode=\"outlined\"\n                  value={state.fields.email.value}\n                  disabled={loading}\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setEmail(newValue));\n                  }}\n                />\n                <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n                <TextInput\n                  label=\"Password\"\n                  mode=\"outlined\"\n                  disabled={loading}\n                  value={state.fields.password.value}\n                  secureTextEntry\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setPassword(newValue));\n                  }}\n                  onSubmitEditing={onLogin}\n                  error={!!state.fields.password.error}\n                />\n\n                <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n              </>\n            )}\n            <Button\n              mode=\"contained\"\n              disabled={loading}\n              labelStyle={{ color: theme.colors.onSurface }}\n              style={[\n                styles.button,\n                { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n              ]}\n              onPress={onLogin}\n            >\n              {loading ? 'Authenticating...' : 'Log in'}\n            </Button>\n            {loading ? null : (\n              <TouchableOpacity\n                onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n              >\n                <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n                  Forgot your password?\n                </Text>\n              </TouchableOpacity>\n            )}\n\n            <Divider>or</Divider>\n            <FacebookButton\n              disabled={loading}\n              style={{ marginTop: 8 }}\n              onPress={loginWithFacebook}\n            />\n\n            <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpWizard' })}\n            >\n              Sign up\n            </Button>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginTop: 8,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserRegisterArgs, SignUpPayload } from '../schema.d';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserRegisterArgs, SignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userRegister,\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      notify.success('A confirmation link has been sent to your email');\n\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Email\"\n          error={state.fields.email.error}\n          value={state.fields.email.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['email', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Repeat password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChange={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n    </Stack.Navigator>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Carousel\n          autoPlay={false}\n          loop={false}\n          modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n          pagingEnabled={false}\n          enabled={false}\n          panGestureHandlerProps={{\n            // Disable swiping\n            activeOffsetX: [-width, width],\n          }}\n          style={{ height: '80%' }}\n          mode=\"parallax\"\n          data={steps}\n          width={width}\n          onSnapToItem={setIndex}\n          ref={carouselRef}\n          renderItem={({ item }) => {\n            if (!item) {\n              return <View />;\n            }\n            const { component: Step } = item;\n            return <Step />;\n          }}\n        />\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  carouselRef?.current?.next();\n                  setIndex(currentIndex + 1);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                carouselRef?.current?.prev();\n                setIndex(currentIndex - 1 || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.goBack();\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: notify.error,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: Number(userForm?.original?.id),\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function GhostForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostDocument } from '../reflection';\nimport { CreateGhostMutation, CreateGhostMutationVariables } from '../operations';\n\nexport default createMutation<\n  CreateGhostMutationVariables,\n  Required<CreateGhostMutation>['createGhost']\n>(CreateGhostDocument, {\n  getPayload: (result) => result.createGhost,\n  validates: {\n    exitWeight: [\n      isRequired('Exit weight must be provided'),\n      isNumeric('Please enter a valid number'),\n    ],\n    email: [\n      isRequired('Please provide a valid email address'),\n      isEmail('Please provide a valid email address'),\n    ],\n    name: [isRequired('Name is required')],\n\n    role: [isRequired('You must select a role')],\n  },\n  fieldErrorMap: {\n    exitWeight: 'exit_weight',\n  },\n});\n","import * as React from 'react';\nimport { useNotifications } from 'app/providers/notifications';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        notify.success(`${payload?.user?.name} has been added to your dropzone`);\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) => notify.error(error),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzone: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      role: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport CreateGhostDialog from 'app/components/dialogs/Ghost';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: global.currentDropzoneId?.toString() as string,\n      search: state.searchText,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, fullWidth = false, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background, height: height - 56 * 2 },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth ? undefined : { width: width < 920 ? '100%' : 920 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke(permission)\n                : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success(`Profile has been updated`);\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(state.original?.id),\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.buyer as DropzoneUser)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: Number(dropzoneUser?.id),\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone },\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                },\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      onChange={onSelect}\n      renderAnchor={renderAnchor}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n      {value?.user?.name || 'No LM'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"account-tie-hat\">\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"airplane\">\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <Select<PlaneEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <RigSelect\n            small\n            variant=\"chip\"\n            dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n            onChange={onChangeRig}\n            value={selectedRig}\n            tandem={isTandem}\n            autoSelectFirst\n          />\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction },\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } }),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const {\n    load: { load },\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const { load, fields, onDeletePress, onAvailableSlotPress, onSlotGroupPress, onSlotPress } =\n    props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={{ height: '100%' }}>\n      <DataTable style={{ height: '100%', paddingBottom: 80 }}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map(\n            (_, index) => load?.slots?.[index] || null\n          )}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow\n                {...{ onPress: onAvailableSlotPress }}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`slot-available-${index}`}\n                index={index}\n              />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <View style={{ height: '100%', backgroundColor: theme.colors.background }}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n  ]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      update,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'MasterLogScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: createArchiveTicketHandler(ticketType),\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dialogs.ticketType.open({ original: ticketType });\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <View pointerEvents=\"box-none\">\n                  <Switch\n                    onValueChange={createToggleManifestSelfHandler(ticketType)}\n                    value={!!ticketType.allowManifestingSelf}\n                  />\n                </View>\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onChange={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const {\n    dropzone: { dropzone, loading },\n  } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) => notify.error(message),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        notify.success(`Your settings have been saved`);\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id, notify]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm loading={loading} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <SwipeActions\n              key={`plane-${plane.id}`}\n              disabled={!canDeletePlane}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveAircraftHandler(plane),\n              }}\n            >\n              <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                <DataTable.Cell>{plane.name}</DataTable.Cell>\n                <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    notify,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { Query } from 'app/api/schema.d';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: ID!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n              user {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          value={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.dropzoneUser?.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      {data?.dropzone?.currentUser?.notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";"],"sourceRoot":""}